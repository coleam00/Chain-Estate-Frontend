{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_airDropContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidityWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_realEstateWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_marketingWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_developerWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouterAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airDropContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "airDropInvestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractCHESDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disperseFeesManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "excludeUserFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "includeUsersInFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realEstateTransactionFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realEstateWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDivisor",
          "type": "uint256"
        }
      ],
      "name": "setContractCHESDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "23": "contracts/ChainEstateTokenV1.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "42": "interfaces/Uniswap.sol"
  },
  "ast": {
    "absolutePath": "contracts/ChainEstateTokenV1.sol",
    "exportedSymbols": {
      "ChainEstateTokenV1": [
        4510
      ],
      "Context": [
        11654
      ],
      "ERC20": [
        11024
      ],
      "IERC20": [
        12212
      ],
      "IERC20Metadata": [
        12237
      ],
      "IUniswapV2Factory": [
        11036
      ],
      "IUniswapV2Pair": [
        11040
      ],
      "IUniswapV2Router01": [
        11097
      ],
      "IUniswapV2Router02": [
        11157
      ],
      "Ownable": [
        9125
      ]
    },
    "id": 4511,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3849,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:31:23"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4511,
        "sourceUnit": 11025,
        "src": "68:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4511,
        "sourceUnit": 9126,
        "src": "124:52:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/Uniswap.sol",
        "file": "../interfaces/Uniswap.sol",
        "id": 3852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4511,
        "sourceUnit": 11158,
        "src": "177:35:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3854,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11024,
              "src": "493:5:23"
            },
            "id": 3855,
            "nodeType": "InheritanceSpecifier",
            "src": "493:5:23"
          },
          {
            "baseName": {
              "id": 3856,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9125,
              "src": "500:7:23"
            },
            "id": 3857,
            "nodeType": "InheritanceSpecifier",
            "src": "500:7:23"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3853,
          "nodeType": "StructuredDocumentation",
          "src": "214:247:23",
          "text": " @title Chain Estate DAO Token (V1)\n @dev Main contract for Chain Estate DAO\n TODO - Limit how many tokens users can purchase from PancakeSwap\n TODO - Will possibly create the BNB to CHES token PankcakeSwap pair in the constructor."
        },
        "fullyImplemented": true,
        "id": 4510,
        "linearizedBaseContracts": [
          4510,
          9125,
          11024,
          12237,
          12212,
          11654
        ],
        "name": "ChainEstateTokenV1",
        "nameLocation": "471:18:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dbe66ca0",
            "id": 3861,
            "mutability": "mutable",
            "name": "excludedFromFees",
            "nameLocation": "684:16:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "651:49:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3860,
              "keyType": {
                "id": 3858,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "660:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "651:25:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3859,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "671:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1497b01b",
            "id": 3865,
            "mutability": "mutable",
            "name": "airDropInvestTime",
            "nameLocation": "868:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "832:53:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3864,
              "keyType": {
                "id": 3862,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "841:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "832:28:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3863,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "852:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1ba7f00f",
            "id": 3867,
            "mutability": "mutable",
            "name": "airDropContractAddress",
            "nameLocation": "982:22:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "967:37:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3866,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "967:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b3c1da1",
            "id": 3869,
            "mutability": "mutable",
            "name": "burnWalletAddress",
            "nameLocation": "1082:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1067:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3868,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1067:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "502f91ec",
            "id": 3871,
            "mutability": "mutable",
            "name": "realEstateWalletAddress",
            "nameLocation": "1210:23:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1187:46:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3870,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1187:15:23",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8eb83f25",
            "id": 3873,
            "mutability": "mutable",
            "name": "liquidityWalletAddress",
            "nameLocation": "1431:22:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1416:37:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3872,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1416:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d158272d",
            "id": 3875,
            "mutability": "mutable",
            "name": "marketingWalletAddress",
            "nameLocation": "1543:22:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1520:45:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3874,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1520:15:23",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61eb048a",
            "id": 3877,
            "mutability": "mutable",
            "name": "developerWalletAddress",
            "nameLocation": "1654:22:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1631:45:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3876,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1631:15:23",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20ca3c7f",
            "id": 3879,
            "mutability": "mutable",
            "name": "uniswapRouterAddress",
            "nameLocation": "1771:20:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1756:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3878,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1756:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2fb47be4",
            "id": 3881,
            "mutability": "mutable",
            "name": "initialTimeStamp",
            "nameLocation": "1871:16:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1856:31:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3880,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1856:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e2b0e47",
            "id": 3884,
            "mutability": "mutable",
            "name": "realEstateTransactionFeePercent",
            "nameLocation": "1962:31:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "1947:50:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3882,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1947:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 3883,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1996:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fcd1285",
            "id": 3887,
            "mutability": "mutable",
            "name": "developerFeePercent",
            "nameLocation": "2075:19:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "2060:38:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3885,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2060:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 3886,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2097:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6fa55c",
            "id": 3890,
            "mutability": "mutable",
            "name": "marketingFeePercent",
            "nameLocation": "2171:19:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "2156:38:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3888,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2156:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 3889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2193:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3893,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "2265:13:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "2238:40:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 3892,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3891,
                "name": "IUniswapV2Router02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11157,
                "src": "2238:18:23"
              },
              "referencedDeclaration": 11157,
              "src": "2238:18:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c816841b",
            "id": 3895,
            "mutability": "mutable",
            "name": "uniswapPair",
            "nameLocation": "2362:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "2347:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3894,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2347:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f94d733d",
            "id": 3898,
            "mutability": "mutable",
            "name": "contractCHESDivisor",
            "nameLocation": "2499:19:23",
            "nodeType": "VariableDeclaration",
            "scope": 4510,
            "src": "2484:41:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3896,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2484:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 3897,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2521:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4082,
              "nodeType": "Block",
              "src": "3128:1592:23",
              "statements": [
                {
                  "expression": {
                    "id": 3924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3921,
                      "name": "initialTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3881,
                      "src": "3142:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3922,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3161:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3161:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3142:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3925,
                  "nodeType": "ExpressionStatement",
                  "src": "3142:34:23"
                },
                {
                  "expression": {
                    "id": 3928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3926,
                      "name": "airDropContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3867,
                      "src": "3190:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3927,
                      "name": "_airDropContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3902,
                      "src": "3215:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3190:48:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3929,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:48:23"
                },
                {
                  "expression": {
                    "id": 3932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3930,
                      "name": "realEstateWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3871,
                      "src": "3252:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3931,
                      "name": "_realEstateWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3908,
                      "src": "3278:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3252:50:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3933,
                  "nodeType": "ExpressionStatement",
                  "src": "3252:50:23"
                },
                {
                  "expression": {
                    "id": 3936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3934,
                      "name": "burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3869,
                      "src": "3316:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3935,
                      "name": "_burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3904,
                      "src": "3336:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3316:38:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3937,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:38:23"
                },
                {
                  "expression": {
                    "id": 3940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3938,
                      "name": "liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3873,
                      "src": "3368:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3939,
                      "name": "_liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3906,
                      "src": "3393:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3368:48:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3941,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:48:23"
                },
                {
                  "expression": {
                    "id": 3944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3942,
                      "name": "marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3875,
                      "src": "3430:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3943,
                      "name": "_marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3910,
                      "src": "3455:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3430:48:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3945,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:48:23"
                },
                {
                  "expression": {
                    "id": 3948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3946,
                      "name": "developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3877,
                      "src": "3492:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3947,
                      "name": "_developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3912,
                      "src": "3517:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3492:48:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3949,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:48:23"
                },
                {
                  "expression": {
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3950,
                      "name": "uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3879,
                      "src": "3554:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3951,
                      "name": "_uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3914,
                      "src": "3577:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3554:44:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3953,
                  "nodeType": "ExpressionStatement",
                  "src": "3554:44:23"
                },
                {
                  "expression": {
                    "id": 3958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3954,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "3613:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3956,
                      "indexExpression": {
                        "id": 3955,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3871,
                        "src": "3630:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3613:41:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3657:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3613:48:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3959,
                  "nodeType": "ExpressionStatement",
                  "src": "3613:48:23"
                },
                {
                  "expression": {
                    "id": 3964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3960,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "3675:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3962,
                      "indexExpression": {
                        "id": 3961,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3877,
                        "src": "3692:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3675:40:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3718:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3675:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3965,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:47:23"
                },
                {
                  "expression": {
                    "id": 3970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3966,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "3736:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3968,
                      "indexExpression": {
                        "id": 3967,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3875,
                        "src": "3753:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3736:40:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3779:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3736:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3971,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:47:23"
                },
                {
                  "expression": {
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3972,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "3797:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3974,
                      "indexExpression": {
                        "id": 3973,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3873,
                        "src": "3814:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3797:40:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3840:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3797:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:47:23"
                },
                {
                  "expression": {
                    "id": 3982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3978,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "3858:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3980,
                      "indexExpression": {
                        "id": 3979,
                        "name": "airDropContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3867,
                        "src": "3875:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3858:40:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3901:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3858:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3983,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:47:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3985,
                        "name": "airDropContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3867,
                        "src": "3982:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "id": 3986,
                                "name": "initialSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3900,
                                "src": "4007:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3987,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4006:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3335",
                            "id": 3988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4024:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_35_by_1",
                              "typeString": "int_const 35"
                            },
                            "value": "35"
                          },
                          "src": "4006:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 3990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4029:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "4006:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3984,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "3976:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3976:57:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3993,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:57:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3995,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3873,
                        "src": "4053:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "id": 3996,
                                "name": "initialSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3900,
                                "src": "4078:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3997,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4077:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 3998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4095:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "4077:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 4000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4099:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4077:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3994,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4047:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:55:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4003,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:55:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4005,
                        "name": "burnWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3869,
                        "src": "4122:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4006,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3900,
                          "src": "4141:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 4007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4157:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "4141:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4004,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4116:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4116:43:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4010,
                  "nodeType": "ExpressionStatement",
                  "src": "4116:43:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4012,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3875,
                        "src": "4179:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4013,
                            "name": "initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3900,
                            "src": "4203:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 4014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4219:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "4203:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 4016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4223:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "4203:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4011,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4173:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4173:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4019,
                  "nodeType": "ExpressionStatement",
                  "src": "4173:54:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4021,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3877,
                        "src": "4247:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4022,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3900,
                          "src": "4271:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 4023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4287:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "4271:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4020,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4241:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4026,
                  "nodeType": "ExpressionStatement",
                  "src": "4241:49:23"
                },
                {
                  "assignments": [
                    4029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4029,
                      "mutability": "mutable",
                      "name": "_uniswapV2Router",
                      "nameLocation": "4324:16:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4082,
                      "src": "4305:35:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                        "typeString": "contract IUniswapV2Router02"
                      },
                      "typeName": {
                        "id": 4028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4027,
                          "name": "IUniswapV2Router02",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11157,
                          "src": "4305:18:23"
                        },
                        "referencedDeclaration": 11157,
                        "src": "4305:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4033,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4031,
                        "name": "uniswapRouterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3879,
                        "src": "4362:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4030,
                      "name": "IUniswapV2Router02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11157,
                      "src": "4343:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$11157_$",
                        "typeString": "type(contract IUniswapV2Router02)"
                      }
                    },
                    "id": 4032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4343:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4305:78:23"
                },
                {
                  "expression": {
                    "id": 4036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4034,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3893,
                      "src": "4397:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4035,
                      "name": "_uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4029,
                      "src": "4413:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "4397:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 4037,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4041,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4460:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          ],
                          "id": 4040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4452:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4039,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4452:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4452:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4045,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3893,
                            "src": "4475:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 4044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4467:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4467:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4467:22:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4047,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3900,
                        "src": "4491:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4038,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10958,
                      "src": "4443:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4443:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4049,
                  "nodeType": "ExpressionStatement",
                  "src": "4443:62:23"
                },
                {
                  "expression": {
                    "id": 4065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4050,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "4519:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4059,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4598:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                                "typeString": "contract ChainEstateTokenV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                                "typeString": "contract ChainEstateTokenV1"
                              }
                            ],
                            "id": 4058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4590:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4057,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4590:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4590:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4061,
                              "name": "_uniswapV2Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4029,
                              "src": "4605:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 4062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11050,
                            "src": "4605:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                              "typeString": "function () pure external returns (address)"
                            }
                          },
                          "id": 4063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4605:23:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 4052,
                                  "name": "_uniswapV2Router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4029,
                                  "src": "4551:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                },
                                "id": 4053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "factory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11045,
                                "src": "4551:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                  "typeString": "function () pure external returns (address)"
                                }
                              },
                              "id": 4054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4551:26:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4051,
                            "name": "IUniswapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11036,
                            "src": "4533:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$11036_$",
                              "typeString": "type(contract IUniswapV2Factory)"
                            }
                          },
                          "id": 4055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4533:45:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$11036",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 4056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11035,
                        "src": "4533:56:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) external returns (address)"
                        }
                      },
                      "id": 4064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4533:96:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4519:110:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4066,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:110:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4073,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3893,
                            "src": "4679:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 4072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4671:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4671:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4671:22:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4700:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 4076,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4700:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 4075,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4695:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4695:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 4079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4695:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4068,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3895,
                            "src": "4650:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4067,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12212,
                          "src": "4643:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12212_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4643:19:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12212",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12181,
                      "src": "4643:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4643:70:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4081,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:70:23"
                }
              ]
            },
            "id": 4083,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436861696e457374617465546f6b656e",
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3100:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_120479687e4957af2ccd00f3075f8c81bbe73e50111cff9f33f3899eb7b92057",
                      "typeString": "literal_string \"ChainEstateToken\""
                    },
                    "value": "ChainEstateToken"
                  },
                  {
                    "hexValue": "43484553",
                    "id": 3918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3120:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bdf10d818bf280e7003df1b379d53a550513cbb0b5346afb4601ed573d9e1e56",
                      "typeString": "literal_string \"CHES\""
                    },
                    "value": "CHES"
                  }
                ],
                "id": 3919,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3916,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11024,
                  "src": "3094:5:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3094:33:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3900,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "2772:13:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2764:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3902,
                  "mutability": "mutable",
                  "name": "_airDropContractAddress",
                  "nameLocation": "2804:23:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2796:31:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2796:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3904,
                  "mutability": "mutable",
                  "name": "_burnWalletAddress",
                  "nameLocation": "2846:18:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2838:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3906,
                  "mutability": "mutable",
                  "name": "_liquidityWalletAddress",
                  "nameLocation": "2882:23:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2874:31:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3908,
                  "mutability": "mutable",
                  "name": "_realEstateWalletAddress",
                  "nameLocation": "2931:24:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2915:40:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2915:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3910,
                  "mutability": "mutable",
                  "name": "_marketingWalletAddress",
                  "nameLocation": "2981:23:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "2965:39:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3912,
                  "mutability": "mutable",
                  "name": "_developerWalletAddress",
                  "nameLocation": "3030:23:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "3014:39:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3914,
                  "mutability": "mutable",
                  "name": "_uniswapRouterAddress",
                  "nameLocation": "3071:21:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4083,
                  "src": "3063:29:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3063:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2754:339:23"
            },
            "returnParameters": {
              "id": 3920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3128:0:23"
            },
            "scope": 4510,
            "src": "2743:1977:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4094,
              "nodeType": "Block",
              "src": "4874:37:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4091,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4899:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                          "typeString": "contract ChainEstateTokenV1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                          "typeString": "contract ChainEstateTokenV1"
                        }
                      ],
                      "id": 4090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4891:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4089,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4891:7:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4891:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4088,
                  "id": 4093,
                  "nodeType": "Return",
                  "src": "4884:20:23"
                }
              ]
            },
            "documentation": {
              "id": 4084,
              "nodeType": "StructuredDocumentation",
              "src": "4726:84:23",
              "text": " @dev Returns the contract address\n @return contract address"
            },
            "functionSelector": "32a2c5d0",
            "id": 4095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nameLocation": "4824:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4842:2:23"
            },
            "returnParameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "4866:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4866:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4865:9:23"
            },
            "scope": 4510,
            "src": "4815:96:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4109,
              "nodeType": "Block",
              "src": "5106:46:23",
              "statements": [
                {
                  "expression": {
                    "id": 4107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4103,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "5116:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4105,
                      "indexExpression": {
                        "id": 4104,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "5133:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5116:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5141:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5116:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4108,
                  "nodeType": "ExpressionStatement",
                  "src": "5116:29:23"
                }
              ]
            },
            "documentation": {
              "id": 4096,
              "nodeType": "StructuredDocumentation",
              "src": "4917:124:23",
              "text": " @dev Adds a user to be excluded from fees.\n @param user address of the user to be excluded from fees."
            },
            "functionSelector": "78c1d245",
            "id": 4110,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4100,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "5096:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5096:9:23"
              }
            ],
            "name": "excludeUserFromFees",
            "nameLocation": "5055:19:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4098,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5083:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4110,
                  "src": "5075:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5074:14:23"
            },
            "returnParameters": {
              "id": 4102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5106:0:23"
            },
            "scope": 4510,
            "src": "5046:106:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4119,
              "nodeType": "Block",
              "src": "5359:39:23",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4116,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "5376:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 4117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "5376:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4115,
                  "id": 4118,
                  "nodeType": "Return",
                  "src": "5369:22:23"
                }
              ]
            },
            "documentation": {
              "id": 4111,
              "nodeType": "StructuredDocumentation",
              "src": "5158:135:23",
              "text": " @dev Gets the current timestamp, used for testing + verification\n @return the the timestamp of the current block"
            },
            "functionSelector": "6c9230db",
            "id": 4120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTimestamp",
            "nameLocation": "5307:19:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5326:2:23"
            },
            "returnParameters": {
              "id": 4115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4120,
                  "src": "5350:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:9:23"
            },
            "scope": 4510,
            "src": "5298:100:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4134,
              "nodeType": "Block",
              "src": "5611:47:23",
              "statements": [
                {
                  "expression": {
                    "id": 4132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4128,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "5621:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4130,
                      "indexExpression": {
                        "id": 4129,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4123,
                        "src": "5638:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5621:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5646:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5621:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4133,
                  "nodeType": "ExpressionStatement",
                  "src": "5621:30:23"
                }
              ]
            },
            "documentation": {
              "id": 4121,
              "nodeType": "StructuredDocumentation",
              "src": "5404:143:23",
              "text": " @dev Removes a user from the fee exclusion.\n @param user address of the user than will now have to pay transaction fees."
            },
            "functionSelector": "bbeaa1f8",
            "id": 4135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4125,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "5601:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5601:9:23"
              }
            ],
            "name": "includeUsersInFees",
            "nameLocation": "5561:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4123,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5588:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4135,
                  "src": "5580:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5580:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5579:14:23"
            },
            "returnParameters": {
              "id": 4127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5611:0:23"
            },
            "scope": 4510,
            "src": "5552:106:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10560
            ],
            "body": {
              "id": 4316,
              "nodeType": "Block",
              "src": "6010:2016:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 4155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4146,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11644,
                            "src": "6135:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6135:12:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4148,
                          "name": "uniswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "6151:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6135:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 4154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6166:31:23",
                        "subExpression": {
                          "baseExpression": {
                            "id": 4150,
                            "name": "excludedFromFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3861,
                            "src": "6167:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 4153,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4151,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11644,
                              "src": "6184:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6184:12:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6167:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "6135:62:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 4159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6201:28:23",
                      "subExpression": {
                        "baseExpression": {
                          "id": 4156,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3861,
                          "src": "6202:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4158,
                        "indexExpression": {
                          "id": 4157,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4138,
                          "src": "6219:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6202:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6135:94:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4178,
                  "nodeType": "IfStatement",
                  "src": "6131:271:23",
                  "trueBody": {
                    "id": 4177,
                    "nodeType": "Block",
                    "src": "6231:171:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4166,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 4163,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4138,
                                          "src": "6264:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 4162,
                                        "name": "balanceOf",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10535,
                                        "src": "6254:9:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view returns (uint256)"
                                        }
                                      },
                                      "id": 4164,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6254:20:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 4165,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4140,
                                      "src": "6277:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6254:29:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4167,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6253:31:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 4168,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10521,
                                        "src": "6288:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 4169,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6288:13:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "313636",
                                      "id": 4170,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6304:3:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_166_by_1",
                                        "typeString": "int_const 166"
                                      },
                                      "value": "166"
                                    },
                                    "src": "6288:19:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4172,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6287:21:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6253:55:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e27742068617665206d6f7265207468616e203225206f662074686520746f74616c204348455320737570706c7920616674657220612050616e63616b655377617020737761702e",
                              "id": 4174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6310:80:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab72ad9aaa93409e98a7fd5864404075571e8c705802500a285f01737fd0502c",
                                "typeString": "literal_string \"You can't have more than 2% of the total CHES supply after a PancakeSwap swap.\""
                              },
                              "value": "You can't have more than 2% of the total CHES supply after a PancakeSwap swap."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab72ad9aaa93409e98a7fd5864404075571e8c705802500a285f01737fd0502c",
                                "typeString": "literal_string \"You can't have more than 2% of the total CHES supply after a PancakeSwap swap.\""
                              }
                            ],
                            "id": 4161,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6245:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6245:146:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4176,
                        "nodeType": "ExpressionStatement",
                        "src": "6245:146:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4179,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "6507:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4182,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4180,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "6524:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6524:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6507:30:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 4183,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "6541:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4185,
                      "indexExpression": {
                        "id": 4184,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4138,
                        "src": "6558:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6541:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6507:61:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4197,
                  "nodeType": "IfStatement",
                  "src": "6503:159:23",
                  "trueBody": {
                    "id": 4196,
                    "nodeType": "Block",
                    "src": "6570:92:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4188,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11644,
                                "src": "6594:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6594:12:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4190,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4138,
                              "src": "6608:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4191,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4140,
                              "src": "6619:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4187,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10785,
                            "src": "6584:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 4192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6584:42:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4193,
                        "nodeType": "ExpressionStatement",
                        "src": "6584:42:23"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 4194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6647:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 4145,
                        "id": 4195,
                        "nodeType": "Return",
                        "src": "6640:11:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4199,
                      "mutability": "mutable",
                      "name": "realEstateFee",
                      "nameLocation": "6720:13:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4316,
                      "src": "6712:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6712:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4206,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4200,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "6737:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4201,
                            "name": "realEstateTransactionFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "6746:31:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6737:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4203,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6736:42:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 4204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6781:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "6736:48:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6712:72:23"
                },
                {
                  "assignments": [
                    4208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4208,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "6845:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4316,
                      "src": "6837:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4207,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6837:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4215,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4209,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "6861:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4210,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3890,
                            "src": "6870:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6861:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4212,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6860:30:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 4213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6893:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "6860:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6837:59:23"
                },
                {
                  "assignments": [
                    4217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4217,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "6957:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4316,
                      "src": "6949:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6949:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4224,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4218,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "6973:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4219,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3887,
                            "src": "6982:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6973:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6972:30:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 4222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7005:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "6972:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6949:59:23"
                },
                {
                  "assignments": [
                    4226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4226,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "7085:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4316,
                      "src": "7077:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7077:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4232,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4227,
                        "name": "realEstateFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4199,
                        "src": "7096:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4228,
                        "name": "marketingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4208,
                        "src": "7112:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7096:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 4230,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4217,
                      "src": "7127:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7096:43:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7077:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4234,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "7223:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7223:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4238,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7245:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          ],
                          "id": 4237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7237:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7237:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7237:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4240,
                        "name": "totalFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4226,
                        "src": "7252:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4233,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "7213:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7213:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4242,
                  "nodeType": "ExpressionStatement",
                  "src": "7213:48:23"
                },
                {
                  "assignments": [
                    4244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4244,
                      "mutability": "mutable",
                      "name": "contractCHESBalance",
                      "nameLocation": "7280:19:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4316,
                      "src": "7272:27:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7272:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4251,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4248,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7320:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          ],
                          "id": 4247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7312:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4246,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7312:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7312:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4245,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10535,
                      "src": "7302:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 4250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:24:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7272:54:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4252,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "7341:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7341:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 4254,
                        "name": "uniswapPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "7357:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7341:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4256,
                        "name": "contractCHESBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "7372:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7394:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7372:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7341:54:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4300,
                  "nodeType": "IfStatement",
                  "src": "7337:488:23",
                  "trueBody": {
                    "id": 4299,
                    "nodeType": "Block",
                    "src": "7397:428:23",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4260,
                            "name": "contractCHESBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4244,
                            "src": "7415:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7437:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7415:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4277,
                        "nodeType": "IfStatement",
                        "src": "7411:226:23",
                        "trueBody": {
                          "id": 4276,
                          "nodeType": "Block",
                          "src": "7440:197:23",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4263,
                                  "name": "contractCHESBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4244,
                                  "src": "7462:19:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 4265,
                                        "name": "uniswapPair",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3895,
                                        "src": "7494:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4264,
                                      "name": "balanceOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10535,
                                      "src": "7484:9:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 4266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7484:22:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 4267,
                                    "name": "contractCHESDivisor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3898,
                                    "src": "7509:19:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7484:44:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7462:66:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4275,
                              "nodeType": "IfStatement",
                              "src": "7458:148:23",
                              "trueBody": {
                                "id": 4274,
                                "nodeType": "Block",
                                "src": "7530:76:23",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4271,
                                          "name": "contractCHESBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4244,
                                          "src": "7567:19:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 4270,
                                        "name": "swapCHESForBNB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4378,
                                        "src": "7552:14:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 4272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7552:35:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4273,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7552:35:23"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4279,
                            "mutability": "mutable",
                            "name": "contractBNBBalance",
                            "nameLocation": "7658:18:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4299,
                            "src": "7650:26:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4278,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7650:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4285,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4282,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7687:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                                  "typeString": "contract ChainEstateTokenV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                                  "typeString": "contract ChainEstateTokenV1"
                                }
                              ],
                              "id": 4281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7679:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4280,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7679:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7679:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7679:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7650:50:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4286,
                            "name": "contractBNBBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4279,
                            "src": "7718:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7739:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7718:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4298,
                        "nodeType": "IfStatement",
                        "src": "7714:101:23",
                        "trueBody": {
                          "id": 4297,
                          "nodeType": "Block",
                          "src": "7742:73:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4292,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "7786:4:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                                            "typeString": "contract ChainEstateTokenV1"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                                            "typeString": "contract ChainEstateTokenV1"
                                          }
                                        ],
                                        "id": 4291,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7778:7:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4290,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7778:7:23",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7778:13:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 4294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "7778:21:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4289,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4426,
                                  "src": "7760:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 4295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7760:40:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4296,
                              "nodeType": "ExpressionStatement",
                              "src": "7760:40:23"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4302,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "7904:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4316,
                      "src": "7896:22:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4301,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7896:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4306,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4303,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4140,
                      "src": "7921:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 4304,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4226,
                      "src": "7930:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7921:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7896:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4308,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "7958:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7958:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4310,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4138,
                        "src": "7972:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4311,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "7983:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4307,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "7948:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7948:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4313,
                  "nodeType": "ExpressionStatement",
                  "src": "7948:50:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8015:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4145,
                  "id": 4315,
                  "nodeType": "Return",
                  "src": "8008:11:23"
                }
              ]
            },
            "documentation": {
              "id": 4136,
              "nodeType": "StructuredDocumentation",
              "src": "5664:257:23",
              "text": " @dev Overrides the BEP20 transfer function to include transaction fees.\n @param recipient the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "a9059cbb",
            "id": 4317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5935:8:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4142,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5986:8:23"
            },
            "parameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4138,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5952:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4317,
                  "src": "5944:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5944:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4140,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5971:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4317,
                  "src": "5963:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5943:35:23"
            },
            "returnParameters": {
              "id": 4145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4317,
                  "src": "6004:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4143,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6004:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6003:6:23"
            },
            "scope": 4510,
            "src": "5926:2100:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4377,
              "nodeType": "Block",
              "src": "8211:388:23",
              "statements": [
                {
                  "assignments": [
                    4327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4327,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "8238:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4377,
                      "src": "8221:21:23",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8221:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4326,
                        "nodeType": "ArrayTypeName",
                        "src": "8221:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4333,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 4331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8259:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 4330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8245:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4328,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8249:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4329,
                        "nodeType": "ArrayTypeName",
                        "src": "8249:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 4332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8245:16:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8221:40:23"
                },
                {
                  "expression": {
                    "id": 4341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4334,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4327,
                        "src": "8271:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4336,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8276:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8271:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4339,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "8289:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                            "typeString": "contract ChainEstateTokenV1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                            "typeString": "contract ChainEstateTokenV1"
                          }
                        ],
                        "id": 4338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8281:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8281:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8281:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8271:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4342,
                  "nodeType": "ExpressionStatement",
                  "src": "8271:23:23"
                },
                {
                  "expression": {
                    "id": 4349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4343,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4327,
                        "src": "8304:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4345,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 4344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8309:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8304:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 4346,
                          "name": "uniswapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3893,
                          "src": "8314:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 4347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11050,
                        "src": "8314:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 4348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8314:20:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8304:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4350,
                  "nodeType": "ExpressionStatement",
                  "src": "8304:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4354,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8361:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          ],
                          "id": 4353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8353:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4352,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8353:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8353:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4358,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3893,
                            "src": "8376:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 4357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8368:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4356,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8368:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8368:22:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4360,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4320,
                        "src": "8392:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4351,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10958,
                      "src": "8344:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8344:55:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4362,
                  "nodeType": "ExpressionStatement",
                  "src": "8344:55:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4366,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4320,
                        "src": "8487:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8507:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 4368,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4327,
                        "src": "8522:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4371,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8548:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                              "typeString": "contract ChainEstateTokenV1"
                            }
                          ],
                          "id": 4370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8540:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4369,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8540:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8540:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4373,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8567:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8567:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4363,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3893,
                        "src": "8409:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 4365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11130,
                      "src": "8409:64:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 4375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8409:183:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4376,
                  "nodeType": "ExpressionStatement",
                  "src": "8409:183:23"
                }
              ]
            },
            "documentation": {
              "id": 4318,
              "nodeType": "StructuredDocumentation",
              "src": "8032:126:23",
              "text": " @dev Swaps CHES tokens from transaction fees to BNB.\n @param amount the amount of CHES tokens to swap"
            },
            "id": 4378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapCHESForBNB",
            "nameLocation": "8172:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4320,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8195:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4378,
                  "src": "8187:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8187:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8186:16:23"
            },
            "returnParameters": {
              "id": 4322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8211:0:23"
            },
            "scope": 4510,
            "src": "8163:436:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4425,
              "nodeType": "Block",
              "src": "8788:376:23",
              "statements": [
                {
                  "assignments": [
                    4385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4385,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "8806:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4425,
                      "src": "8798:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8798:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4391,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4386,
                        "name": "realEstateTransactionFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3884,
                        "src": "8817:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4387,
                        "name": "marketingFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3890,
                        "src": "8851:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8817:53:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 4389,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3887,
                      "src": "8873:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8817:75:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8798:94:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4395,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4381,
                                "src": "8936:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 4396,
                                "name": "realEstateTransactionFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3884,
                                "src": "8945:31:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8936:40:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4398,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8935:42:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 4399,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4385,
                          "src": "8980:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8935:53:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4392,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3871,
                        "src": "8902:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8902:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8902:87:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4402,
                  "nodeType": "ExpressionStatement",
                  "src": "8902:87:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4406,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4381,
                                "src": "9032:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 4407,
                                "name": "marketingFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3890,
                                "src": "9041:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9032:28:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4409,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9031:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 4410,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4385,
                          "src": "9064:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9031:41:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4403,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3875,
                        "src": "8999:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8999:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8999:74:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4413,
                  "nodeType": "ExpressionStatement",
                  "src": "8999:74:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4417,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4381,
                                "src": "9116:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 4418,
                                "name": "developerFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3887,
                                "src": "9125:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9116:28:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4420,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9115:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 4421,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4385,
                          "src": "9148:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9115:41:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4414,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3877,
                        "src": "9083:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9083:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9083:74:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4424,
                  "nodeType": "ExpressionStatement",
                  "src": "9083:74:23"
                }
              ]
            },
            "documentation": {
              "id": 4379,
              "nodeType": "StructuredDocumentation",
              "src": "8605:127:23",
              "text": " @dev Sends BNB to transaction fee wallets after CHES swaps.\n @param amount the amount to be transfered"
            },
            "id": 4426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendFeesToWallets",
            "nameLocation": "8746:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4381,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8772:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4426,
                  "src": "8764:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8764:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8763:16:23"
            },
            "returnParameters": {
              "id": 4383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8788:0:23"
            },
            "scope": 4510,
            "src": "8737:427:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4444,
              "nodeType": "Block",
              "src": "9363:114:23",
              "statements": [
                {
                  "assignments": [
                    4433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4433,
                      "mutability": "mutable",
                      "name": "contractETHBalance",
                      "nameLocation": "9381:18:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4444,
                      "src": "9373:26:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9373:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4439,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 4436,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "9410:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                            "typeString": "contract ChainEstateTokenV1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChainEstateTokenV1_$4510",
                            "typeString": "contract ChainEstateTokenV1"
                          }
                        ],
                        "id": 4435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9402:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9402:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9402:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9402:21:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9373:50:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4441,
                        "name": "contractETHBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4433,
                        "src": "9451:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4440,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4426,
                      "src": "9433:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9433:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4443,
                  "nodeType": "ExpressionStatement",
                  "src": "9433:37:23"
                }
              ]
            },
            "documentation": {
              "id": 4427,
              "nodeType": "StructuredDocumentation",
              "src": "9170:139:23",
              "text": " @dev Sends BNB to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
            },
            "functionSelector": "7c13efd4",
            "id": 4445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4429,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "9353:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "9353:9:23"
              }
            ],
            "name": "disperseFeesManually",
            "nameLocation": "9323:20:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9343:2:23"
            },
            "returnParameters": {
              "id": 4431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9363:0:23"
            },
            "scope": 4510,
            "src": "9314:163:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4448,
              "nodeType": "Block",
              "src": "9510:2:23",
              "statements": []
            },
            "id": 4449,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9490:2:23"
            },
            "returnParameters": {
              "id": 4447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9510:0:23"
            },
            "scope": 4510,
            "src": "9483:29:23",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4461,
              "nodeType": "Block",
              "src": "9802:49:23",
              "statements": [
                {
                  "expression": {
                    "id": 4459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4457,
                      "name": "contractCHESDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3898,
                      "src": "9812:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4458,
                      "name": "newDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4452,
                      "src": "9834:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9812:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4460,
                  "nodeType": "ExpressionStatement",
                  "src": "9812:32:23"
                }
              ]
            },
            "documentation": {
              "id": 4450,
              "nodeType": "StructuredDocumentation",
              "src": "9518:210:23",
              "text": " @dev Sets the value that determines how many CHES tokens need to be in the contract before it's swapped for BNB.\n @param newDivisor the new divisor value to determine the swap threshold"
            },
            "functionSelector": "f439d93c",
            "id": 4462,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4454,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "9792:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "9792:9:23"
              }
            ],
            "name": "setContractCHESDivisor",
            "nameLocation": "9742:22:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4452,
                  "mutability": "mutable",
                  "name": "newDivisor",
                  "nameLocation": "9773:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "9765:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9765:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9764:20:23"
            },
            "returnParameters": {
              "id": 4456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9802:0:23"
            },
            "scope": 4510,
            "src": "9733:118:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11023
            ],
            "body": {
              "id": 4508,
              "nodeType": "Block",
              "src": "10230:225:23",
              "statements": [
                {
                  "assignments": [
                    4474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4474,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nameLocation": "10248:11:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4508,
                      "src": "10240:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4473,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10240:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4478,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4476,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4467,
                        "src": "10272:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4475,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10535,
                      "src": "10262:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10262:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10240:35:23"
                },
                {
                  "expression": {
                    "id": 4498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4479,
                        "name": "airDropInvestTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3865,
                        "src": "10285:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4481,
                      "indexExpression": {
                        "id": 4480,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4467,
                        "src": "10303:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10285:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4482,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4469,
                                "src": "10310:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 4483,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10318:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 4484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10318:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10310:23:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4486,
                                      "name": "userBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4474,
                                      "src": "10337:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 4487,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4469,
                                      "src": "10351:5:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10337:19:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4489,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "10336:21:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 4490,
                                  "name": "airDropInvestTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3865,
                                  "src": "10360:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 4492,
                                "indexExpression": {
                                  "id": 4491,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4467,
                                  "src": "10378:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10360:21:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10336:45:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10310:71:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4495,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10309:73:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 4496,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4474,
                        "src": "10385:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10309:87:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10285:111:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4499,
                  "nodeType": "ExpressionStatement",
                  "src": "10285:111:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4503,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "10432:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4504,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4467,
                        "src": "10438:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4505,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "10442:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4500,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10406:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ChainEstateTokenV1_$4510_$",
                          "typeString": "type(contract super ChainEstateTokenV1)"
                        }
                      },
                      "id": 4502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11023,
                      "src": "10406:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10406:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4507,
                  "nodeType": "ExpressionStatement",
                  "src": "10406:42:23"
                }
              ]
            },
            "documentation": {
              "id": 4463,
              "nodeType": "StructuredDocumentation",
              "src": "9857:272:23",
              "text": " @dev After a token transfer, update the recipient address's air drop invest time since they have a later investment now.\n @param from the sender's address\n @param to the recipient's address\n @param value the amount that was transferred"
            },
            "id": 4509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "10143:19:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4471,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10221:8:23"
            },
            "parameters": {
              "id": 4470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4465,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10171:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4509,
                  "src": "10163:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10163:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10185:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4509,
                  "src": "10177:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10177:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4469,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10197:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4509,
                  "src": "10189:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10189:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10162:41:23"
            },
            "returnParameters": {
              "id": 4472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10230:0:23"
            },
            "scope": 4510,
            "src": "10134:321:23",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4511,
        "src": "462:9995:23",
        "usedErrors": []
      }
    ],
    "src": "34:10423:23"
  },
  "bytecode": "60806040526003601055600160115560016012556103e86015553480156200002657600080fd5b506040516200211038038062002110833981016040819052620000499162000884565b604080518082018252601081526f21b430b4b722b9ba30ba32aa37b5b2b760811b6020808301918252835180850190945260048452634348455360e01b9084015281519192916200009d91600391620007c5565b508051620000b3906004906020840190620007c5565b505050620000d0620000ca620004a360201b60201c565b620004a7565b42600f55600880546001600160a01b03199081166001600160a01b038a8116919091178355600a805483168883169081179091556009805484168b8416179055600b805484168a8416178155600c80548516898516178155600d80548616898616178155600e805490961688861617909555600092835260066020526040808420805460ff19908116600190811790925596548616855281852080548816821790559154851684528084208054871683179055915484168352818320805486168217905585548416835291208054909316179091559054620001ce91166064620001bc8b60236200094f565b620001c8919062000971565b620004f9565b600b54620001ee906001600160a01b0316600a620001bc8b60036200094f565b6009546200020c906001600160a01b0316620001c860058b62000971565b600c546200022c906001600160a01b03166064620001bc8b60056200094f565b600d546200024a906001600160a01b0316620001c8600a8b62000971565b600e54601380546001600160a01b0319166001600160a01b0390921691821790556200027830828b620005f0565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015620002b257600080fd5b505afa158015620002c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ed919062000994565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200033657600080fd5b505afa1580156200034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000371919062000994565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b158015620003ba57600080fd5b505af1158015620003cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f5919062000994565b601480546001600160a01b0319166001600160a01b0392831690811790915560135460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200045857600080fd5b505af11580156200046d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004939190620009bb565b5050505050505050505062000a51565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620005555760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060026000828254620005699190620009df565b90915550506001600160a01b0382166000908152602081905260408120805483929062000598908490620009df565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3620005ec600083836200071d565b5050565b6001600160a01b038316620006545760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200054c565b6001600160a01b038216620006b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200054c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b505050565b6001600160a01b0382166000908152602081815260408083205460079092529091205481906200074e8483620009fa565b6200075a91906200094f565b6200076642856200094f565b620007729190620009df565b6200077e919062000971565b60076000856001600160a01b03166001600160a01b0316815260200190815260200160002081905550620007bf8484846200071860201b62000cb51760201c565b50505050565b828054620007d39062000a14565b90600052602060002090601f016020900481019282620007f7576000855562000842565b82601f106200081257805160ff191683800117855562000842565b8280016001018555821562000842579182015b828111156200084257825182559160200191906001019062000825565b506200085092915062000854565b5090565b5b8082111562000850576000815560010162000855565b6001600160a01b03811681146200088157600080fd5b50565b600080600080600080600080610100898b031215620008a257600080fd5b885197506020890151620008b6816200086b565b60408a0151909750620008c9816200086b565b60608a0151909650620008dc816200086b565b60808a0151909550620008ef816200086b565b60a08a015190945062000902816200086b565b60c08a015190935062000915816200086b565b60e08a015190925062000928816200086b565b809150509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200096c576200096c62000939565b500290565b6000826200098f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620009a757600080fd5b8151620009b4816200086b565b9392505050565b600060208284031215620009ce57600080fd5b81518015158114620009b457600080fd5b60008219821115620009f557620009f562000939565b500190565b60008282101562000a0f5762000a0f62000939565b500390565b600181811c9082168062000a2957607f821691505b6020821081141562000a4b57634e487b7160e01b600052602260045260246000fd5b50919050565b6116af8062000a616000396000f3fe6080604052600436106102085760003560e01c806370a0823111610118578063bbeaa1f8116100a0578063dbe66ca01161006f578063dbe66ca0146105c6578063dd62ed3e146105f6578063f2fde38b1461063c578063f439d93c1461065c578063f94d733d1461067c57600080fd5b8063bbeaa1f814610550578063c816841b14610570578063d158272d14610590578063da6fa55c146105b057600080fd5b80638da5cb5b116100e75780638da5cb5b146104bd5780638eb83f25146104db57806395d89b41146104fb578063a457c2d714610510578063a9059cbb1461053057600080fd5b806370a082311461043b578063715018a61461047157806378c1d245146104885780637c13efd4146104a857600080fd5b8063313ce5671161019b578063502f91ec1161016a578063502f91ec146103b25780635b3c1da1146103d257806361eb048a146103f25780636c9230db146104125780636e2b0e471461042557600080fd5b8063313ce5671461034d57806332a2c5d014610369578063395093511461037c5780634fcd12851461039c57600080fd5b80631ba7f00f116101d75780631ba7f00f146102bf57806320ca3c7f146102f757806323b872dd146103175780632fb47be41461033757600080fd5b806306fdde0314610214578063095ea7b31461023f5780631497b01b1461026f57806318160ddd146102aa57600080fd5b3661020f57005b600080fd5b34801561022057600080fd5b50610229610692565b6040516102369190611392565b60405180910390f35b34801561024b57600080fd5b5061025f61025a3660046113fc565b610724565b6040519015158152602001610236565b34801561027b57600080fd5b5061029c61028a366004611428565b60076020526000908152604090205481565b604051908152602001610236565b3480156102b657600080fd5b5060025461029c565b3480156102cb57600080fd5b506008546102df906001600160a01b031681565b6040516001600160a01b039091168152602001610236565b34801561030357600080fd5b50600e546102df906001600160a01b031681565b34801561032357600080fd5b5061025f61033236600461144c565b61073e565b34801561034357600080fd5b5061029c600f5481565b34801561035957600080fd5b5060405160128152602001610236565b34801561037557600080fd5b50306102df565b34801561038857600080fd5b5061025f6103973660046113fc565b610762565b3480156103a857600080fd5b5061029c60115481565b3480156103be57600080fd5b50600a546102df906001600160a01b031681565b3480156103de57600080fd5b506009546102df906001600160a01b031681565b3480156103fe57600080fd5b50600d546102df906001600160a01b031681565b34801561041e57600080fd5b504261029c565b34801561043157600080fd5b5061029c60105481565b34801561044757600080fd5b5061029c610456366004611428565b6001600160a01b031660009081526020819052604090205490565b34801561047d57600080fd5b506104866107a1565b005b34801561049457600080fd5b506104866104a3366004611428565b6107e0565b3480156104b457600080fd5b5061048661082e565b3480156104c957600080fd5b506005546001600160a01b03166102df565b3480156104e757600080fd5b50600b546102df906001600160a01b031681565b34801561050757600080fd5b50610229610865565b34801561051c57600080fd5b5061025f61052b3660046113fc565b610874565b34801561053c57600080fd5b5061025f61054b3660046113fc565b610906565b34801561055c57600080fd5b5061048661056b366004611428565b610ba3565b34801561057c57600080fd5b506014546102df906001600160a01b031681565b34801561059c57600080fd5b50600c546102df906001600160a01b031681565b3480156105bc57600080fd5b5061029c60125481565b3480156105d257600080fd5b5061025f6105e1366004611428565b60066020526000908152604090205460ff1681565b34801561060257600080fd5b5061029c61061136600461148d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561064857600080fd5b50610486610657366004611428565b610bee565b34801561066857600080fd5b506104866106773660046114c6565b610c86565b34801561068857600080fd5b5061029c60155481565b6060600380546106a1906114df565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd906114df565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b5050505050905090565b600033610732818585610cba565b60019150505b92915050565b60003361074c858285610dde565b610757858585610e70565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610732908290869061079c908790611530565b610cba565b6005546001600160a01b031633146107d45760405162461bcd60e51b81526004016107cb90611548565b60405180910390fd5b6107de6000611044565b565b6005546001600160a01b0316331461080a5760405162461bcd60e51b81526004016107cb90611548565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b031633146108585760405162461bcd60e51b81526004016107cb90611548565b4761086281611096565b50565b6060600480546106a1906114df565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108f95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107cb565b6107578286868403610cba565b6014546000906001600160a01b0316336001600160a01b031614801561093c57503360009081526006602052604090205460ff16155b801561096157506001600160a01b03831660009081526006602052604090205460ff16155b15610a2f5760a661097160025490565b61097b919061157d565b8261099b856001600160a01b031660009081526020819052604090205490565b6109a59190611530565b10610a2f5760405162461bcd60e51b815260206004820152604e60248201527f596f752063616e27742068617665206d6f7265207468616e203225206f66207460448201527f686520746f74616c204348455320737570706c7920616674657220612050616e60648201526d31b0b5b2a9bbb0b81039bbb0b81760911b608482015260a4016107cb565b3360009081526006602052604090205460ff1680610a6557506001600160a01b03831660009081526006602052604090205460ff165b15610a7d57610a75338484610e70565b506001610738565b6000606460105484610a8f919061159f565b610a99919061157d565b90506000606460125485610aad919061159f565b610ab7919061157d565b90506000606460115486610acb919061159f565b610ad5919061157d565b9050600081610ae48486611530565b610aee9190611530565b9050610afb333083610e70565b306000908152602081905260409020546014546001600160a01b03163314801590610b265750600081115b15610b7b578015610b69576015546014546001600160a01b0316600090815260208190526040902054610b59919061157d565b811115610b6957610b69816111b4565b478015610b7957610b7947611096565b505b6000610b8783896115be565b9050610b94338a83610e70565b50600198975050505050505050565b6005546001600160a01b03163314610bcd5760405162461bcd60e51b81526004016107cb90611548565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b03163314610c185760405162461bcd60e51b81526004016107cb90611548565b6001600160a01b038116610c7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107cb565b61086281611044565b6005546001600160a01b03163314610cb05760405162461bcd60e51b81526004016107cb90611548565b601555565b505050565b6001600160a01b038316610d1c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107cb565b6001600160a01b038216610d7d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107cb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610e6a5781811015610e5d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107cb565b610e6a8484848403610cba565b50505050565b6001600160a01b038316610ed45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107cb565b6001600160a01b038216610f365760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107cb565b6001600160a01b03831660009081526020819052604090205481811015610fae5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107cb565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610fe5908490611530565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161103191815260200190565b60405180910390a3610e6a84848461131d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006011546012546010546110ab9190611530565b6110b59190611530565b600a546010549192506001600160a01b0316906108fc9083906110d8908661159f565b6110e2919061157d565b6040518115909202916000818181858888f1935050505015801561110a573d6000803e3d6000fd5b50600c546012546001600160a01b03909116906108fc90839061112d908661159f565b611137919061157d565b6040518115909202916000818181858888f1935050505015801561115f573d6000803e3d6000fd5b50600d546011546001600160a01b03909116906108fc908390611182908661159f565b61118c919061157d565b6040518115909202916000818181858888f19350505050158015610cb5573d6000803e3d6000fd5b60408051600280825260608201835260009260208301908036833701905050905030816000815181106111e9576111e96115d5565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561123d57600080fd5b505afa158015611251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127591906115eb565b81600181518110611288576112886115d5565b6001600160a01b0392831660209182029290920101526013546112ae9130911684610cba565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906112e7908590600090869030904290600401611608565b600060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b505050505050565b6001600160a01b03821660009081526020818152604080832054600790925290912054819061134c84836115be565b611356919061159f565b611360428561159f565b61136a9190611530565b611374919061157d565b6001600160a01b038416600090815260076020526040902055610e6a565b600060208083528351808285015260005b818110156113bf578581018301518582016040015282016113a3565b818111156113d1576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461086257600080fd5b6000806040838503121561140f57600080fd5b823561141a816113e7565b946020939093013593505050565b60006020828403121561143a57600080fd5b8135611445816113e7565b9392505050565b60008060006060848603121561146157600080fd5b833561146c816113e7565b9250602084013561147c816113e7565b929592945050506040919091013590565b600080604083850312156114a057600080fd5b82356114ab816113e7565b915060208301356114bb816113e7565b809150509250929050565b6000602082840312156114d857600080fd5b5035919050565b600181811c908216806114f357607f821691505b6020821081141561151457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156115435761154361151a565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261159a57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156115b9576115b961151a565b500290565b6000828210156115d0576115d061151a565b500390565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156115fd57600080fd5b8151611445816113e7565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156116585784516001600160a01b031683529383019391830191600101611633565b50506001600160a01b0396909616606085015250505060800152939250505056fea264697066735822122001d4fc25440a88bfe0e7188062eb6efb85b581d3c2401665fb12863e95d8a64b64736f6c63430008080033",
  "bytecodeSha1": "9ccce7be3b25bc08c1dbb04f5b1f591d9e3a42e6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "ChainEstateTokenV1",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "76": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "2": {
        "ERC20._approve": {
          "69": [
            10254,
            10273,
            true
          ],
          "70": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "71": [
            10966,
            11003,
            false
          ],
          "72": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "73": [
            7614,
            7632,
            true
          ],
          "74": [
            7692,
            7708,
            true
          ],
          "75": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "68": [
            6815,
            6850,
            true
          ]
        }
      },
      "23": {
        "ChainEstateTokenV1.transfer": {
          "57": [
            6135,
            6162,
            false
          ],
          "58": [
            6167,
            6197,
            false
          ],
          "59": [
            6202,
            6229,
            false
          ],
          "60": [
            6253,
            6308,
            true
          ],
          "61": [
            6507,
            6537,
            true
          ],
          "62": [
            6541,
            6568,
            false
          ],
          "63": [
            7341,
            7368,
            false
          ],
          "64": [
            7372,
            7395,
            false
          ],
          "65": [
            7415,
            7438,
            false
          ],
          "66": [
            7462,
            7528,
            false
          ],
          "67": [
            7718,
            7740,
            false
          ]
        }
      },
      "3": {},
      "4": {},
      "42": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "46": [
            2378,
            2395
          ],
          "47": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "5": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "15": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "30": [
            1998,
            2071
          ],
          "31": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "33": [
            10246,
            10314
          ],
          "34": [
            10324,
            10392
          ],
          "35": [
            10403,
            10439
          ],
          "36": [
            10449,
            10486
          ]
        },
        "ERC20._spendAllowance": {
          "37": [
            11019,
            11087
          ],
          "38": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "39": [
            7606,
            7674
          ],
          "40": [
            7684,
            7748
          ],
          "41": [
            7855,
            7927
          ],
          "42": [
            7961,
            7999
          ],
          "43": [
            8019,
            8042
          ],
          "44": [
            8053,
            8084
          ],
          "45": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "6": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "9": [
            4570,
            4602
          ],
          "10": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "4": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "19": [
            6807,
            6892
          ],
          "20": [
            6926,
            6986
          ]
        },
        "ERC20.increaseAllowance": {
          "14": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "7": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "18": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        },
        "ERC20.transferFrom": {
          "11": [
            5375,
            5413
          ],
          "12": [
            5423,
            5450
          ],
          "13": [
            5460,
            5471
          ]
        }
      },
      "23": {
        "ChainEstateTokenV1._afterTokenTransfer": {
          "55": [
            10285,
            10396
          ],
          "56": [
            10406,
            10448
          ]
        },
        "ChainEstateTokenV1.disperseFeesManually": {
          "17": [
            9433,
            9470
          ]
        },
        "ChainEstateTokenV1.excludeUserFromFees": {
          "16": [
            5116,
            5145
          ]
        },
        "ChainEstateTokenV1.getContractAddress": {
          "2": [
            4884,
            4904
          ]
        },
        "ChainEstateTokenV1.getCurrentTimestamp": {
          "3": [
            5369,
            5391
          ]
        },
        "ChainEstateTokenV1.includeUsersInFees": {
          "29": [
            5621,
            5651
          ]
        },
        "ChainEstateTokenV1.sendFeesToWallets": {
          "48": [
            8902,
            8989
          ],
          "49": [
            8999,
            9073
          ],
          "50": [
            9083,
            9157
          ]
        },
        "ChainEstateTokenV1.setContractCHESDivisor": {
          "32": [
            9812,
            9844
          ]
        },
        "ChainEstateTokenV1.swapCHESForBNB": {
          "51": [
            8271,
            8294
          ],
          "52": [
            8304,
            8334
          ],
          "53": [
            8344,
            8399
          ],
          "54": [
            8409,
            8592
          ]
        },
        "ChainEstateTokenV1.transfer": {
          "21": [
            6245,
            6391
          ],
          "22": [
            6584,
            6626
          ],
          "23": [
            6640,
            6651
          ],
          "24": [
            7213,
            7261
          ],
          "25": [
            7552,
            7587
          ],
          "26": [
            7760,
            7800
          ],
          "27": [
            7948,
            7998
          ],
          "28": [
            8008,
            8019
          ]
        }
      },
      "3": {},
      "4": {},
      "42": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106102085760003560e01c806370a0823111610118578063bbeaa1f8116100a0578063dbe66ca01161006f578063dbe66ca0146105c6578063dd62ed3e146105f6578063f2fde38b1461063c578063f439d93c1461065c578063f94d733d1461067c57600080fd5b8063bbeaa1f814610550578063c816841b14610570578063d158272d14610590578063da6fa55c146105b057600080fd5b80638da5cb5b116100e75780638da5cb5b146104bd5780638eb83f25146104db57806395d89b41146104fb578063a457c2d714610510578063a9059cbb1461053057600080fd5b806370a082311461043b578063715018a61461047157806378c1d245146104885780637c13efd4146104a857600080fd5b8063313ce5671161019b578063502f91ec1161016a578063502f91ec146103b25780635b3c1da1146103d257806361eb048a146103f25780636c9230db146104125780636e2b0e471461042557600080fd5b8063313ce5671461034d57806332a2c5d014610369578063395093511461037c5780634fcd12851461039c57600080fd5b80631ba7f00f116101d75780631ba7f00f146102bf57806320ca3c7f146102f757806323b872dd146103175780632fb47be41461033757600080fd5b806306fdde0314610214578063095ea7b31461023f5780631497b01b1461026f57806318160ddd146102aa57600080fd5b3661020f57005b600080fd5b34801561022057600080fd5b50610229610692565b6040516102369190611392565b60405180910390f35b34801561024b57600080fd5b5061025f61025a3660046113fc565b610724565b6040519015158152602001610236565b34801561027b57600080fd5b5061029c61028a366004611428565b60076020526000908152604090205481565b604051908152602001610236565b3480156102b657600080fd5b5060025461029c565b3480156102cb57600080fd5b506008546102df906001600160a01b031681565b6040516001600160a01b039091168152602001610236565b34801561030357600080fd5b50600e546102df906001600160a01b031681565b34801561032357600080fd5b5061025f61033236600461144c565b61073e565b34801561034357600080fd5b5061029c600f5481565b34801561035957600080fd5b5060405160128152602001610236565b34801561037557600080fd5b50306102df565b34801561038857600080fd5b5061025f6103973660046113fc565b610762565b3480156103a857600080fd5b5061029c60115481565b3480156103be57600080fd5b50600a546102df906001600160a01b031681565b3480156103de57600080fd5b506009546102df906001600160a01b031681565b3480156103fe57600080fd5b50600d546102df906001600160a01b031681565b34801561041e57600080fd5b504261029c565b34801561043157600080fd5b5061029c60105481565b34801561044757600080fd5b5061029c610456366004611428565b6001600160a01b031660009081526020819052604090205490565b34801561047d57600080fd5b506104866107a1565b005b34801561049457600080fd5b506104866104a3366004611428565b6107e0565b3480156104b457600080fd5b5061048661082e565b3480156104c957600080fd5b506005546001600160a01b03166102df565b3480156104e757600080fd5b50600b546102df906001600160a01b031681565b34801561050757600080fd5b50610229610865565b34801561051c57600080fd5b5061025f61052b3660046113fc565b610874565b34801561053c57600080fd5b5061025f61054b3660046113fc565b610906565b34801561055c57600080fd5b5061048661056b366004611428565b610ba3565b34801561057c57600080fd5b506014546102df906001600160a01b031681565b34801561059c57600080fd5b50600c546102df906001600160a01b031681565b3480156105bc57600080fd5b5061029c60125481565b3480156105d257600080fd5b5061025f6105e1366004611428565b60066020526000908152604090205460ff1681565b34801561060257600080fd5b5061029c61061136600461148d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561064857600080fd5b50610486610657366004611428565b610bee565b34801561066857600080fd5b506104866106773660046114c6565b610c86565b34801561068857600080fd5b5061029c60155481565b6060600380546106a1906114df565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd906114df565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b5050505050905090565b600033610732818585610cba565b60019150505b92915050565b60003361074c858285610dde565b610757858585610e70565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610732908290869061079c908790611530565b610cba565b6005546001600160a01b031633146107d45760405162461bcd60e51b81526004016107cb90611548565b60405180910390fd5b6107de6000611044565b565b6005546001600160a01b0316331461080a5760405162461bcd60e51b81526004016107cb90611548565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b031633146108585760405162461bcd60e51b81526004016107cb90611548565b4761086281611096565b50565b6060600480546106a1906114df565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108f95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107cb565b6107578286868403610cba565b6014546000906001600160a01b0316336001600160a01b031614801561093c57503360009081526006602052604090205460ff16155b801561096157506001600160a01b03831660009081526006602052604090205460ff16155b15610a2f5760a661097160025490565b61097b919061157d565b8261099b856001600160a01b031660009081526020819052604090205490565b6109a59190611530565b10610a2f5760405162461bcd60e51b815260206004820152604e60248201527f596f752063616e27742068617665206d6f7265207468616e203225206f66207460448201527f686520746f74616c204348455320737570706c7920616674657220612050616e60648201526d31b0b5b2a9bbb0b81039bbb0b81760911b608482015260a4016107cb565b3360009081526006602052604090205460ff1680610a6557506001600160a01b03831660009081526006602052604090205460ff165b15610a7d57610a75338484610e70565b506001610738565b6000606460105484610a8f919061159f565b610a99919061157d565b90506000606460125485610aad919061159f565b610ab7919061157d565b90506000606460115486610acb919061159f565b610ad5919061157d565b9050600081610ae48486611530565b610aee9190611530565b9050610afb333083610e70565b306000908152602081905260409020546014546001600160a01b03163314801590610b265750600081115b15610b7b578015610b69576015546014546001600160a01b0316600090815260208190526040902054610b59919061157d565b811115610b6957610b69816111b4565b478015610b7957610b7947611096565b505b6000610b8783896115be565b9050610b94338a83610e70565b50600198975050505050505050565b6005546001600160a01b03163314610bcd5760405162461bcd60e51b81526004016107cb90611548565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b03163314610c185760405162461bcd60e51b81526004016107cb90611548565b6001600160a01b038116610c7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107cb565b61086281611044565b6005546001600160a01b03163314610cb05760405162461bcd60e51b81526004016107cb90611548565b601555565b505050565b6001600160a01b038316610d1c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107cb565b6001600160a01b038216610d7d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107cb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610e6a5781811015610e5d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107cb565b610e6a8484848403610cba565b50505050565b6001600160a01b038316610ed45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107cb565b6001600160a01b038216610f365760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107cb565b6001600160a01b03831660009081526020819052604090205481811015610fae5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107cb565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610fe5908490611530565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161103191815260200190565b60405180910390a3610e6a84848461131d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006011546012546010546110ab9190611530565b6110b59190611530565b600a546010549192506001600160a01b0316906108fc9083906110d8908661159f565b6110e2919061157d565b6040518115909202916000818181858888f1935050505015801561110a573d6000803e3d6000fd5b50600c546012546001600160a01b03909116906108fc90839061112d908661159f565b611137919061157d565b6040518115909202916000818181858888f1935050505015801561115f573d6000803e3d6000fd5b50600d546011546001600160a01b03909116906108fc908390611182908661159f565b61118c919061157d565b6040518115909202916000818181858888f19350505050158015610cb5573d6000803e3d6000fd5b60408051600280825260608201835260009260208301908036833701905050905030816000815181106111e9576111e96115d5565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561123d57600080fd5b505afa158015611251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127591906115eb565b81600181518110611288576112886115d5565b6001600160a01b0392831660209182029290920101526013546112ae9130911684610cba565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906112e7908590600090869030904290600401611608565b600060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b505050505050565b6001600160a01b03821660009081526020818152604080832054600790925290912054819061134c84836115be565b611356919061159f565b611360428561159f565b61136a9190611530565b611374919061157d565b6001600160a01b038416600090815260076020526040902055610e6a565b600060208083528351808285015260005b818110156113bf578581018301518582016040015282016113a3565b818111156113d1576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461086257600080fd5b6000806040838503121561140f57600080fd5b823561141a816113e7565b946020939093013593505050565b60006020828403121561143a57600080fd5b8135611445816113e7565b9392505050565b60008060006060848603121561146157600080fd5b833561146c816113e7565b9250602084013561147c816113e7565b929592945050506040919091013590565b600080604083850312156114a057600080fd5b82356114ab816113e7565b915060208301356114bb816113e7565b809150509250929050565b6000602082840312156114d857600080fd5b5035919050565b600181811c908216806114f357607f821691505b6020821081141561151457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156115435761154361151a565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261159a57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156115b9576115b961151a565b500290565b6000828210156115d0576115d061151a565b500390565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156115fd57600080fd5b8151611445816113e7565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156116585784516001600160a01b031683529383019391830191600101611633565b50506001600160a01b0396909616606085015250505060800152939250505056fea264697066735822122001d4fc25440a88bfe0e7188062eb6efb85b581d3c2401665fb12863e95d8a64b64736f6c63430008080033",
  "deployedSourceMap": "462:9995:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:2;;;;;:::i;:::-;;:::i;:::-;;;1237:14:43;;1230:22;1212:41;;1200:2;1185:18;4433:197:2;1072:187:43;832:53:23;;;;;;;;;;-1:-1:-1;832:53:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1662:25:43;;;1650:2;1635:18;832:53:23;1516:177:43;3244:106:2;;;;;;;;;;-1:-1:-1;3331:12:2;;3244:106;;967:37:23;;;;;;;;;;-1:-1:-1;967:37:23;;;;-1:-1:-1;;;;;967:37:23;;;;;;-1:-1:-1;;;;;1862:32:43;;;1844:51;;1832:2;1817:18;967:37:23;1698:203:43;1756:35:23;;;;;;;;;;-1:-1:-1;1756:35:23;;;;-1:-1:-1;;;;;1756:35:23;;;5192:286:2;;;;;;;;;;-1:-1:-1;5192:286:2;;;;;:::i;:::-;;:::i;1856:31:23:-;;;;;;;;;;;;;;;;3093:91:2;;;;;;;;;;-1:-1:-1;3093:91:2;;3175:2;2509:36:43;;2497:2;2482:18;3093:91:2;2367:184:43;4815:96:23;;;;;;;;;;-1:-1:-1;4899:4:23;4815:96;;5873:236:2;;;;;;;;;;-1:-1:-1;5873:236:2;;;;;:::i;:::-;;:::i;2060:38:23:-;;;;;;;;;;;;;;;;1187:46;;;;;;;;;;-1:-1:-1;1187:46:23;;;;-1:-1:-1;;;;;1187:46:23;;;1067:32;;;;;;;;;;-1:-1:-1;1067:32:23;;;;-1:-1:-1;;;;;1067:32:23;;;1631:45;;;;;;;;;;-1:-1:-1;1631:45:23;;;;-1:-1:-1;;;;;1631:45:23;;;5298:100;;;;;;;;;;-1:-1:-1;5376:15:23;5298:100;;1947:50;;;;;;;;;;;;;;;;3408:125:2;;;;;;;;;;-1:-1:-1;3408:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125;1668:101:0;;;;;;;;;;;;;:::i;:::-;;5046:106:23;;;;;;;;;;-1:-1:-1;5046:106:23;;;;;:::i;:::-;;:::i;9314:163::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;1416:37:23;;;;;;;;;;-1:-1:-1;1416:37:23;;;;-1:-1:-1;;;;;1416:37:23;;;2367:102:2;;;;;;;;;;;;;:::i;6596:429::-;;;;;;;;;;-1:-1:-1;6596:429:2;;;;;:::i;:::-;;:::i;5926:2100:23:-;;;;;;;;;;-1:-1:-1;5926:2100:23;;;;;:::i;:::-;;:::i;5552:106::-;;;;;;;;;;-1:-1:-1;5552:106:23;;;;;:::i;:::-;;:::i;2347:26::-;;;;;;;;;;-1:-1:-1;2347:26:23;;;;-1:-1:-1;;;;;2347:26:23;;;1520:45;;;;;;;;;;-1:-1:-1;1520:45:23;;;;-1:-1:-1;;;;;1520:45:23;;;2156:38;;;;;;;;;;;;;;;;651:49;;;;;;;;;;-1:-1:-1;651:49:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;3976:149:2;;;;;;;;;;-1:-1:-1;3976:149:2;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;9733:118:23:-;;;;;;;;;;-1:-1:-1;9733:118:23;;;;;:::i;:::-;;:::i;2484:41::-;;;;;;;;;;;;;;;;2156:98:2;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:11;4570:32:2;719:10:11;4586:7:2;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:11;5375:38:2;5391:4;719:10:11;5406:6:2;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;5873:236::-;719:10:11;5961:4:2;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:2;;;;;;;;;;5961:4;;719:10:11;6015:66:2;;719:10:11;;6040:27:2;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5046:106:23:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5116:22:23::1;;::::0;;;:16:::1;:22;::::0;;;;:29;;-1:-1:-1;;5116:29:23::1;5141:4;5116:29;::::0;;5046:106::o;9314:163::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9402:21:23::1;9433:37;9402:21:::0;9433:17:::1;:37::i;:::-;9363:114;9314:163::o:0;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:11;6689:4:2;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:2;;;;;;;;;;6689:4;;719:10:11;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;4571:2:43;6807:85:2;;;4553:21:43;4610:2;4590:18;;;4583:30;4649:34;4629:18;;;4622:62;-1:-1:-1;;;4700:18:43;;;4693:35;4745:19;;6807:85:2;4369:401:43;6807:85:2;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;5926:2100:23:-;6151:11;;6004:4;;-1:-1:-1;;;;;6151:11:23;719:10:11;-1:-1:-1;;;;;6135:27:23;;:62;;;;-1:-1:-1;719:10:11;6167:30:23;;;;:16;:30;;;;;;;;6166:31;6135:62;:94;;;;-1:-1:-1;;;;;;6202:27:23;;;;;;:16;:27;;;;;;;;6201:28;6135:94;6131:271;;;6304:3;6288:13;3331:12:2;;;3244:106;6288:13:23;:19;;;;:::i;:::-;6277:6;6254:20;6264:9;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125;6254:20:23;:29;;;;:::i;:::-;6253:55;6245:146;;;;-1:-1:-1;;;6245:146:23;;5199:2:43;6245:146:23;;;5181:21:43;5238:2;5218:18;;;5211:30;5277:34;5257:18;;;5250:62;5348:34;5328:18;;;5321:62;-1:-1:-1;;;5399:19:43;;;5392:45;5454:19;;6245:146:23;4997:482:43;6245:146:23;719:10:11;6507:30:23;;;;:16;:30;;;;;;;;;:61;;-1:-1:-1;;;;;;6541:27:23;;;;;;:16;:27;;;;;;;;6507:61;6503:159;;;6584:42;719:10:11;6608:9:23;6619:6;6584:9;:42::i;:::-;-1:-1:-1;6647:4:23;6640:11;;6503:159;6712:21;6781:3;6746:31;;6737:6;:40;;;;:::i;:::-;6736:48;;;;:::i;:::-;6712:72;;6837:20;6893:3;6870:19;;6861:6;:28;;;;:::i;:::-;6860:36;;;;:::i;:::-;6837:59;;6949:20;7005:3;6982:19;;6973:6;:28;;;;:::i;:::-;6972:36;;;;:::i;:::-;6949:59;-1:-1:-1;7077:16:23;6949:59;7096:28;7112:12;7096:13;:28;:::i;:::-;:43;;;;:::i;:::-;7077:62;-1:-1:-1;7213:48:23;719:10:11;7245:4:23;7252:8;7213:9;:48::i;:::-;7320:4;7272:27;3508:18:2;;;;;;;;;;;7357:11:23;;-1:-1:-1;;;;;7357:11:23;719:10:11;7341:27:23;;;;:54;;;7394:1;7372:19;:23;7341:54;7337:488;;;7415:23;;7411:226;;7509:19;;7494:11;;-1:-1:-1;;;;;7494:11:23;3482:7:2;3508:18;;;;;;;;;;;7484:44:23;;;;:::i;:::-;7462:19;:66;7458:148;;;7552:35;7567:19;7552:14;:35::i;:::-;7679:21;7718:22;;7714:101;;7760:40;7778:21;7760:17;:40::i;:::-;7397:428;7337:488;7896:22;7921:17;7930:8;7921:6;:17;:::i;:::-;7896:42;-1:-1:-1;7948:50:23;719:10:11;7972:9:23;7983:14;7948:9;:50::i;:::-;-1:-1:-1;8015:4:23;;5926:2100;-1:-1:-1;;;;;;;;5926:2100:23:o;5552:106::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5621:22:23::1;5646:5;5621:22:::0;;;:16:::1;:22;::::0;;;;:30;;-1:-1:-1;;5621:30:23::1;::::0;;5552:106::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5989:2:43;1998:73:0::1;::::0;::::1;5971:21:43::0;6028:2;6008:18;;;6001:30;6067:34;6047:18;;;6040:62;-1:-1:-1;;;6118:18:43;;;6111:36;6164:19;;1998:73:0::1;5787:402:43::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;9733:118:23:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9812:19:23::1;:32:::0;9733:118::o;12504:120:2:-;;;;:::o;10123:370::-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;6396:2:43;10246:68:2;;;6378:21:43;6435:2;6415:18;;;6408:30;6474:34;6454:18;;;6447:62;-1:-1:-1;;;6525:18:43;;;6518:34;6569:19;;10246:68:2;6194:400:43;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;6801:2:43;10324:68:2;;;6783:21:43;6840:2;6820:18;;;6813:30;6879:34;6859:18;;;6852:62;-1:-1:-1;;;6930:18:43;;;6923:32;6972:19;;10324:68:2;6599:398:43;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1662:25:43;;;10454:32:2;;1635:18:43;10454:32:2;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:2;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:2;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;7204:2:43;11019:68:2;;;7186:21:43;7243:2;7223:18;;;7216:30;7282:31;7262:18;;;7255:59;7331:18;;11019:68:2;7002:353:43;11019:68:2;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;7562:2:43;7606:68:2;;;7544:21:43;7601:2;7581:18;;;7574:30;7640:34;7620:18;;;7613:62;-1:-1:-1;;;7691:18:43;;;7684:35;7736:19;;7606:68:2;7360:401:43;7606:68:2;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;7968:2:43;7684:64:2;;;7950:21:43;8007:2;7987:18;;;7980:30;8046:34;8026:18;;;8019:62;-1:-1:-1;;;8097:18:43;;;8090:33;8140:19;;7684:64:2;7766:399:43;7684:64:2;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;8372:2:43;7855:72:2;;;8354:21:43;8411:2;8391:18;;;8384:30;8450:34;8430:18;;;8423:62;-1:-1:-1;;;8501:18:43;;;8494:36;8547:19;;7855:72:2;8170:402:43;7855:72:2;-1:-1:-1;;;;;7961:15:2;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;1662:25:43;;1650:2;1635:18;;1516:177;8058:26:2;;;;;;;;8095:37;8115:4;8121:2;8125:6;8095:19;:37::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8737:427:23:-;8798:16;8873:19;;8851;;8817:31;;:53;;;;:::i;:::-;:75;;;;:::i;:::-;8902:23;;8945:31;;8798:94;;-1:-1:-1;;;;;;8902:23:23;;:87;;8798:94;;8936:40;;:6;:40;:::i;:::-;8935:53;;;;:::i;:::-;8902:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8999:22:23;;9041:19;;-1:-1:-1;;;;;8999:22:23;;;;:74;;9064:8;;9032:28;;:6;:28;:::i;:::-;9031:41;;;;:::i;:::-;8999:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9083:22:23;;9125:19;;-1:-1:-1;;;;;9083:22:23;;;;:74;;9148:8;;9116:28;;:6;:28;:::i;:::-;9115:41;;;;:::i;:::-;9083:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:436;8245:16;;;8259:1;8245:16;;;;;;;;8221:21;;8245:16;;;;;;;;;;-1:-1:-1;8245:16:23;8221:40;;8289:4;8271;8276:1;8271:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8271:23:23;;;:7;;;;;;;;;;:23;;;;8314:13;;:20;;;-1:-1:-1;;;8314:20:23;;;;:13;;;;;:18;;:20;;;;;8271:7;;8314:20;;;;;:13;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8304:4;8309:1;8304:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8304:30:23;;;:7;;;;;;;;;:30;8376:13;;8344:55;;8361:4;;8376:13;8392:6;8344:8;:55::i;:::-;8409:13;;:183;;-1:-1:-1;;;8409:183:23;;-1:-1:-1;;;;;8409:13:23;;;;:64;;:183;;8487:6;;8409:13;;8522:4;;8548;;8567:15;;8409:183;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8211:388;8163:436;:::o;10134:321::-;-1:-1:-1;;;;;3508:18:2;;10240:19:23;3508:18:2;;;;;;;;;;;;10360:17:23;:21;;;;;;;3508:18:2;;10337:19:23;10351:5;3508:18:2;10337:19:23;:::i;:::-;10336:45;;;;:::i;:::-;10310:23;10318:15;10310:5;:23;:::i;:::-;:71;;;;:::i;:::-;10309:87;;;;:::i;:::-;-1:-1:-1;;;;;10285:21:23;;;;;;:17;:21;;;;;:111;10406:42;12504:120:2;14:597:43;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:43;574:15;-1:-1:-1;;570:29:43;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:43:o;616:131::-;-1:-1:-1;;;;;691:31:43;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:43:o;1264:247::-;1323:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:52;;;1392:1;1389;1382:12;1344:52;1431:9;1418:23;1450:31;1475:5;1450:31;:::i;:::-;1500:5;1264:247;-1:-1:-1;;;1264:247:43:o;1906:456::-;1983:6;1991;1999;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2107:9;2094:23;2126:31;2151:5;2126:31;:::i;:::-;2176:5;-1:-1:-1;2233:2:43;2218:18;;2205:32;2246:33;2205:32;2246:33;:::i;:::-;1906:456;;2298:7;;-1:-1:-1;;;2352:2:43;2337:18;;;;2324:32;;1906:456::o;2780:388::-;2848:6;2856;2909:2;2897:9;2888:7;2884:23;2880:32;2877:52;;;2925:1;2922;2915:12;2877:52;2964:9;2951:23;2983:31;3008:5;2983:31;:::i;:::-;3033:5;-1:-1:-1;3090:2:43;3075:18;;3062:32;3103:33;3062:32;3103:33;:::i;:::-;3155:7;3145:17;;;2780:388;;;;;:::o;3173:180::-;3232:6;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;-1:-1:-1;3324:23:43;;3173:180;-1:-1:-1;3173:180:43:o;3358:380::-;3437:1;3433:12;;;;3480;;;3501:61;;3555:4;3547:6;3543:17;3533:27;;3501:61;3608:2;3600:6;3597:14;3577:18;3574:38;3571:161;;;3654:10;3649:3;3645:20;3642:1;3635:31;3689:4;3686:1;3679:15;3717:4;3714:1;3707:15;3571:161;;3358:380;;;:::o;3743:127::-;3804:10;3799:3;3795:20;3792:1;3785:31;3835:4;3832:1;3825:15;3859:4;3856:1;3849:15;3875:128;3915:3;3946:1;3942:6;3939:1;3936:13;3933:39;;;3952:18;;:::i;:::-;-1:-1:-1;3988:9:43;;3875:128::o;4008:356::-;4210:2;4192:21;;;4229:18;;;4222:30;4288:34;4283:2;4268:18;;4261:62;4355:2;4340:18;;4008:356::o;4775:217::-;4815:1;4841;4831:132;;4885:10;4880:3;4876:20;4873:1;4866:31;4920:4;4917:1;4910:15;4948:4;4945:1;4938:15;4831:132;-1:-1:-1;4977:9:43;;4775:217::o;5484:168::-;5524:7;5590:1;5586;5582:6;5578:14;5575:1;5572:21;5567:1;5560:9;5553:17;5549:45;5546:71;;;5597:18;;:::i;:::-;-1:-1:-1;5637:9:43;;5484:168::o;5657:125::-;5697:4;5725:1;5722;5719:8;5716:34;;;5730:18;;:::i;:::-;-1:-1:-1;5767:9:43;;5657:125::o;8709:127::-;8770:10;8765:3;8761:20;8758:1;8751:31;8801:4;8798:1;8791:15;8825:4;8822:1;8815:15;8841:251;8911:6;8964:2;8952:9;8943:7;8939:23;8935:32;8932:52;;;8980:1;8977;8970:12;8932:52;9012:9;9006:16;9031:31;9056:5;9031:31;:::i;9097:980::-;9359:4;9407:3;9396:9;9392:19;9438:6;9427:9;9420:25;9464:2;9502:6;9497:2;9486:9;9482:18;9475:34;9545:3;9540:2;9529:9;9525:18;9518:31;9569:6;9604;9598:13;9635:6;9627;9620:22;9673:3;9662:9;9658:19;9651:26;;9712:2;9704:6;9700:15;9686:29;;9733:1;9743:195;9757:6;9754:1;9751:13;9743:195;;;9822:13;;-1:-1:-1;;;;;9818:39:43;9806:52;;9913:15;;;;9878:12;;;;9854:1;9772:9;9743:195;;;-1:-1:-1;;;;;;;9994:32:43;;;;9989:2;9974:18;;9967:60;-1:-1:-1;;;10058:3:43;10043:19;10036:35;9955:3;9097:980;-1:-1:-1;;;9097:980:43:o",
  "language": "Solidity",
  "natspec": {
    "details": "Main contract for Chain Estate DAO TODO - Limit how many tokens users can purchase from PancakeSwap TODO - Will possibly create the BNB to CHES token PankcakeSwap pair in the constructor.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "disperseFeesManually()": {
        "details": "Sends BNB to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
      },
      "excludeUserFromFees(address)": {
        "details": "Adds a user to be excluded from fees.",
        "params": {
          "user": "address of the user to be excluded from fees."
        }
      },
      "getContractAddress()": {
        "details": "Returns the contract address",
        "returns": {
          "_0": "contract address"
        }
      },
      "getCurrentTimestamp()": {
        "details": "Gets the current timestamp, used for testing + verification",
        "returns": {
          "_0": "the the timestamp of the current block"
        }
      },
      "includeUsersInFees(address)": {
        "details": "Removes a user from the fee exclusion.",
        "params": {
          "user": "address of the user than will now have to pay transaction fees."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setContractCHESDivisor(uint256)": {
        "details": "Sets the value that determines how many CHES tokens need to be in the contract before it's swapped for BNB.",
        "params": {
          "newDivisor": "the new divisor value to determine the swap threshold"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Overrides the BEP20 transfer function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "recipient": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Chain Estate DAO Token (V1)",
    "version": 1
  },
  "offset": [
    462,
    10457
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x208 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xBBEAA1F8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDBE66CA0 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDBE66CA0 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xF439D93C EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0xF94D733D EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBEAA1F8 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xD158272D EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xDA6FA55C EQ PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x8EB83F25 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x78C1D245 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x7C13EFD4 EQ PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x502F91EC GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x502F91EC EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x5B3C1DA1 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x61EB048A EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x6C9230DB EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x6E2B0E47 EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x32A2C5D0 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x4FCD1285 EQ PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BA7F00F GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x1BA7F00F EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x20CA3C7F EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x2FB47BE4 EQ PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x1497B01B EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x20F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH2 0x2DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH2 0x29C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x82E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x865 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x906 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x5E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x677 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x14DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6CD SWAP1 PUSH2 0x14DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x74C DUP6 DUP3 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x757 DUP6 DUP6 DUP6 PUSH2 0xE70 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x732 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x79C SWAP1 DUP8 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE PUSH1 0x0 PUSH2 0x1044 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1548 JUMP JUMPDEST SELFBALANCE PUSH2 0x862 DUP2 PUSH2 0x1096 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6A1 SWAP1 PUSH2 0x14DF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x757 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x93C JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xA2F JUMPI PUSH1 0xA6 PUSH2 0x971 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST DUP3 PUSH2 0x99B DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST LT PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742068617665206D6F7265207468616E203225206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x686520746F74616C204348455320737570706C7920616674657220612050616E PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x31B0B5B2A9BBB0B81039BBB0B817 PUSH1 0x91 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x7CB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xA65 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA75 CALLER DUP5 DUP5 PUSH2 0xE70 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD DUP5 PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP6 PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP7 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xAE4 DUP5 DUP7 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP PUSH2 0xAFB CALLER ADDRESS DUP4 PUSH2 0xE70 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xB26 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xB7B JUMPI DUP1 ISZERO PUSH2 0xB69 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB69 DUP2 PUSH2 0x11B4 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB79 SELFBALANCE PUSH2 0x1096 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xB87 DUP4 DUP10 PUSH2 0x15BE JUMP JUMPDEST SWAP1 POP PUSH2 0xB94 CALLER DUP11 DUP4 PUSH2 0xE70 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x862 DUP2 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE6A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH2 0xE6A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xCBA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xED4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xFAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xFE5 SWAP1 DUP5 SWAP1 PUSH2 0x1530 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE6A DUP5 DUP5 DUP5 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD PUSH2 0x10AB SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x10 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x10D8 SWAP1 DUP7 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x112D SWAP1 DUP7 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x1137 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x115F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x1182 SWAP1 DUP7 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x11E9 JUMPI PUSH2 0x11E9 PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1251 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1288 JUMPI PUSH2 0x1288 PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x12AE SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x12E7 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1315 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x134C DUP5 DUP4 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x1356 SWAP2 SWAP1 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x1360 TIMESTAMP DUP6 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1374 SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13BF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x13A3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x13D1 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x141A DUP2 PUSH2 0x13E7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1445 DUP2 PUSH2 0x13E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x146C DUP2 PUSH2 0x13E7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x147C DUP2 PUSH2 0x13E7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14AB DUP2 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14BB DUP2 PUSH2 0x13E7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1514 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1543 PUSH2 0x151A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x159A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15B9 JUMPI PUSH2 0x15B9 PUSH2 0x151A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x151A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1445 DUP2 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1658 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1633 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xD4 0xFC 0x25 DIFFICULTY EXP DUP9 0xBF 0xE0 0xE7 XOR DUP1 PUSH3 0xEB6EFB DUP6 0xB5 DUP2 0xD3 0xC2 BLOCKHASH AND PUSH6 0xFB12863E95D8 0xA6 0x4B PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "LT",
      "path": "23"
    },
    "9": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x208"
    },
    "12": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "SHR",
      "path": "23"
    },
    "19": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "20": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "25": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118"
    },
    "29": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "30": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "31": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xBBEAA1F8"
    },
    "36": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "37": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA0"
    },
    "40": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "41": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "42": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDBE66CA0"
    },
    "47": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "48": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "52": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "53": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDBE66CA0"
    },
    "58": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "59": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5C6"
    },
    "62": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "63": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "64": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "69": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "70": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5F6"
    },
    "73": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "74": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "75": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "81": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x63C"
    },
    "84": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "85": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "86": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF439D93C"
    },
    "91": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "92": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x65C"
    },
    "95": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "96": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "97": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF94D733D"
    },
    "102": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "103": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x67C"
    },
    "106": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "107": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "110": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "111": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "112": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "113": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xBBEAA1F8"
    },
    "118": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "119": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x550"
    },
    "122": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "123": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "124": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC816841B"
    },
    "129": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "130": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x570"
    },
    "133": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "134": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "135": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD158272D"
    },
    "140": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "141": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x590"
    },
    "144": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "145": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "146": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDA6FA55C"
    },
    "151": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "152": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5B0"
    },
    "155": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "156": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "159": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "160": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "161": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "162": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8DA5CB5B"
    },
    "167": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "168": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "172": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "173": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8DA5CB5B"
    },
    "178": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "179": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4BD"
    },
    "182": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "183": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "184": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x8EB83F25"
    },
    "189": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "190": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4DB"
    },
    "193": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "194": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "195": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95D89B41"
    },
    "200": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "201": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4FB"
    },
    "204": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "205": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "206": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "211": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "212": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x510"
    },
    "215": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "216": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "217": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "222": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "223": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x530"
    },
    "226": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "227": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "231": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "232": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "233": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "238": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "239": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x43B"
    },
    "242": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "243": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "244": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x715018A6"
    },
    "249": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "250": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x471"
    },
    "253": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "254": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "255": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x78C1D245"
    },
    "260": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "261": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x488"
    },
    "264": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "265": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "266": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x7C13EFD4"
    },
    "271": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "272": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4A8"
    },
    "275": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "276": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "279": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "280": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "281": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "282": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "287": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "288": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19B"
    },
    "291": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "292": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "293": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x502F91EC"
    },
    "298": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "299": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16A"
    },
    "302": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "303": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "304": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x502F91EC"
    },
    "309": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "310": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "313": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "314": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "315": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5B3C1DA1"
    },
    "320": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "321": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3D2"
    },
    "324": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "325": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "326": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x61EB048A"
    },
    "331": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "332": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F2"
    },
    "335": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "336": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "337": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6C9230DB"
    },
    "342": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "343": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x412"
    },
    "346": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "347": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "348": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6E2B0E47"
    },
    "353": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "354": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x425"
    },
    "357": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "358": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "360": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "361": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "362": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "363": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "364": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "369": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "370": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34D"
    },
    "373": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "374": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "375": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x32A2C5D0"
    },
    "380": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "381": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x369"
    },
    "384": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "385": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "386": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x39509351"
    },
    "391": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "392": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37C"
    },
    "395": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "396": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "397": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4FCD1285"
    },
    "402": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "403": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x39C"
    },
    "406": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "407": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "409": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "410": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "411": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "412": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "413": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1BA7F00F"
    },
    "418": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "GT",
      "path": "23"
    },
    "419": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D7"
    },
    "422": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "423": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "424": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1BA7F00F"
    },
    "429": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "430": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BF"
    },
    "433": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "434": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "435": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x20CA3C7F"
    },
    "440": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "441": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F7"
    },
    "444": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "445": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "446": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x23B872DD"
    },
    "451": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "452": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x317"
    },
    "455": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "456": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "457": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x2FB47BE4"
    },
    "462": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "463": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x337"
    },
    "466": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "467": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "469": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "470": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "471": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "472": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "473": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6FDDE03"
    },
    "478": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "479": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x214"
    },
    "482": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "483": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "484": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95EA7B3"
    },
    "489": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "490": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23F"
    },
    "493": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "494": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "495": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1497B01B"
    },
    "500": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "501": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26F"
    },
    "504": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "505": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "506": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18160DDD"
    },
    "511": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "EQ",
      "path": "23"
    },
    "512": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AA"
    },
    "515": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "516": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "518": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "519": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "520": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "521": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "522": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20F"
    },
    "525": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "526": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "STOP",
      "path": "23"
    },
    "527": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "528": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "530": {
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "DUP1",
      "path": "23"
    },
    "531": {
      "first_revert": true,
      "fn": null,
      "offset": [
        462,
        10457
      ],
      "op": "REVERT",
      "path": "23"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "POP",
      "path": "2"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x692"
    },
    "552": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1392"
    },
    "565": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "2"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "2"
    },
    "575": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "576": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "577": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "578": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24B"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "583": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "REVERT",
      "path": "2"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "588": {
      "op": "POP"
    },
    "589": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F"
    },
    "592": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "598": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13FC"
    },
    "601": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x724"
    },
    "606": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "610": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "611": {
      "op": "SWAP1"
    },
    "612": {
      "op": "ISZERO"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "DUP2"
    },
    "615": {
      "op": "MSTORE"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "618": {
      "op": "ADD"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236"
    },
    "622": {
      "op": "JUMP"
    },
    "623": {
      "offset": [
        832,
        885
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "625": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "DUP1",
      "path": "23"
    },
    "626": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27B"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "631": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "DUP1",
      "path": "23"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "REVERT",
      "path": "23"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "636": {
      "op": "POP"
    },
    "637": {
      "offset": [
        832,
        885
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28A"
    },
    "643": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "646": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1428"
    },
    "649": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        832,
        885
      ],
      "op": "JUMP",
      "path": "23"
    },
    "650": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "653": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "655": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "656": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "658": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "659": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "DUP2",
      "path": "23"
    },
    "660": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "661": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "663": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "664": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "665": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "666": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "DUP2",
      "path": "23"
    },
    "667": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "JUMP",
      "path": "23"
    },
    "668": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "669": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC20.approve",
      "offset": [
        832,
        885
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "672": {
      "op": "SWAP1"
    },
    "673": {
      "op": "DUP2"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "677": {
      "op": "ADD"
    },
    "678": {
      "offset": [
        832,
        885
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x236"
    },
    "681": {
      "op": "JUMP"
    },
    "682": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "683": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "684": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "685": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6"
    },
    "689": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "690": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "692": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "693": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "REVERT",
      "path": "2"
    },
    "694": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "695": {
      "op": "POP"
    },
    "696": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "698": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "699": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "702": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "703": {
      "offset": [
        967,
        1004
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "704": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "705": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "DUP1",
      "path": "23"
    },
    "706": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "707": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CB"
    },
    "710": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "711": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "713": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "DUP1",
      "path": "23"
    },
    "714": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "REVERT",
      "path": "23"
    },
    "715": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "offset": [
        967,
        1004
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "719": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "720": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "723": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "offset": [
        967,
        1004
      ],
      "op": "AND",
      "path": "23"
    },
    "733": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "DUP2",
      "path": "23"
    },
    "734": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "JUMP",
      "path": "23"
    },
    "735": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "736": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "738": {
      "fn": "ERC20.totalSupply",
      "offset": [
        967,
        1004
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "745": {
      "op": "SHL"
    },
    "746": {
      "op": "SUB"
    },
    "747": {
      "op": "SWAP1"
    },
    "748": {
      "op": "SWAP2"
    },
    "749": {
      "op": "AND"
    },
    "750": {
      "op": "DUP2"
    },
    "751": {
      "op": "MSTORE"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "754": {
      "op": "ADD"
    },
    "755": {
      "offset": [
        967,
        1004
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x236"
    },
    "758": {
      "op": "JUMP"
    },
    "759": {
      "offset": [
        1756,
        1791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "760": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "761": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "DUP1",
      "path": "23"
    },
    "762": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "763": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x303"
    },
    "766": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "767": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "769": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "DUP1",
      "path": "23"
    },
    "770": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "REVERT",
      "path": "23"
    },
    "771": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "offset": [
        1756,
        1791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "775": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "776": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "779": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "op": "SUB"
    },
    "788": {
      "offset": [
        1756,
        1791
      ],
      "op": "AND",
      "path": "23"
    },
    "789": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "790": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1756,
        1791
      ],
      "op": "JUMP",
      "path": "23"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "DUP1",
      "path": "2"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x323"
    },
    "798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "DUP1",
      "path": "2"
    },
    "802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "REVERT",
      "path": "2"
    },
    "803": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F"
    },
    "808": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x332"
    },
    "811": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "814": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144C"
    },
    "817": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73E"
    },
    "822": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "823": {
      "offset": [
        1856,
        1887
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "824": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "DUP1",
      "path": "23"
    },
    "826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "827": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x343"
    },
    "830": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "831": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "833": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "DUP1",
      "path": "23"
    },
    "834": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "REVERT",
      "path": "23"
    },
    "835": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "836": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "POP",
      "path": "23"
    },
    "837": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "840": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "842": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "843": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "DUP2",
      "path": "23"
    },
    "844": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1856,
        1887
      ],
      "op": "JUMP",
      "path": "23"
    },
    "845": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "846": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "847": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "848": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "849": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "852": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "853": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "855": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "856": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "REVERT",
      "path": "2"
    },
    "857": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "861": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "862": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "864": {
      "op": "DUP2"
    },
    "865": {
      "op": "MSTORE"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236"
    },
    "872": {
      "op": "JUMP"
    },
    "873": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "874": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "875": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "DUP1",
      "path": "23"
    },
    "876": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "877": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x375"
    },
    "880": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "881": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "883": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "DUP1",
      "path": "23"
    },
    "884": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "REVERT",
      "path": "23"
    },
    "885": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4899,
        4903
      ],
      "op": "ADDRESS",
      "path": "23",
      "statement": 2
    },
    "888": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "891": {
      "fn": "ChainEstateTokenV1.getContractAddress",
      "offset": [
        4815,
        4911
      ],
      "op": "JUMP",
      "path": "23"
    },
    "892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "893": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "896": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x388"
    },
    "899": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "900": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "902": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "903": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "REVERT",
      "path": "2"
    },
    "904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F"
    },
    "909": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x397"
    },
    "912": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "913": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13FC"
    },
    "918": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "919": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "920": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x762"
    },
    "923": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "924": {
      "offset": [
        2060,
        2098
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "925": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "926": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "DUP1",
      "path": "23"
    },
    "927": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "928": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A8"
    },
    "931": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "932": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "934": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "DUP1",
      "path": "23"
    },
    "935": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "REVERT",
      "path": "23"
    },
    "936": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "937": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "POP",
      "path": "23"
    },
    "938": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "941": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "943": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "DUP2",
      "path": "23"
    },
    "945": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2060,
        2098
      ],
      "op": "JUMP",
      "path": "23"
    },
    "946": {
      "offset": [
        1187,
        1233
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "947": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "948": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "DUP1",
      "path": "23"
    },
    "949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "950": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3BE"
    },
    "953": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "954": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "956": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "DUP1",
      "path": "23"
    },
    "957": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "REVERT",
      "path": "23"
    },
    "958": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "offset": [
        1187,
        1233
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "962": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "963": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "966": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "offset": [
        1187,
        1233
      ],
      "op": "AND",
      "path": "23"
    },
    "976": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "DUP2",
      "path": "23"
    },
    "977": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1187,
        1233
      ],
      "op": "JUMP",
      "path": "23"
    },
    "978": {
      "offset": [
        1067,
        1099
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "979": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "980": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "DUP1",
      "path": "23"
    },
    "981": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "982": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3DE"
    },
    "985": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "986": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "988": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "DUP1",
      "path": "23"
    },
    "989": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "REVERT",
      "path": "23"
    },
    "990": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "991": {
      "op": "POP"
    },
    "992": {
      "offset": [
        1067,
        1099
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "994": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "995": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "998": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "offset": [
        1067,
        1099
      ],
      "op": "AND",
      "path": "23"
    },
    "1008": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1009": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1067,
        1099
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1010": {
      "offset": [
        1631,
        1676
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1011": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1012": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1013": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1014": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3FE"
    },
    "1017": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1018": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1020": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1021": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1022": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "offset": [
        1631,
        1676
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "1026": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1027": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "1030": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "offset": [
        1631,
        1676
      ],
      "op": "AND",
      "path": "23"
    },
    "1040": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1041": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1631,
        1676
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1042": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1043": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1044": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1045": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1046": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x41E"
    },
    "1049": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1050": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1052": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1053": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1054": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5376,
        5391
      ],
      "op": "TIMESTAMP",
      "path": "23",
      "statement": 3
    },
    "1057": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "1060": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        5298,
        5398
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1061": {
      "offset": [
        1947,
        1997
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1062": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1063": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1064": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1065": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x431"
    },
    "1068": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1069": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1071": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1072": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1073": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1074": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "POP",
      "path": "23"
    },
    "1075": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "1078": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x10"
    },
    "1080": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1081": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1082": {
      "fn": "ChainEstateTokenV1.getCurrentTimestamp",
      "offset": [
        1947,
        1997
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1083": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1084": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1085": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1086": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1087": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x447"
    },
    "1090": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1091": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1093": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1094": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1095": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1096": {
      "op": "POP"
    },
    "1097": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "1100": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x456"
    },
    "1103": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1104": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1106": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1428"
    },
    "1109": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1110": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1117": {
      "op": "SHL"
    },
    "1118": {
      "op": "SUB"
    },
    "1119": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "2",
      "statement": 4
    },
    "1120": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1122": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1123": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1124": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1125": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1127": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1128": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1129": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1130": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1132": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1133": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1134": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1135": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1136": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1137": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47D"
    },
    "1144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1145": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1148": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1149": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1150": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1151": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1154": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A1"
    },
    "1157": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1159": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "1160": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1161": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1162": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1163": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1164": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x494"
    },
    "1167": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1168": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1170": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1171": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1172": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x486"
    },
    "1177": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4A3"
    },
    "1180": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1181": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1183": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1428"
    },
    "1186": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "jump": "i",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1187": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1188": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7E0"
    },
    "1191": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "jump": "i",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1192": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1193": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1194": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1195": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1196": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4B4"
    },
    "1199": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1200": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1202": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1203": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1204": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1205": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "POP",
      "path": "23"
    },
    "1206": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x486"
    },
    "1209": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x82E"
    },
    "1212": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "jump": "i",
      "offset": [
        9314,
        9477
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1213": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1215": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1216": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1217": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1220": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1221": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1223": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1224": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1225": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1226": {
      "op": "POP"
    },
    "1227": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x5"
    },
    "1229": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1239": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DF"
    },
    "1242": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1243": {
      "offset": [
        1416,
        1453
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1244": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1245": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1246": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1247": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4E7"
    },
    "1250": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1251": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1253": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1254": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1255": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "offset": [
        1416,
        1453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "1259": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1260": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "1263": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "op": "SUB"
    },
    "1272": {
      "offset": [
        1416,
        1453
      ],
      "op": "AND",
      "path": "23"
    },
    "1273": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1274": {
      "fn": "Ownable.owner",
      "offset": [
        1416,
        1453
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1275": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1276": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1277": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1278": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1279": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "1282": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1283": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1285": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1286": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1287": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1288": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "POP",
      "path": "2"
    },
    "1289": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229"
    },
    "1292": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x865"
    },
    "1295": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1296": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1297": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1298": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1299": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1300": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51C"
    },
    "1303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1304": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1306": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1307": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1308": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F"
    },
    "1313": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52B"
    },
    "1316": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1317": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1319": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13FC"
    },
    "1322": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1323": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1324": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x874"
    },
    "1327": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1328": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1329": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1330": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1331": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1332": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x53C"
    },
    "1335": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1336": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1338": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1339": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1340": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25F"
    },
    "1345": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x54B"
    },
    "1348": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1349": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1351": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13FC"
    },
    "1354": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1355": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1356": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x906"
    },
    "1359": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1360": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1361": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1362": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1363": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1364": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x55C"
    },
    "1367": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1368": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1370": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1371": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1372": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x486"
    },
    "1377": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x56B"
    },
    "1380": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1381": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1383": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1428"
    },
    "1386": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "jump": "i",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1387": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1388": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBA3"
    },
    "1391": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "jump": "i",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1392": {
      "offset": [
        2347,
        2373
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1393": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1394": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1395": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1396": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x57C"
    },
    "1399": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1400": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1402": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1403": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1404": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1405": {
      "op": "POP"
    },
    "1406": {
      "offset": [
        2347,
        2373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x14"
    },
    "1408": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1409": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "1412": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "offset": [
        2347,
        2373
      ],
      "op": "AND",
      "path": "23"
    },
    "1422": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1423": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2347,
        2373
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1424": {
      "offset": [
        1520,
        1565
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1425": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1426": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1427": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1428": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x59C"
    },
    "1431": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1432": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1434": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1435": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1436": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "offset": [
        1520,
        1565
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "1440": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1441": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF"
    },
    "1444": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1451": {
      "op": "SHL"
    },
    "1452": {
      "op": "SUB"
    },
    "1453": {
      "offset": [
        1520,
        1565
      ],
      "op": "AND",
      "path": "23"
    },
    "1454": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1455": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        1520,
        1565
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1456": {
      "offset": [
        2156,
        2194
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1457": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1458": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1459": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1460": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5BC"
    },
    "1463": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1464": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1466": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1467": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1468": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1469": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "POP",
      "path": "23"
    },
    "1470": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "1473": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x12"
    },
    "1475": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1476": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1477": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        2156,
        2194
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1478": {
      "offset": [
        651,
        700
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1479": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1480": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1481": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1482": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5D2"
    },
    "1485": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1486": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1488": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1489": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1490": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1491": {
      "op": "POP"
    },
    "1492": {
      "offset": [
        651,
        700
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25F"
    },
    "1495": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5E1"
    },
    "1498": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1499": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1501": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1428"
    },
    "1504": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "jump": "i",
      "offset": [
        651,
        700
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1505": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1506": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "1508": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1510": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1511": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1513": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1514": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1515": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1516": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1518": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1519": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1520": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1521": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1523": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "AND",
      "path": "23"
    },
    "1524": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1525": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        651,
        700
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1526": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1527": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1528": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1529": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1530": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x602"
    },
    "1533": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1534": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1536": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1537": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1538": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "1543": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x611"
    },
    "1546": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1547": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1549": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148D"
    },
    "1552": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1553": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "op": "SUB"
    },
    "1562": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 6
    },
    "1563": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1564": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "1565": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1567": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1568": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1569": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1570": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1572": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1574": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1575": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1576": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1577": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1579": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1580": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1581": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1582": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1583": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1584": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1585": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "1586": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1587": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1588": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1589": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1590": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1591": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1592": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1593": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1594": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1595": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "1603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1606": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x657"
    },
    "1616": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1428"
    },
    "1622": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1623": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1624": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEE"
    },
    "1627": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1628": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1629": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1630": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1631": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1632": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x668"
    },
    "1635": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1636": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1638": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1639": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1640": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1641": {
      "op": "POP"
    },
    "1642": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x486"
    },
    "1645": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x677"
    },
    "1648": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1649": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1651": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14C6"
    },
    "1654": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "jump": "i",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1655": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1656": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC86"
    },
    "1659": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "jump": "i",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1660": {
      "offset": [
        2484,
        2525
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1661": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "1662": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1663": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1664": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x688"
    },
    "1667": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1668": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1670": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1671": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1672": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1673": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "POP",
      "path": "23"
    },
    "1674": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C"
    },
    "1677": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x15"
    },
    "1679": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1680": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1681": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        2484,
        2525
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1682": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1683": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1685": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x3"
    },
    "1687": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1688": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1689": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A1"
    },
    "1692": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1693": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14DF"
    },
    "1696": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1697": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1698": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1699": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1701": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1702": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1704": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1705": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1706": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "1707": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "1708": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1710": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1711": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1713": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1714": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1715": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1716": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1717": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1719": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1720": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1721": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1722": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1723": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1724": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1725": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1726": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1727": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1729": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1730": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1731": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1732": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1733": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CD"
    },
    "1736": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1737": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14DF"
    },
    "1740": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1741": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1742": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1743": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1744": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71A"
    },
    "1747": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1748": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1749": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1751": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "2"
    },
    "1752": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6EF"
    },
    "1755": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1756": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1759": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1760": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1761": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1762": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "1763": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "1764": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1765": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1766": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1767": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1769": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1770": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1771": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71A"
    },
    "1774": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1775": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1776": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1777": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1778": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1779": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1780": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1782": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1783": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1785": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1788": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1789": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1790": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1791": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1792": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1793": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1794": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1795": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1797": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1798": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1799": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1802": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1803": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1804": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "2"
    },
    "1805": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FD"
    },
    "1808": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1809": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1810": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1811": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "2"
    },
    "1812": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1814": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "2"
    },
    "1815": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1816": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "1817": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1818": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1819": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "1820": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "1821": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "1822": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "1823": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "1824": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1825": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "1826": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1827": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1828": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1829": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 8
    },
    "1832": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x732"
    },
    "1835": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1836": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1837": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1838": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBA"
    },
    "1841": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1842": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1843": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x1"
    },
    "1845": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1846": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "1847": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "1848": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1849": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1850": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1851": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "1852": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "1853": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1854": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1855": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1857": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1858": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x74C"
    },
    "1861": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1862": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1863": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1864": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDE"
    },
    "1867": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1868": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1869": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x757"
    },
    "1872": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1873": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE70"
    },
    "1878": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1879": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x1"
    },
    "1883": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1884": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1891": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "1895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1897": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1899": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1901": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1902": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1903": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1906": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1907": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1908": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1918": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "2"
    },
    "1919": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1920": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1921": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1922": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1923": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1924": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1925": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1926": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1927": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1928": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1929": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1930": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "1933": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1934": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1935": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1936": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1937": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1938": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79C"
    },
    "1941": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1942": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1943": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1530"
    },
    "1947": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1948": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBA"
    },
    "1952": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1954": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1956": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1963": {
      "op": "SHL"
    },
    "1964": {
      "op": "SUB"
    },
    "1965": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1966": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1967": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1968": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D4"
    },
    "1971": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1972": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1974": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1975": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1983": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1984": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1986": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1987": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "1990": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1991": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1548"
    },
    "1994": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1995": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1996": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1998": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1999": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2000": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2001": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "2002": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2003": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2004": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2005": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x7DE"
    },
    "2008": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2010": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1044"
    },
    "2013": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2014": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2015": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2016": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2017": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2019": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2026": {
      "op": "SHL"
    },
    "2027": {
      "op": "SUB"
    },
    "2028": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2029": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2030": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2031": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80A"
    },
    "2034": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2035": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2046": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2050": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "2053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1548"
    },
    "2057": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "AND",
      "path": "23",
      "statement": 16
    },
    "2068": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2070": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2071": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2072": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2073": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5132
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2075": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2077": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2078": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2080": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2081": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5138
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2082": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5145
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2083": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5145
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2086": {
      "op": "NOT"
    },
    "2087": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5145
      ],
      "op": "AND",
      "path": "23"
    },
    "2088": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5141,
        5145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2090": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5145
      ],
      "op": "OR",
      "path": "23"
    },
    "2091": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2092": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "offset": [
        5116,
        5145
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2093": {
      "fn": "ChainEstateTokenV1.excludeUserFromFees",
      "jump": "o",
      "offset": [
        5046,
        5152
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2094": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9314,
        9477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2095": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2097": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2104": {
      "op": "SHL"
    },
    "2105": {
      "op": "SUB"
    },
    "2106": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2107": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2108": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2109": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x858"
    },
    "2112": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2124": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2127": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2128": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "2131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2132": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1548"
    },
    "2135": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2136": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2137": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9402,
        9423
      ],
      "op": "SELFBALANCE",
      "path": "23"
    },
    "2138": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9433,
        9470
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 17,
      "value": "0x862"
    },
    "2141": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9402,
        9423
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2142": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9433,
        9450
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1096"
    },
    "2145": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "jump": "i",
      "offset": [
        9433,
        9470
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2146": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9433,
        9470
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2147": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "offset": [
        9363,
        9477
      ],
      "op": "POP",
      "path": "23"
    },
    "2148": {
      "fn": "ChainEstateTokenV1.disperseFeesManually",
      "jump": "o",
      "offset": [
        9314,
        9477
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2149": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2150": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2152": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x4"
    },
    "2154": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2155": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2156": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A1"
    },
    "2159": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2160": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14DF"
    },
    "2163": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2164": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2165": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2166": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2173": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2175": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2176": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2177": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2178": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2180": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2181": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2182": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2189": {
      "op": "SHL"
    },
    "2190": {
      "op": "SUB"
    },
    "2191": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2192": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "2"
    },
    "2193": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2194": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2195": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2196": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2197": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2198": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2199": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2200": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2201": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2202": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2203": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2204": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 19
    },
    "2205": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2206": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "2"
    },
    "2207": {
      "branch": 68,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2208": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F9"
    },
    "2211": {
      "branch": 68,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2212": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2221": {
      "op": "SHL"
    },
    "2222": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2223": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2226": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2228": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2229": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "2"
    },
    "2230": {
      "op": "MSTORE"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2235": {
      "op": "DUP3"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2273": {
      "op": "DUP3"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2287": {
      "op": "DUP3"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "2296": {
      "op": "JUMP"
    },
    "2297": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2298": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0x757"
    },
    "2301": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2302": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2304": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2305": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "2"
    },
    "2306": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBA"
    },
    "2309": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2310": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2311": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6151,
        6162
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x14"
    },
    "2313": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6151,
        6162
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2314": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6004,
        6008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2316": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6004,
        6008
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6151,
        6162
      ],
      "op": "AND",
      "path": "23"
    },
    "2326": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6162
      ],
      "op": "AND",
      "path": "23"
    },
    "2336": {
      "branch": 57,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6162
      ],
      "op": "EQ",
      "path": "23"
    },
    "2337": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6197
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2338": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6197
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2339": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6197
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x93C"
    },
    "2342": {
      "branch": 57,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6197
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2345": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2347": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2348": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2349": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2350": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6183
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2352": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2354": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2355": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2357": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2358": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2359": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2360": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2362": {
      "branch": 58,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6167,
        6197
      ],
      "op": "AND",
      "path": "23"
    },
    "2363": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6166,
        6197
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2364": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6197
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2365": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6229
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2366": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6229
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2367": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6229
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x961"
    },
    "2370": {
      "branch": 58,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6229
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2381": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "AND",
      "path": "23"
    },
    "2382": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2384": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2385": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2386": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2387": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6218
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2389": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2391": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2392": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2394": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2395": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2396": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2397": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2399": {
      "branch": 59,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6202,
        6229
      ],
      "op": "AND",
      "path": "23"
    },
    "2400": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6201,
        6229
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2401": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6135,
        6229
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2402": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6131,
        6402
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2403": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6131,
        6402
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA2F"
    },
    "2406": {
      "branch": 59,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6131,
        6402
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2407": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6304,
        6307
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 21,
      "value": "0xA6"
    },
    "2409": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6301
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x971"
    },
    "2412": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2414": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2415": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2416": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2417": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6301
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2418": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6307
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x97B"
    },
    "2421": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6307
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2422": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6307
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2423": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6307
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "2426": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6288,
        6307
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2427": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6288,
        6307
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2428": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6277,
        6283
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2429": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6274
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x99B"
    },
    "2432": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6264,
        6273
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "op": "SUB"
    },
    "2441": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "2"
    },
    "2442": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2444": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2445": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2446": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2447": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2449": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2450": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2451": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2452": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2454": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2455": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2456": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2457": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2458": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2459": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6274
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2460": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6283
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9A5"
    },
    "2463": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6283
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2464": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6283
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2465": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6283
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "2468": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6254,
        6283
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2469": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6254,
        6283
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2470": {
      "branch": 60,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6253,
        6308
      ],
      "op": "LT",
      "path": "23"
    },
    "2471": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA2F"
    },
    "2474": {
      "branch": 60,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2475": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2477": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2478": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2486": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2489": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2491": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2492": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "ADD",
      "path": "23"
    },
    "2493": {
      "op": "MSTORE"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2498": {
      "op": "DUP3"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "PUSH32",
      "value": "0x596F752063616E27742068617665206D6F7265207468616E203225206F662074"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2536": {
      "op": "DUP3"
    },
    "2537": {
      "op": "ADD"
    },
    "2538": {
      "op": "MSTORE"
    },
    "2539": {
      "op": "PUSH32",
      "value": "0x686520746F74616C204348455320737570706C7920616674657220612050616E"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2574": {
      "op": "DUP3"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH14",
      "value": "0x31B0B5B2A9BBB0B81039BBB0B817"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2597": {
      "op": "DUP3"
    },
    "2598": {
      "op": "ADD"
    },
    "2599": {
      "op": "MSTORE"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2602": {
      "op": "ADD"
    },
    "2603": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7CB"
    },
    "2606": {
      "op": "JUMP"
    },
    "2607": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6245,
        6391
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2608": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2609": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2611": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2612": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2613": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2614": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6523
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2616": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2618": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2619": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2621": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2622": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2623": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2624": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2626": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "AND",
      "path": "23"
    },
    "2627": {
      "branch": 61,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6537
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2628": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6568
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA65"
    },
    "2631": {
      "branch": 61,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6568
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2639": {
      "op": "SHL"
    },
    "2640": {
      "op": "SUB"
    },
    "2641": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2642": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "AND",
      "path": "23"
    },
    "2643": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2645": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2646": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2647": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2648": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6557
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "2650": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2652": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2653": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2655": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2656": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2657": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2658": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2660": {
      "branch": 62,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6541,
        6568
      ],
      "op": "AND",
      "path": "23"
    },
    "2661": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6507,
        6568
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2662": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6503,
        6662
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2663": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6503,
        6662
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA7D"
    },
    "2666": {
      "branch": 62,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6503,
        6662
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2667": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6584,
        6626
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 22,
      "value": "0xA75"
    },
    "2670": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2671": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6608,
        6617
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2672": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6619,
        6625
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2673": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6584,
        6593
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE70"
    },
    "2676": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6584,
        6626
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2677": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6584,
        6626
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6647,
        6651
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 23,
      "value": "0x1"
    },
    "2681": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6640,
        6651
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x738"
    },
    "2684": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6640,
        6651
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2685": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6503,
        6662
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2686": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6712,
        6733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2688": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6781,
        6784
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2690": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6746,
        6777
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x10"
    },
    "2692": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6746,
        6777
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2693": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6737,
        6743
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2694": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6737,
        6777
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA8F"
    },
    "2697": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6737,
        6777
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2698": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6737,
        6777
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2699": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6737,
        6777
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "2702": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6737,
        6777
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2703": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6737,
        6777
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2704": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6736,
        6784
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA99"
    },
    "2707": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6736,
        6784
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2708": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6736,
        6784
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2709": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6736,
        6784
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "2712": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6736,
        6784
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2713": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6736,
        6784
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2714": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6712,
        6784
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2715": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6712,
        6784
      ],
      "op": "POP",
      "path": "23"
    },
    "2716": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6837,
        6857
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2718": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6893,
        6896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2720": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6870,
        6889
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x12"
    },
    "2722": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6870,
        6889
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2723": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6861,
        6867
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2724": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6861,
        6889
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAAD"
    },
    "2727": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6861,
        6889
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2728": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6861,
        6889
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2729": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6861,
        6889
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "2732": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6861,
        6889
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2733": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6861,
        6889
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2734": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6860,
        6896
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAB7"
    },
    "2737": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6860,
        6896
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2738": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6860,
        6896
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2739": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6860,
        6896
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "2742": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6860,
        6896
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2743": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6860,
        6896
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2744": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6837,
        6896
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2745": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6837,
        6896
      ],
      "op": "POP",
      "path": "23"
    },
    "2746": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6949,
        6969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2748": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7005,
        7008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2750": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6982,
        7001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "2752": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6982,
        7001
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2753": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6973,
        6979
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2754": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6973,
        7001
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xACB"
    },
    "2757": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6973,
        7001
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2758": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6973,
        7001
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2759": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6973,
        7001
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "2762": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6973,
        7001
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2763": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6973,
        7001
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2764": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6972,
        7008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAD5"
    },
    "2767": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6972,
        7008
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2768": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6972,
        7008
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2769": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6972,
        7008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "2772": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        6972,
        7008
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2773": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6972,
        7008
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2774": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6949,
        7008
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7077,
        7093
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2778": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        6949,
        7008
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2779": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAE4"
    },
    "2782": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7112,
        7124
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2783": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7109
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2784": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "2787": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7096,
        7124
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2788": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7124
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2789": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7139
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAEE"
    },
    "2792": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7139
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2793": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7139
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2794": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7139
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "2797": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7096,
        7139
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2798": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7096,
        7139
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2799": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7077,
        7139
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7213,
        7261
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 24,
      "value": "0xAFB"
    },
    "2804": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2805": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7245,
        7249
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "2806": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7252,
        7260
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2807": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7213,
        7222
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE70"
    },
    "2810": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7213,
        7261
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2811": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7213,
        7261
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2812": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7320,
        7324
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "2813": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7272,
        7299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2815": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2816": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2817": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2818": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2820": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2821": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2822": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2823": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2825": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2826": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2827": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2828": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7357,
        7368
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x14"
    },
    "2830": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7357,
        7368
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "op": "SUB"
    },
    "2839": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7357,
        7368
      ],
      "op": "AND",
      "path": "23"
    },
    "2840": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2841": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7368
      ],
      "op": "EQ",
      "path": "23"
    },
    "2842": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7368
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2843": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7368
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2844": {
      "branch": 63,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7368
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2845": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7395
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB26"
    },
    "2848": {
      "branch": 63,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7395
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2849": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7395
      ],
      "op": "POP",
      "path": "23"
    },
    "2850": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7394,
        7395
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2852": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7372,
        7391
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2853": {
      "branch": 64,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7372,
        7395
      ],
      "op": "GT",
      "path": "23"
    },
    "2854": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7341,
        7395
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2855": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7337,
        7825
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2856": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7337,
        7825
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB7B"
    },
    "2859": {
      "branch": 64,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7337,
        7825
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2860": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7415,
        7438
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2861": {
      "branch": 65,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7415,
        7438
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2862": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7411,
        7637
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB69"
    },
    "2865": {
      "branch": 65,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7411,
        7637
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2866": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7509,
        7528
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x15"
    },
    "2868": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7509,
        7528
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2869": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7494,
        7505
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x14"
    },
    "2871": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7494,
        7505
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "op": "SUB"
    },
    "2880": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7494,
        7505
      ],
      "op": "AND",
      "path": "23"
    },
    "2881": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2883": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2884": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2885": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2886": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2888": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2889": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2890": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2891": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2893": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2894": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2895": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2896": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7484,
        7528
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB59"
    },
    "2899": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7484,
        7528
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2900": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7484,
        7528
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2901": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7484,
        7528
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "2904": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7484,
        7528
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2905": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7484,
        7528
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2906": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7462,
        7481
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2907": {
      "branch": 66,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7462,
        7528
      ],
      "op": "GT",
      "path": "23"
    },
    "2908": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7458,
        7606
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2909": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7458,
        7606
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB69"
    },
    "2912": {
      "branch": 66,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7458,
        7606
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2913": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7552,
        7587
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 25,
      "value": "0xB69"
    },
    "2916": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7567,
        7586
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2917": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7552,
        7566
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11B4"
    },
    "2920": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7552,
        7587
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2921": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7552,
        7587
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2922": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7679,
        7700
      ],
      "op": "SELFBALANCE",
      "path": "23"
    },
    "2923": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7718,
        7740
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2924": {
      "branch": 67,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7718,
        7740
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2925": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7714,
        7815
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB79"
    },
    "2928": {
      "branch": 67,
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7714,
        7815
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2929": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7760,
        7800
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 26,
      "value": "0xB79"
    },
    "2932": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7778,
        7799
      ],
      "op": "SELFBALANCE",
      "path": "23"
    },
    "2933": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7760,
        7777
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1096"
    },
    "2936": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7760,
        7800
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2937": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7760,
        7800
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2938": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7397,
        7825
      ],
      "op": "POP",
      "path": "23"
    },
    "2939": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7337,
        7825
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2940": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7896,
        7918
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2942": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7921,
        7938
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB87"
    },
    "2945": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7930,
        7938
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2946": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7921,
        7927
      ],
      "op": "DUP10",
      "path": "23"
    },
    "2947": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7921,
        7938
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15BE"
    },
    "2950": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7921,
        7938
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2951": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7921,
        7938
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2952": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7896,
        7938
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2953": {
      "op": "POP"
    },
    "2954": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7948,
        7998
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 27,
      "value": "0xB94"
    },
    "2957": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2958": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7972,
        7981
      ],
      "op": "DUP11",
      "path": "23"
    },
    "2959": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7983,
        7997
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2960": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7948,
        7957
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE70"
    },
    "2963": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "i",
      "offset": [
        7948,
        7998
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2964": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        7948,
        7998
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2965": {
      "op": "POP"
    },
    "2966": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        8015,
        8019
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 28,
      "value": "0x1"
    },
    "2968": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        8015,
        8019
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "2969": {
      "fn": "ChainEstateTokenV1.transfer",
      "offset": [
        5926,
        8026
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "2970": {
      "op": "POP"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "op": "POP"
    },
    "2973": {
      "op": "POP"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "op": "POP"
    },
    "2976": {
      "op": "POP"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "fn": "ChainEstateTokenV1.transfer",
      "jump": "o",
      "offset": [
        5926,
        8026
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2979": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2980": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2982": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2989": {
      "op": "SHL"
    },
    "2990": {
      "op": "SUB"
    },
    "2991": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2992": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2993": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2994": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCD"
    },
    "2997": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2998": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3000": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3009": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3010": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3012": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3013": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "3016": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3017": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1548"
    },
    "3020": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3021": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3028": {
      "op": "SHL"
    },
    "3029": {
      "op": "SUB"
    },
    "3030": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "AND",
      "path": "23",
      "statement": 29
    },
    "3031": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5646,
        5651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3033": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3034": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3035": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3036": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5637
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "3038": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3040": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3041": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3043": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3044": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5643
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3045": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3046": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5651
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3049": {
      "op": "NOT"
    },
    "3050": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5651
      ],
      "op": "AND",
      "path": "23"
    },
    "3051": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5651
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3052": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "offset": [
        5621,
        5651
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3053": {
      "fn": "ChainEstateTokenV1.includeUsersInFees",
      "jump": "o",
      "offset": [
        5552,
        5658
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3055": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3057": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "op": "SUB"
    },
    "3066": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3067": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3068": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3069": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "3072": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3073": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3075": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3076": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3082": {
      "op": "SHL"
    },
    "3083": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3085": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3087": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "3091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1548"
    },
    "3095": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3103": {
      "op": "SHL"
    },
    "3104": {
      "op": "SUB"
    },
    "3105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 30
    },
    "3106": {
      "branch": 76,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "3107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "3110": {
      "branch": 76,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3120": {
      "op": "SHL"
    },
    "3121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3134": {
      "op": "DUP3"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3172": {
      "op": "DUP3"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "op": "MSTORE"
    },
    "3175": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3187": {
      "op": "DUP3"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3192": {
      "op": "ADD"
    },
    "3193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "3196": {
      "op": "JUMP"
    },
    "3197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0x862"
    },
    "3201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1044"
    },
    "3205": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3206": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3207": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "op": "SUB"
    },
    "3218": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3219": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3220": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3221": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "3224": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3225": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3227": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3234": {
      "op": "SHL"
    },
    "3235": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3236": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3239": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CB"
    },
    "3243": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3244": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1548"
    },
    "3247": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3249": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9812,
        9831
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 32,
      "value": "0x15"
    },
    "3251": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "offset": [
        9812,
        9844
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3252": {
      "fn": "ChainEstateTokenV1.setContractCHESDivisor",
      "jump": "o",
      "offset": [
        9733,
        9851
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3253": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        12504,
        12624
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3254": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        12504,
        12624
      ],
      "op": "POP",
      "path": "2"
    },
    "3255": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        12504,
        12624
      ],
      "op": "POP",
      "path": "2"
    },
    "3256": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        12504,
        12624
      ],
      "op": "POP",
      "path": "2"
    },
    "3257": {
      "fn": "ERC20._afterTokenTransfer",
      "jump": "o",
      "offset": [
        12504,
        12624
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3258": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "op": "SUB"
    },
    "3267": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 33
    },
    "3268": {
      "branch": 69,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "2"
    },
    "3269": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1C"
    },
    "3272": {
      "branch": 69,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3273": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3275": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3284": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3287": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3289": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3290": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "2"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "DUP3"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "op": "MSTORE"
    },
    "3298": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3333": {
      "op": "DUP3"
    },
    "3334": {
      "op": "ADD"
    },
    "3335": {
      "op": "MSTORE"
    },
    "3336": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "3355": {
      "op": "JUMP"
    },
    "3356": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "op": "SUB"
    },
    "3365": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 34
    },
    "3366": {
      "branch": 70,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "2"
    },
    "3367": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7D"
    },
    "3370": {
      "branch": 70,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3371": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3373": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3382": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3385": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3387": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3388": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "3389": {
      "op": "MSTORE"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3394": {
      "op": "DUP3"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "MSTORE"
    },
    "3397": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3432": {
      "op": "DUP3"
    },
    "3433": {
      "op": "ADD"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3440": {
      "op": "SHL"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3443": {
      "op": "DUP3"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "MSTORE"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3448": {
      "op": "ADD"
    },
    "3449": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "3452": {
      "op": "JUMP"
    },
    "3453": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3460": {
      "op": "SHL"
    },
    "3461": {
      "op": "SUB"
    },
    "3462": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 35
    },
    "3463": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3464": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "2"
    },
    "3465": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3467": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3468": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3469": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3470": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3472": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3474": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3475": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3476": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3477": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3479": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3480": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3481": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3482": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3483": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3484": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "2"
    },
    "3485": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3486": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3487": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3488": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3489": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3490": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3491": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3492": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3493": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3494": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3495": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3496": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3497": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3498": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 36
    },
    "3499": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3500": {
      "op": "DUP5"
    },
    "3501": {
      "op": "DUP2"
    },
    "3502": {
      "op": "MSTORE"
    },
    "3503": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3536": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3537": {
      "op": "ADD"
    },
    "3538": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3540": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3541": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3542": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3543": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "2"
    },
    "3544": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3545": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3546": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "3547": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "3548": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "3549": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3550": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "op": "SUB"
    },
    "3559": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3560": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3561": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "3562": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3564": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3565": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3566": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3567": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3569": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3571": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3572": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3573": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3574": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3576": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3577": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3578": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3579": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3580": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3581": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "3582": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3583": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3584": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3585": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3586": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3587": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3588": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3591": {
      "op": "NOT"
    },
    "3592": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3593": {
      "branch": 71,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "2"
    },
    "3594": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6A"
    },
    "3597": {
      "branch": 71,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3598": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 37
    },
    "3599": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3600": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "2"
    },
    "3601": {
      "branch": 72,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3602": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5D"
    },
    "3605": {
      "branch": 72,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3606": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3608": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3617": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3620": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3622": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3623": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "2"
    },
    "3624": {
      "op": "MSTORE"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3629": {
      "op": "DUP3"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3667": {
      "op": "DUP3"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3672": {
      "op": "ADD"
    },
    "3673": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "3676": {
      "op": "JUMP"
    },
    "3677": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3678": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0xE6A"
    },
    "3681": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3682": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3683": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3684": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3685": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "2"
    },
    "3686": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCBA"
    },
    "3689": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3690": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3691": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "3692": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "3693": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "3694": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "3695": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3696": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "op": "SUB"
    },
    "3705": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 39
    },
    "3706": {
      "branch": 73,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "2"
    },
    "3707": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xED4"
    },
    "3710": {
      "branch": 73,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3711": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3713": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3722": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3725": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3727": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3728": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "2"
    },
    "3729": {
      "op": "MSTORE"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3734": {
      "op": "DUP3"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3772": {
      "op": "DUP3"
    },
    "3773": {
      "op": "ADD"
    },
    "3774": {
      "op": "MSTORE"
    },
    "3775": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3783": {
      "op": "SHL"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "ADD"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "3795": {
      "op": "JUMP"
    },
    "3796": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3803": {
      "op": "SHL"
    },
    "3804": {
      "op": "SUB"
    },
    "3805": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 40
    },
    "3806": {
      "branch": 74,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "2"
    },
    "3807": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF36"
    },
    "3810": {
      "branch": 74,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3811": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3813": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3820": {
      "op": "SHL"
    },
    "3821": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3822": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3825": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3827": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3828": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "2"
    },
    "3829": {
      "op": "MSTORE"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3834": {
      "op": "DUP3"
    },
    "3835": {
      "op": "ADD"
    },
    "3836": {
      "op": "MSTORE"
    },
    "3837": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3881": {
      "op": "SHL"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3889": {
      "op": "ADD"
    },
    "3890": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "3893": {
      "op": "JUMP"
    },
    "3894": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3901": {
      "op": "SHL"
    },
    "3902": {
      "op": "SUB"
    },
    "3903": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3904": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "2"
    },
    "3905": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3907": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3908": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3909": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3910": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3912": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3913": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3914": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3915": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3917": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3918": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3919": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3920": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 41
    },
    "3921": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3922": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "2"
    },
    "3923": {
      "branch": 75,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3924": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFAE"
    },
    "3927": {
      "branch": 75,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3928": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3930": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3939": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3942": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3944": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3945": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "2"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3951": {
      "op": "DUP3"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3989": {
      "op": "DUP3"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "MSTORE"
    },
    "3992": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4004": {
      "op": "DUP3"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "4013": {
      "op": "JUMP"
    },
    "4014": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "op": "SUB"
    },
    "4023": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 42
    },
    "4024": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4025": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "2"
    },
    "4026": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4028": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4029": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4030": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4031": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4033": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4034": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4035": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4036": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4038": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4039": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4040": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4041": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4042": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4043": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "2"
    },
    "4044": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4045": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4046": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 43
    },
    "4047": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4048": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "2"
    },
    "4049": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4050": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4051": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4052": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4053": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4054": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4055": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4056": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4057": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4058": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4059": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE5"
    },
    "4062": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4063": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4064": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4065": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1530"
    },
    "4068": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4069": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4070": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4071": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "4072": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "4073": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4074": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4075": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4076": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "4077": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 44
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "op": "SUB"
    },
    "4086": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "4087": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4094": {
      "op": "SHL"
    },
    "4095": {
      "op": "SUB"
    },
    "4096": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "4097": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4130": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4131": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4133": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4134": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1031"
    },
    "4137": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4138": {
      "op": "DUP2"
    },
    "4139": {
      "op": "MSTORE"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "SWAP1"
    },
    "4144": {
      "op": "JUMP"
    },
    "4145": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4146": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4148": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4149": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4150": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4151": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "2"
    },
    "4152": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4153": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4154": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 45,
      "value": "0xE6A"
    },
    "4157": {
      "fn": "ERC20._transfer",
      "offset": [
        8115,
        8119
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4158": {
      "fn": "ERC20._transfer",
      "offset": [
        8121,
        8123
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4159": {
      "fn": "ERC20._transfer",
      "offset": [
        8125,
        8131
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4160": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8114
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131D"
    },
    "4163": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8095,
        8132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4164": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4165": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4167": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4168": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4175": {
      "op": "SHL"
    },
    "4176": {
      "op": "SUB"
    },
    "4177": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 46
    },
    "4178": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4179": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4186": {
      "op": "SHL"
    },
    "4187": {
      "op": "SUB"
    },
    "4188": {
      "op": "NOT"
    },
    "4189": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4190": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4191": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4192": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "4193": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4194": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4195": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4196": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x40"
    },
    "4198": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4199": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4200": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "4201": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4202": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4203": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4204": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4205": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4238": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4243": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4244": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4245": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4246": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8737,
        9164
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4247": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8798,
        8814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4249": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8873,
        8892
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "4251": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8873,
        8892
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4252": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8851,
        8870
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x12"
    },
    "4254": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8851,
        8870
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4255": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8848
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x10"
    },
    "4257": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8848
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4258": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8870
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10AB"
    },
    "4261": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8870
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4262": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8870
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4263": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8870
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "4266": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        8817,
        8870
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4267": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8870
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4268": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10B5"
    },
    "4271": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8892
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4272": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8892
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4273": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "4276": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        8817,
        8892
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4277": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8817,
        8892
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4278": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8925
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 48,
      "value": "0xA"
    },
    "4280": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8925
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4281": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8945,
        8976
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x10"
    },
    "4283": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8945,
        8976
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4284": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8798,
        8892
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4285": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8798,
        8892
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "op": "SUB"
    },
    "4295": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8925
      ],
      "op": "AND",
      "path": "23"
    },
    "4296": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4297": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8FC"
    },
    "4300": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4301": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8798,
        8892
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4302": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8798,
        8892
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4303": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8936,
        8976
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10D8"
    },
    "4306": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8936,
        8976
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4307": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8936,
        8942
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4308": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8936,
        8976
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "4311": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        8936,
        8976
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4312": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8936,
        8976
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4313": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8935,
        8988
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10E2"
    },
    "4316": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8935,
        8988
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4317": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8935,
        8988
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4318": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8935,
        8988
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "4321": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        8935,
        8988
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4322": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8935,
        8988
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4323": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4325": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4326": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4327": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4328": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4329": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4330": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "MUL",
      "path": "23"
    },
    "4331": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4332": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4334": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4335": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4336": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4337": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4338": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP9",
      "path": "23"
    },
    "4339": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP9",
      "path": "23"
    },
    "4340": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "CALL",
      "path": "23"
    },
    "4341": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4342": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "POP",
      "path": "23"
    },
    "4343": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "POP",
      "path": "23"
    },
    "4344": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "POP",
      "path": "23"
    },
    "4345": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "POP",
      "path": "23"
    },
    "4346": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4347": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4348": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4349": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x110A"
    },
    "4352": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4353": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4354": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4356": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4357": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4358": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4359": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4361": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4362": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8902,
        8989
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9021
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 49,
      "value": "0xC"
    },
    "4366": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9021
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4367": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9041,
        9060
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x12"
    },
    "4369": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9041,
        9060
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "op": "SUB"
    },
    "4378": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9021
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4379": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9021
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4380": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9021
      ],
      "op": "AND",
      "path": "23"
    },
    "4381": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9021
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4382": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8FC"
    },
    "4385": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4386": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9064,
        9072
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4387": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9064,
        9072
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4388": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9032,
        9060
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x112D"
    },
    "4391": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9032,
        9060
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4392": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9032,
        9038
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4393": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9032,
        9060
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "4396": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        9032,
        9060
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4397": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9032,
        9060
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4398": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9031,
        9072
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1137"
    },
    "4401": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9031,
        9072
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4402": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9031,
        9072
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4403": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9031,
        9072
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "4406": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        9031,
        9072
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4407": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9031,
        9072
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4408": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4410": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4411": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4412": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4413": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4414": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4415": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "MUL",
      "path": "23"
    },
    "4416": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4417": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4419": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4420": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4421": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4422": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4423": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP9",
      "path": "23"
    },
    "4424": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP9",
      "path": "23"
    },
    "4425": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "CALL",
      "path": "23"
    },
    "4426": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4427": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "POP",
      "path": "23"
    },
    "4428": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "POP",
      "path": "23"
    },
    "4429": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "POP",
      "path": "23"
    },
    "4430": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "POP",
      "path": "23"
    },
    "4431": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4432": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4433": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4434": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x115F"
    },
    "4437": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4438": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4439": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4441": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4442": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4443": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4444": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4446": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4447": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        8999,
        9073
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9105
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 50,
      "value": "0xD"
    },
    "4451": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9105
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4452": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9125,
        9144
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "4454": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9125,
        9144
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4461": {
      "op": "SHL"
    },
    "4462": {
      "op": "SUB"
    },
    "4463": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4464": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9105
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4465": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9105
      ],
      "op": "AND",
      "path": "23"
    },
    "4466": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4467": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8FC"
    },
    "4470": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4471": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9148,
        9156
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4472": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9148,
        9156
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4473": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9116,
        9144
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1182"
    },
    "4476": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9116,
        9144
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4477": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9116,
        9122
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4478": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9116,
        9144
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "4481": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        9116,
        9144
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4482": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9116,
        9144
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4483": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9115,
        9156
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118C"
    },
    "4486": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9115,
        9156
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4487": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9115,
        9156
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4488": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9115,
        9156
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "4491": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "jump": "i",
      "offset": [
        9115,
        9156
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4492": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9115,
        9156
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4493": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4495": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4496": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4497": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4498": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4499": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4500": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "MUL",
      "path": "23"
    },
    "4501": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4502": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4504": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4505": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4506": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4507": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4508": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP9",
      "path": "23"
    },
    "4509": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP9",
      "path": "23"
    },
    "4510": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "CALL",
      "path": "23"
    },
    "4511": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4512": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "POP",
      "path": "23"
    },
    "4513": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "POP",
      "path": "23"
    },
    "4514": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "POP",
      "path": "23"
    },
    "4515": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "POP",
      "path": "23"
    },
    "4516": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4517": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4518": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4519": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCB5"
    },
    "4522": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4523": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4524": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4526": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4527": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4528": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4529": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4531": {
      "fn": "ChainEstateTokenV1.sendFeesToWallets",
      "offset": [
        9083,
        9157
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4532": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8163,
        8599
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4533": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4535": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4536": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4537": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8259,
        8260
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4539": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4540": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4541": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4542": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "4544": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4545": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "ADD",
      "path": "23"
    },
    "4546": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4547": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4548": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8221,
        8242
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4550": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8221,
        8242
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4551": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4553": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4554": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "ADD",
      "path": "23"
    },
    "4555": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4556": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4557": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "4558": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4559": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "4560": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "ADD",
      "path": "23"
    },
    "4561": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4562": {
      "op": "POP"
    },
    "4563": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8245,
        8261
      ],
      "op": "POP",
      "path": "23"
    },
    "4564": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8221,
        8261
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4565": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8221,
        8261
      ],
      "op": "POP",
      "path": "23"
    },
    "4566": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8289,
        8293
      ],
      "op": "ADDRESS",
      "path": "23",
      "statement": 51
    },
    "4567": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8275
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4568": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8276,
        8277
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4570": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4571": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4572": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4573": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "LT",
      "path": "23"
    },
    "4574": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E9"
    },
    "4577": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4578": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E9"
    },
    "4581": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15D5"
    },
    "4584": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "jump": "i",
      "offset": [
        8271,
        8278
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4585": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4592": {
      "op": "SHL"
    },
    "4593": {
      "op": "SUB"
    },
    "4594": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4595": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4596": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "AND",
      "path": "23"
    },
    "4597": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4599": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4600": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4601": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "MUL",
      "path": "23"
    },
    "4602": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4603": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4604": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4605": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "ADD",
      "path": "23"
    },
    "4606": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4607": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "ADD",
      "path": "23"
    },
    "4608": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4609": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4610": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4611": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8294
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4612": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 52,
      "value": "0x13"
    },
    "4614": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4615": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4617": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4618": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4619": {
      "op": "PUSH4",
      "value": "0x15AB88C9"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4626": {
      "op": "SHL"
    },
    "4627": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4628": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4629": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4630": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4631": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4632": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4633": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4634": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "AND",
      "path": "23"
    },
    "4635": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4636": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8332
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xAD5C4648"
    },
    "4641": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8332
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4642": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4644": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4645": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4646": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ADD",
      "path": "23"
    },
    "4647": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4648": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4649": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8271,
        8278
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4650": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4651": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4652": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SUB",
      "path": "23"
    },
    "4653": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ADD",
      "path": "23"
    },
    "4654": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4655": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8327
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4656": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4657": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4658": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4659": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4660": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4661": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x123D"
    },
    "4664": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4665": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4667": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4668": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4669": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4670": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "POP",
      "path": "23"
    },
    "4671": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "GAS",
      "path": "23"
    },
    "4672": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "4673": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4674": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4675": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4676": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1251"
    },
    "4679": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4680": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4681": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4683": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4684": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4685": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4686": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4688": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4689": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4690": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "POP",
      "path": "23"
    },
    "4691": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "POP",
      "path": "23"
    },
    "4692": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "POP",
      "path": "23"
    },
    "4693": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "POP",
      "path": "23"
    },
    "4694": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4696": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4697": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4698": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4700": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "NOT",
      "path": "23"
    },
    "4701": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4703": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4704": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ADD",
      "path": "23"
    },
    "4705": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "AND",
      "path": "23"
    },
    "4706": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4707": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ADD",
      "path": "23"
    },
    "4708": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4709": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4711": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4712": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "POP",
      "path": "23"
    },
    "4713": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4714": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "ADD",
      "path": "23"
    },
    "4715": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4716": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1275"
    },
    "4719": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4720": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4721": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15EB"
    },
    "4724": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "jump": "i",
      "offset": [
        8314,
        8334
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4725": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8314,
        8334
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4726": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8308
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4727": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8309,
        8310
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4729": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4730": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4731": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4732": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "LT",
      "path": "23"
    },
    "4733": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1288"
    },
    "4736": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4737": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1288"
    },
    "4740": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15D5"
    },
    "4743": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "jump": "i",
      "offset": [
        8304,
        8311
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4744": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4751": {
      "op": "SHL"
    },
    "4752": {
      "op": "SUB"
    },
    "4753": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8334
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4754": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8334
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4755": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8334
      ],
      "op": "AND",
      "path": "23"
    },
    "4756": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4758": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4759": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4760": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "MUL",
      "path": "23"
    },
    "4761": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4762": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4763": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4764": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4765": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4766": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8304,
        8334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4767": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8376,
        8389
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 53,
      "value": "0x13"
    },
    "4769": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8376,
        8389
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4770": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8344,
        8399
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12AE"
    },
    "4773": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8344,
        8399
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4774": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8361,
        8365
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "4775": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8361,
        8365
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4776": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8376,
        8389
      ],
      "op": "AND",
      "path": "23"
    },
    "4777": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8392,
        8398
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4778": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8344,
        8352
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCBA"
    },
    "4781": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "jump": "i",
      "offset": [
        8344,
        8399
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4782": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8344,
        8399
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4783": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 54,
      "value": "0x13"
    },
    "4785": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4786": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4788": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4789": {
      "op": "PUSH4",
      "value": "0x791AC947"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4796": {
      "op": "SHL"
    },
    "4797": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4798": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4805": {
      "op": "SHL"
    },
    "4806": {
      "op": "SUB"
    },
    "4807": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4808": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4809": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "AND",
      "path": "23"
    },
    "4810": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4811": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8473
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x791AC947"
    },
    "4816": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8473
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4817": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12E7"
    },
    "4820": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4821": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8487,
        8493
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4822": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8487,
        8493
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4823": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4825": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8422
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4826": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8522,
        8526
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4827": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8522,
        8526
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4828": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8548,
        8552
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "4829": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8548,
        8552
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4830": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8567,
        8582
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "4831": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8567,
        8582
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4832": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4834": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "ADD",
      "path": "23"
    },
    "4835": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1608"
    },
    "4838": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "jump": "i",
      "offset": [
        8409,
        8592
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4839": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4840": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4842": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4844": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4845": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4846": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4847": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "SUB",
      "path": "23"
    },
    "4848": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4849": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4851": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP8",
      "path": "23"
    },
    "4852": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4853": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4854": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4855": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4856": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4857": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1301"
    },
    "4860": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4861": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4863": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4864": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4865": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4866": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "POP",
      "path": "23"
    },
    "4867": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "GAS",
      "path": "23"
    },
    "4868": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "CALL",
      "path": "23"
    },
    "4869": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4870": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4871": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4872": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1315"
    },
    "4875": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4876": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4877": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4879": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4880": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4881": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4882": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4884": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4885": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4886": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "POP",
      "path": "23"
    },
    "4887": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "POP",
      "path": "23"
    },
    "4888": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "POP",
      "path": "23"
    },
    "4889": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8409,
        8592
      ],
      "op": "POP",
      "path": "23"
    },
    "4890": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8211,
        8599
      ],
      "op": "POP",
      "path": "23"
    },
    "4891": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "offset": [
        8163,
        8599
      ],
      "op": "POP",
      "path": "23"
    },
    "4892": {
      "fn": "ChainEstateTokenV1.swapCHESForBNB",
      "jump": "o",
      "offset": [
        8163,
        8599
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4893": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10134,
        10455
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "SUB"
    },
    "4902": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4903": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "2"
    },
    "4904": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10240,
        10259
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4906": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4907": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4908": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4909": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4911": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4912": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4913": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4914": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4916": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4918": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4920": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10377
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 55,
      "value": "0x7"
    },
    "4922": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4923": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4924": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4925": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4926": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4927": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4928": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10360,
        10381
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4931": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10337,
        10356
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x134C"
    },
    "4934": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10351,
        10356
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4936": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10337,
        10356
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15BE"
    },
    "4939": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "jump": "i",
      "offset": [
        10337,
        10356
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4940": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10337,
        10356
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4941": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10336,
        10381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1356"
    },
    "4944": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10336,
        10381
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4945": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10336,
        10381
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4946": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10336,
        10381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "4949": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "jump": "i",
      "offset": [
        10336,
        10381
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4950": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10336,
        10381
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4951": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1360"
    },
    "4954": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10318,
        10333
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "4955": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10315
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4956": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159F"
    },
    "4959": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "jump": "i",
      "offset": [
        10310,
        10333
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4960": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4961": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x136A"
    },
    "4964": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10381
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4965": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10381
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4966": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "4969": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "jump": "i",
      "offset": [
        10310,
        10381
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4970": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10310,
        10381
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4971": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10309,
        10396
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1374"
    },
    "4974": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10309,
        10396
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4975": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10309,
        10396
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4976": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10309,
        10396
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x157D"
    },
    "4979": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "jump": "i",
      "offset": [
        10309,
        10396
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4980": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10309,
        10396
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4987": {
      "op": "SHL"
    },
    "4988": {
      "op": "SUB"
    },
    "4989": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4990": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "AND",
      "path": "23"
    },
    "4991": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4993": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4994": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4995": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4996": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10302
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "4998": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5000": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5001": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5003": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5004": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10306
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5005": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10285,
        10396
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5006": {
      "fn": "ChainEstateTokenV1._afterTokenTransfer",
      "offset": [
        10406,
        10448
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 56,
      "value": "0xE6A"
    },
    "5009": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        12504,
        12624
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5010": {
      "op": "JUMPDEST"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5015": {
      "op": "DUP1"
    },
    "5016": {
      "op": "DUP4"
    },
    "5017": {
      "op": "MSTORE"
    },
    "5018": {
      "op": "DUP4"
    },
    "5019": {
      "op": "MLOAD"
    },
    "5020": {
      "op": "DUP1"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "DUP6"
    },
    "5023": {
      "op": "ADD"
    },
    "5024": {
      "op": "MSTORE"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5027": {
      "op": "JUMPDEST"
    },
    "5028": {
      "op": "DUP2"
    },
    "5029": {
      "op": "DUP2"
    },
    "5030": {
      "op": "LT"
    },
    "5031": {
      "op": "ISZERO"
    },
    "5032": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5035": {
      "op": "JUMPI"
    },
    "5036": {
      "op": "DUP6"
    },
    "5037": {
      "op": "DUP2"
    },
    "5038": {
      "op": "ADD"
    },
    "5039": {
      "op": "DUP4"
    },
    "5040": {
      "op": "ADD"
    },
    "5041": {
      "op": "MLOAD"
    },
    "5042": {
      "op": "DUP6"
    },
    "5043": {
      "op": "DUP3"
    },
    "5044": {
      "op": "ADD"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "op": "MSTORE"
    },
    "5049": {
      "op": "DUP3"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "PUSH2",
      "value": "0x13A3"
    },
    "5054": {
      "op": "JUMP"
    },
    "5055": {
      "op": "JUMPDEST"
    },
    "5056": {
      "op": "DUP2"
    },
    "5057": {
      "op": "DUP2"
    },
    "5058": {
      "op": "GT"
    },
    "5059": {
      "op": "ISZERO"
    },
    "5060": {
      "op": "PUSH2",
      "value": "0x13D1"
    },
    "5063": {
      "op": "JUMPI"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5068": {
      "op": "DUP4"
    },
    "5069": {
      "op": "DUP8"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "MSTORE"
    },
    "5073": {
      "op": "JUMPDEST"
    },
    "5074": {
      "op": "POP"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5077": {
      "op": "ADD"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5080": {
      "op": "NOT"
    },
    "5081": {
      "op": "AND"
    },
    "5082": {
      "op": "SWAP3"
    },
    "5083": {
      "op": "SWAP1"
    },
    "5084": {
      "op": "SWAP3"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5088": {
      "op": "ADD"
    },
    "5089": {
      "op": "SWAP4"
    },
    "5090": {
      "op": "SWAP3"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "POP"
    },
    "5094": {
      "jump": "o",
      "op": "JUMP"
    },
    "5095": {
      "op": "JUMPDEST"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5102": {
      "op": "SHL"
    },
    "5103": {
      "op": "SUB"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "AND"
    },
    "5106": {
      "op": "DUP2"
    },
    "5107": {
      "op": "EQ"
    },
    "5108": {
      "op": "PUSH2",
      "value": "0x862"
    },
    "5111": {
      "op": "JUMPI"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5114": {
      "op": "DUP1"
    },
    "5115": {
      "op": "REVERT"
    },
    "5116": {
      "op": "JUMPDEST"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5119": {
      "op": "DUP1"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5122": {
      "op": "DUP4"
    },
    "5123": {
      "op": "DUP6"
    },
    "5124": {
      "op": "SUB"
    },
    "5125": {
      "op": "SLT"
    },
    "5126": {
      "op": "ISZERO"
    },
    "5127": {
      "op": "PUSH2",
      "value": "0x140F"
    },
    "5130": {
      "op": "JUMPI"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5133": {
      "op": "DUP1"
    },
    "5134": {
      "op": "REVERT"
    },
    "5135": {
      "op": "JUMPDEST"
    },
    "5136": {
      "op": "DUP3"
    },
    "5137": {
      "op": "CALLDATALOAD"
    },
    "5138": {
      "op": "PUSH2",
      "value": "0x141A"
    },
    "5141": {
      "op": "DUP2"
    },
    "5142": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5145": {
      "jump": "i",
      "op": "JUMP"
    },
    "5146": {
      "op": "JUMPDEST"
    },
    "5147": {
      "op": "SWAP5"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5150": {
      "op": "SWAP4"
    },
    "5151": {
      "op": "SWAP1"
    },
    "5152": {
      "op": "SWAP4"
    },
    "5153": {
      "op": "ADD"
    },
    "5154": {
      "op": "CALLDATALOAD"
    },
    "5155": {
      "op": "SWAP4"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "op": "POP"
    },
    "5159": {
      "jump": "o",
      "op": "JUMP"
    },
    "5160": {
      "op": "JUMPDEST"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5165": {
      "op": "DUP3"
    },
    "5166": {
      "op": "DUP5"
    },
    "5167": {
      "op": "SUB"
    },
    "5168": {
      "op": "SLT"
    },
    "5169": {
      "op": "ISZERO"
    },
    "5170": {
      "op": "PUSH2",
      "value": "0x143A"
    },
    "5173": {
      "op": "JUMPI"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5176": {
      "op": "DUP1"
    },
    "5177": {
      "op": "REVERT"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "DUP2"
    },
    "5180": {
      "op": "CALLDATALOAD"
    },
    "5181": {
      "op": "PUSH2",
      "value": "0x1445"
    },
    "5184": {
      "op": "DUP2"
    },
    "5185": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5188": {
      "jump": "i",
      "op": "JUMP"
    },
    "5189": {
      "op": "JUMPDEST"
    },
    "5190": {
      "op": "SWAP4"
    },
    "5191": {
      "op": "SWAP3"
    },
    "5192": {
      "op": "POP"
    },
    "5193": {
      "op": "POP"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "jump": "o",
      "op": "JUMP"
    },
    "5196": {
      "op": "JUMPDEST"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5199": {
      "op": "DUP1"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5204": {
      "op": "DUP5"
    },
    "5205": {
      "op": "DUP7"
    },
    "5206": {
      "op": "SUB"
    },
    "5207": {
      "op": "SLT"
    },
    "5208": {
      "op": "ISZERO"
    },
    "5209": {
      "op": "PUSH2",
      "value": "0x1461"
    },
    "5212": {
      "op": "JUMPI"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5215": {
      "op": "DUP1"
    },
    "5216": {
      "op": "REVERT"
    },
    "5217": {
      "op": "JUMPDEST"
    },
    "5218": {
      "op": "DUP4"
    },
    "5219": {
      "op": "CALLDATALOAD"
    },
    "5220": {
      "op": "PUSH2",
      "value": "0x146C"
    },
    "5223": {
      "op": "DUP2"
    },
    "5224": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5227": {
      "jump": "i",
      "op": "JUMP"
    },
    "5228": {
      "op": "JUMPDEST"
    },
    "5229": {
      "op": "SWAP3"
    },
    "5230": {
      "op": "POP"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5233": {
      "op": "DUP5"
    },
    "5234": {
      "op": "ADD"
    },
    "5235": {
      "op": "CALLDATALOAD"
    },
    "5236": {
      "op": "PUSH2",
      "value": "0x147C"
    },
    "5239": {
      "op": "DUP2"
    },
    "5240": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5243": {
      "jump": "i",
      "op": "JUMP"
    },
    "5244": {
      "op": "JUMPDEST"
    },
    "5245": {
      "op": "SWAP3"
    },
    "5246": {
      "op": "SWAP6"
    },
    "5247": {
      "op": "SWAP3"
    },
    "5248": {
      "op": "SWAP5"
    },
    "5249": {
      "op": "POP"
    },
    "5250": {
      "op": "POP"
    },
    "5251": {
      "op": "POP"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5254": {
      "op": "SWAP2"
    },
    "5255": {
      "op": "SWAP1"
    },
    "5256": {
      "op": "SWAP2"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "CALLDATALOAD"
    },
    "5259": {
      "op": "SWAP1"
    },
    "5260": {
      "jump": "o",
      "op": "JUMP"
    },
    "5261": {
      "op": "JUMPDEST"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5264": {
      "op": "DUP1"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5267": {
      "op": "DUP4"
    },
    "5268": {
      "op": "DUP6"
    },
    "5269": {
      "op": "SUB"
    },
    "5270": {
      "op": "SLT"
    },
    "5271": {
      "op": "ISZERO"
    },
    "5272": {
      "op": "PUSH2",
      "value": "0x14A0"
    },
    "5275": {
      "op": "JUMPI"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5278": {
      "op": "DUP1"
    },
    "5279": {
      "op": "REVERT"
    },
    "5280": {
      "op": "JUMPDEST"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "CALLDATALOAD"
    },
    "5283": {
      "op": "PUSH2",
      "value": "0x14AB"
    },
    "5286": {
      "op": "DUP2"
    },
    "5287": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5290": {
      "jump": "i",
      "op": "JUMP"
    },
    "5291": {
      "op": "JUMPDEST"
    },
    "5292": {
      "op": "SWAP2"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5296": {
      "op": "DUP4"
    },
    "5297": {
      "op": "ADD"
    },
    "5298": {
      "op": "CALLDATALOAD"
    },
    "5299": {
      "op": "PUSH2",
      "value": "0x14BB"
    },
    "5302": {
      "op": "DUP2"
    },
    "5303": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5306": {
      "jump": "i",
      "op": "JUMP"
    },
    "5307": {
      "op": "JUMPDEST"
    },
    "5308": {
      "op": "DUP1"
    },
    "5309": {
      "op": "SWAP2"
    },
    "5310": {
      "op": "POP"
    },
    "5311": {
      "op": "POP"
    },
    "5312": {
      "op": "SWAP3"
    },
    "5313": {
      "op": "POP"
    },
    "5314": {
      "op": "SWAP3"
    },
    "5315": {
      "op": "SWAP1"
    },
    "5316": {
      "op": "POP"
    },
    "5317": {
      "jump": "o",
      "op": "JUMP"
    },
    "5318": {
      "op": "JUMPDEST"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "DUP5"
    },
    "5325": {
      "op": "SUB"
    },
    "5326": {
      "op": "SLT"
    },
    "5327": {
      "op": "ISZERO"
    },
    "5328": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5331": {
      "op": "JUMPI"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5334": {
      "op": "DUP1"
    },
    "5335": {
      "op": "REVERT"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "POP"
    },
    "5338": {
      "op": "CALLDATALOAD"
    },
    "5339": {
      "op": "SWAP2"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "op": "POP"
    },
    "5342": {
      "jump": "o",
      "op": "JUMP"
    },
    "5343": {
      "op": "JUMPDEST"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "DUP2"
    },
    "5348": {
      "op": "SHR"
    },
    "5349": {
      "op": "SWAP1"
    },
    "5350": {
      "op": "DUP3"
    },
    "5351": {
      "op": "AND"
    },
    "5352": {
      "op": "DUP1"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x14F3"
    },
    "5356": {
      "op": "JUMPI"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5359": {
      "op": "DUP3"
    },
    "5360": {
      "op": "AND"
    },
    "5361": {
      "op": "SWAP2"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "op": "JUMPDEST"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5366": {
      "op": "DUP3"
    },
    "5367": {
      "op": "LT"
    },
    "5368": {
      "op": "DUP2"
    },
    "5369": {
      "op": "EQ"
    },
    "5370": {
      "op": "ISZERO"
    },
    "5371": {
      "op": "PUSH2",
      "value": "0x1514"
    },
    "5374": {
      "op": "JUMPI"
    },
    "5375": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5382": {
      "op": "SHL"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5385": {
      "op": "MSTORE"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5390": {
      "op": "MSTORE"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5395": {
      "op": "REVERT"
    },
    "5396": {
      "op": "JUMPDEST"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "op": "SWAP2"
    },
    "5399": {
      "op": "SWAP1"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "jump": "o",
      "op": "JUMP"
    },
    "5402": {
      "op": "JUMPDEST"
    },
    "5403": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5410": {
      "op": "SHL"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5413": {
      "op": "MSTORE"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5418": {
      "op": "MSTORE"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5423": {
      "op": "REVERT"
    },
    "5424": {
      "op": "JUMPDEST"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5427": {
      "op": "DUP3"
    },
    "5428": {
      "op": "NOT"
    },
    "5429": {
      "op": "DUP3"
    },
    "5430": {
      "op": "GT"
    },
    "5431": {
      "op": "ISZERO"
    },
    "5432": {
      "op": "PUSH2",
      "value": "0x1543"
    },
    "5435": {
      "op": "JUMPI"
    },
    "5436": {
      "op": "PUSH2",
      "value": "0x1543"
    },
    "5439": {
      "op": "PUSH2",
      "value": "0x151A"
    },
    "5442": {
      "jump": "i",
      "op": "JUMP"
    },
    "5443": {
      "op": "JUMPDEST"
    },
    "5444": {
      "op": "POP"
    },
    "5445": {
      "op": "ADD"
    },
    "5446": {
      "op": "SWAP1"
    },
    "5447": {
      "jump": "o",
      "op": "JUMP"
    },
    "5448": {
      "op": "JUMPDEST"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5451": {
      "op": "DUP1"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "MSTORE"
    },
    "5454": {
      "op": "DUP2"
    },
    "5455": {
      "op": "DUP2"
    },
    "5456": {
      "op": "ADD"
    },
    "5457": {
      "op": "MSTORE"
    },
    "5458": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5493": {
      "op": "DUP3"
    },
    "5494": {
      "op": "ADD"
    },
    "5495": {
      "op": "MSTORE"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5498": {
      "op": "ADD"
    },
    "5499": {
      "op": "SWAP1"
    },
    "5500": {
      "jump": "o",
      "op": "JUMP"
    },
    "5501": {
      "op": "JUMPDEST"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5504": {
      "op": "DUP3"
    },
    "5505": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "5508": {
      "op": "JUMPI"
    },
    "5509": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5516": {
      "op": "SHL"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5524": {
      "op": "MSTORE"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5529": {
      "op": "REVERT"
    },
    "5530": {
      "op": "JUMPDEST"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "op": "DIV"
    },
    "5533": {
      "op": "SWAP1"
    },
    "5534": {
      "jump": "o",
      "op": "JUMP"
    },
    "5535": {
      "op": "JUMPDEST"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5538": {
      "op": "DUP2"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "NOT"
    },
    "5542": {
      "op": "DIV"
    },
    "5543": {
      "op": "DUP4"
    },
    "5544": {
      "op": "GT"
    },
    "5545": {
      "op": "DUP3"
    },
    "5546": {
      "op": "ISZERO"
    },
    "5547": {
      "op": "ISZERO"
    },
    "5548": {
      "op": "AND"
    },
    "5549": {
      "op": "ISZERO"
    },
    "5550": {
      "op": "PUSH2",
      "value": "0x15B9"
    },
    "5553": {
      "op": "JUMPI"
    },
    "5554": {
      "op": "PUSH2",
      "value": "0x15B9"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0x151A"
    },
    "5560": {
      "jump": "i",
      "op": "JUMP"
    },
    "5561": {
      "op": "JUMPDEST"
    },
    "5562": {
      "op": "POP"
    },
    "5563": {
      "op": "MUL"
    },
    "5564": {
      "op": "SWAP1"
    },
    "5565": {
      "jump": "o",
      "op": "JUMP"
    },
    "5566": {
      "op": "JUMPDEST"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "DUP3"
    },
    "5571": {
      "op": "LT"
    },
    "5572": {
      "op": "ISZERO"
    },
    "5573": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5576": {
      "op": "JUMPI"
    },
    "5577": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5580": {
      "op": "PUSH2",
      "value": "0x151A"
    },
    "5583": {
      "jump": "i",
      "op": "JUMP"
    },
    "5584": {
      "op": "JUMPDEST"
    },
    "5585": {
      "op": "POP"
    },
    "5586": {
      "op": "SUB"
    },
    "5587": {
      "op": "SWAP1"
    },
    "5588": {
      "jump": "o",
      "op": "JUMP"
    },
    "5589": {
      "op": "JUMPDEST"
    },
    "5590": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5597": {
      "op": "SHL"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5600": {
      "op": "MSTORE"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5605": {
      "op": "MSTORE"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5610": {
      "op": "REVERT"
    },
    "5611": {
      "op": "JUMPDEST"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5616": {
      "op": "DUP3"
    },
    "5617": {
      "op": "DUP5"
    },
    "5618": {
      "op": "SUB"
    },
    "5619": {
      "op": "SLT"
    },
    "5620": {
      "op": "ISZERO"
    },
    "5621": {
      "op": "PUSH2",
      "value": "0x15FD"
    },
    "5624": {
      "op": "JUMPI"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5627": {
      "op": "DUP1"
    },
    "5628": {
      "op": "REVERT"
    },
    "5629": {
      "op": "JUMPDEST"
    },
    "5630": {
      "op": "DUP2"
    },
    "5631": {
      "op": "MLOAD"
    },
    "5632": {
      "op": "PUSH2",
      "value": "0x1445"
    },
    "5635": {
      "op": "DUP2"
    },
    "5636": {
      "op": "PUSH2",
      "value": "0x13E7"
    },
    "5639": {
      "jump": "i",
      "op": "JUMP"
    },
    "5640": {
      "op": "JUMPDEST"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5645": {
      "op": "DUP3"
    },
    "5646": {
      "op": "ADD"
    },
    "5647": {
      "op": "DUP8"
    },
    "5648": {
      "op": "DUP4"
    },
    "5649": {
      "op": "MSTORE"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5652": {
      "op": "DUP8"
    },
    "5653": {
      "op": "DUP2"
    },
    "5654": {
      "op": "DUP6"
    },
    "5655": {
      "op": "ADD"
    },
    "5656": {
      "op": "MSTORE"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5661": {
      "op": "DUP6"
    },
    "5662": {
      "op": "ADD"
    },
    "5663": {
      "op": "MSTORE"
    },
    "5664": {
      "op": "DUP2"
    },
    "5665": {
      "op": "DUP8"
    },
    "5666": {
      "op": "MLOAD"
    },
    "5667": {
      "op": "DUP1"
    },
    "5668": {
      "op": "DUP5"
    },
    "5669": {
      "op": "MSTORE"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5672": {
      "op": "DUP7"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "SWAP2"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "DUP10"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "op": "SWAP4"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5683": {
      "op": "JUMPDEST"
    },
    "5684": {
      "op": "DUP2"
    },
    "5685": {
      "op": "DUP2"
    },
    "5686": {
      "op": "LT"
    },
    "5687": {
      "op": "ISZERO"
    },
    "5688": {
      "op": "PUSH2",
      "value": "0x1658"
    },
    "5691": {
      "op": "JUMPI"
    },
    "5692": {
      "op": "DUP5"
    },
    "5693": {
      "op": "MLOAD"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5700": {
      "op": "SHL"
    },
    "5701": {
      "op": "SUB"
    },
    "5702": {
      "op": "AND"
    },
    "5703": {
      "op": "DUP4"
    },
    "5704": {
      "op": "MSTORE"
    },
    "5705": {
      "op": "SWAP4"
    },
    "5706": {
      "op": "DUP4"
    },
    "5707": {
      "op": "ADD"
    },
    "5708": {
      "op": "SWAP4"
    },
    "5709": {
      "op": "SWAP2"
    },
    "5710": {
      "op": "DUP4"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "op": "SWAP2"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5715": {
      "op": "ADD"
    },
    "5716": {
      "op": "PUSH2",
      "value": "0x1633"
    },
    "5719": {
      "op": "JUMP"
    },
    "5720": {
      "op": "JUMPDEST"
    },
    "5721": {
      "op": "POP"
    },
    "5722": {
      "op": "POP"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "op": "SUB"
    },
    "5731": {
      "op": "SWAP7"
    },
    "5732": {
      "op": "SWAP1"
    },
    "5733": {
      "op": "SWAP7"
    },
    "5734": {
      "op": "AND"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5737": {
      "op": "DUP6"
    },
    "5738": {
      "op": "ADD"
    },
    "5739": {
      "op": "MSTORE"
    },
    "5740": {
      "op": "POP"
    },
    "5741": {
      "op": "POP"
    },
    "5742": {
      "op": "POP"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5745": {
      "op": "ADD"
    },
    "5746": {
      "op": "MSTORE"
    },
    "5747": {
      "op": "SWAP4"
    },
    "5748": {
      "op": "SWAP3"
    },
    "5749": {
      "op": "POP"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "POP"
    },
    "5752": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6fff9447dcf8f18c79044353a690c92b93cb3bd0",
  "source": "// SPDX-License-Identifier: MIT\n \npragma solidity >=0.8.0 <0.9.0;\n \nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/Uniswap.sol\";\n\n/**\n * @title Chain Estate DAO Token (V1)\n * @dev Main contract for Chain Estate DAO\n * TODO - Limit how many tokens users can purchase from PancakeSwap\n * TODO - Will possibly create the BNB to CHES token PankcakeSwap pair in the constructor.\n */\ncontract ChainEstateTokenV1 is ERC20, Ownable {\n\n    // Mapping to exclude some contracts from fees. Transfers are excluded from fees if address in this mapping is recipient or sender.\n    mapping (address => bool) public excludedFromFees;\n\n    // Mapping to determine the timestamp of each address' investment. Earlier average investment = better air drop rewards.\n    mapping (address => uint256) public airDropInvestTime;\n\n    // Address of the contract responsible for the air dropping mechanism.\n    address public airDropContractAddress;\n\n    // Address of the contract for burning CHES tokens.\n    address public burnWalletAddress;\n\n    // Real estate wallet address used to collect funds to purchase real estate.\n    address payable public realEstateWalletAddress;\n\n    // Liquidity wallet address used to hold the 30% of CHES tokens for the liquidity pool.\n    // After these coins are moved to the DEX, this address will no longer be used.\n    address public liquidityWalletAddress;\n\n    // Marketing wallet address used for funding marketing.\n    address payable public marketingWalletAddress;\n\n    // Developer wallet address used for funding the team.\n    address payable public developerWalletAddress;\n\n    // The PancakeSwap router address for swapping CHES tokens for WBNB.\n    address public uniswapRouterAddress;\n\n    // The initial block timestamp of the token contract.\n    uint256 public initialTimeStamp;\n\n    // Real estate transaction fee - deployed at 3%.\n    uint256 public realEstateTransactionFeePercent = 3;\n\n    // Developer team transaction fee - deployed at 1%.\n    uint256 public developerFeePercent = 1;\n\n    // Marketing transaction fee - deployed at 1%.\n    uint256 public marketingFeePercent = 1;\n\n    // PancakeSwap router interface.\n    IUniswapV2Router02 private uniswapRouter;\n\n    // Address of the WBNB to CHES token pair on PancakeSwap.\n    address public uniswapPair;\n\n    // Determines how many CHES tokens this contract needs before it swaps for WBNB to pay fee wallets.\n    uint256 public contractCHESDivisor = 1000;\n\n    // Initial token distribution:\n    // 35% - Air drop contract\n    // 30% - Liquidity pool (6 month lockup period)\n    // 20% - Burn\n    // 10% - Developer coins (6 month lockup period)\n    // 5% - Marketing\n    constructor(\n        uint256 initialSupply, \n        address _airDropContractAddress, \n        address _burnWalletAddress,\n        address _liquidityWalletAddress,\n        address payable _realEstateWalletAddress,\n        address payable _marketingWalletAddress,\n        address payable _developerWalletAddress,\n        address _uniswapRouterAddress) ERC20(\"ChainEstateToken\", \"CHES\") {\n            initialTimeStamp = block.timestamp;\n            airDropContractAddress = _airDropContractAddress;\n            realEstateWalletAddress = _realEstateWalletAddress;\n            burnWalletAddress = _burnWalletAddress;\n            liquidityWalletAddress = _liquidityWalletAddress;\n            marketingWalletAddress = _marketingWalletAddress;\n            developerWalletAddress = _developerWalletAddress;\n            uniswapRouterAddress = _uniswapRouterAddress;\n\n            excludedFromFees[realEstateWalletAddress] = true;\n            excludedFromFees[developerWalletAddress] = true;\n            excludedFromFees[marketingWalletAddress] = true;\n            excludedFromFees[liquidityWalletAddress] = true;\n            excludedFromFees[airDropContractAddress] = true;    // No transaction fees for claiming air drop rewards\n\n            _mint(airDropContractAddress, (initialSupply) * 35 / 100);\n            _mint(liquidityWalletAddress, (initialSupply) * 3 / 10);\n            _mint(burnWalletAddress, initialSupply / 5);\n            _mint(marketingWalletAddress, initialSupply * 5 / 100);\n            _mint(developerWalletAddress, initialSupply / 10);\n\n            IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(uniswapRouterAddress);\n            uniswapRouter = _uniswapV2Router;\n            _approve(address(this), address(uniswapRouter), initialSupply);\n            uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n            IERC20(uniswapPair).approve(address(uniswapRouter), type(uint256).max);\n    }\n\n    /**\n     * @dev Returns the contract address\n     * @return contract address\n     */\n    function getContractAddress() public view returns (address){\n        return address(this);\n    }\n\n    /**\n    * @dev Adds a user to be excluded from fees.\n    * @param user address of the user to be excluded from fees.\n     */\n    function excludeUserFromFees(address user) public onlyOwner {\n        excludedFromFees[user] = true;\n    }\n\n    /**\n    * @dev Gets the current timestamp, used for testing + verification\n    * @return the the timestamp of the current block\n     */\n    function getCurrentTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    /**\n    * @dev Removes a user from the fee exclusion.\n    * @param user address of the user than will now have to pay transaction fees.\n     */\n    function includeUsersInFees(address user) public onlyOwner {\n        excludedFromFees[user] = false;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transfer function to include transaction fees.\n     * @param recipient the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        // Stops investors from owning more than 2% of the total supply from purchasing CHES from PancakeSwap.\n        if (_msgSender() == uniswapPair && !excludedFromFees[_msgSender()] && !excludedFromFees[recipient]) {\n            require((balanceOf(recipient) + amount) < (totalSupply() / 166), \"You can't have more than 2% of the total CHES supply after a PancakeSwap swap.\");\n        }\n\n        // If the sender or recipient is excluded from fees, perform the default transfer.\n        if (excludedFromFees[_msgSender()] || excludedFromFees[recipient]) {\n            _transfer(_msgSender(), recipient, amount);\n            return true;\n        }\n\n        // Real estate transaction fee.\n        uint256 realEstateFee = (amount * realEstateTransactionFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address.\n        uint256 totalFee = realEstateFee + marketingFee + developerFee;\n \n        // Sends the transaction fees to the contract address\n        _transfer(_msgSender(), address(this), totalFee);\n\n        uint256 contractCHESBalance = balanceOf(address(this));\n\n        if (_msgSender() != uniswapPair && contractCHESBalance > 0) {\n            if (contractCHESBalance > 0) {\n                if (contractCHESBalance > balanceOf(uniswapPair) / contractCHESDivisor) {\n                    swapCHESForBNB(contractCHESBalance);\n                }\n                \n            }\n            uint256 contractBNBBalance = address(this).balance;\n            if (contractBNBBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - totalFee;\n        _transfer(_msgSender(), recipient, valueAfterFees);\n        return true;\n    }\n\n    /**\n     * @dev Swaps CHES tokens from transaction fees to BNB.\n     * @param amount the amount of CHES tokens to swap\n     */\n    function swapCHESForBNB(uint256 amount) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapRouter.WETH();\n        _approve(address(this), address(uniswapRouter), amount);\n        uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            amount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @dev Sends BNB to transaction fee wallets after CHES swaps.\n     * @param amount the amount to be transfered\n     */\n    function sendFeesToWallets(uint256 amount) private {\n        uint256 totalFee = realEstateTransactionFeePercent + marketingFeePercent + developerFeePercent;\n        realEstateWalletAddress.transfer((amount * realEstateTransactionFeePercent) / totalFee);\n        marketingWalletAddress.transfer((amount * marketingFeePercent) / totalFee);\n        developerWalletAddress.transfer((amount * developerFeePercent) / totalFee);\n    }\n\n    /**\n     * @dev Sends BNB to transaction fee wallets manually as opposed to happening automatically after a certain level of volume\n     */\n    function disperseFeesManually() public onlyOwner {\n        uint256 contractETHBalance = address(this).balance;\n        sendFeesToWallets(contractETHBalance);\n    }\n\n    receive() external payable {}\n\n    /**\n     * @dev Sets the value that determines how many CHES tokens need to be in the contract before it's swapped for BNB.\n     * @param newDivisor the new divisor value to determine the swap threshold\n     */\n    function setContractCHESDivisor(uint256 newDivisor) public onlyOwner {\n        contractCHESDivisor = newDivisor;\n    }\n\n    /**\n     * @dev After a token transfer, update the recipient address's air drop invest time since they have a later investment now.\n     * @param from the sender's address\n     * @param to the recipient's address\n     * @param value the amount that was transferred\n     */\n    function _afterTokenTransfer(address from, address to, uint256 value) internal virtual override {\n        uint256 userBalance = balanceOf(to);\n        airDropInvestTime[to] = (value * block.timestamp + (userBalance - value) * airDropInvestTime[to]) / userBalance;\n        super._afterTokenTransfer(from, to, value);\n    }\n}",
  "sourceMap": "462:9995:23:-:0;;;1996:1;1947:50;;2097:1;2060:38;;2193:1;2156:38;;2521:4;2484:41;;2743:1977;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:2;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;3161:15:23::1;3142:16;:34:::0;3190:22:::1;:48:::0;;-1:-1:-1;;;;;;3190:48:23;;::::1;-1:-1:-1::0;;;;;3190:48:23;;::::1;::::0;;;::::1;::::0;;3252:23:::1;:50:::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;3316:17:::1;:38:::0;;;::::1;::::0;;::::1;;::::0;;3368:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3430:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3492:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;3554:20:::1;:44:::0;;;;::::1;::::0;;::::1;;::::0;;;-1:-1:-1;3613:41:23;;;-1:-1:-1;3613:41:23::1;::::0;;;;;:48;;-1:-1:-1;;3613:48:23;;::::1;-1:-1:-1::0;3613:48:23;;::::1;::::0;;;3692:22;;;::::1;3675:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;3753:22;;;::::1;3736:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;3814:22;;;::::1;3797:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;3875:22;;;::::1;3858:40:::0;;;;:47;;;;::::1;;::::0;;;3982:22;;3976:57:::1;::::0;3982:22:::1;4029:3;4006:20;4007:13:::0;4024:2:::1;4006:20;:::i;:::-;:26;;;;:::i;:::-;3976:5;:57::i;:::-;4053:22;::::0;4047:55:::1;::::0;-1:-1:-1;;;;;4053:22:23::1;4099:2;4077:19;4078:13:::0;4095:1:::1;4077:19;:::i;4047:55::-;4122:17;::::0;4116:43:::1;::::0;-1:-1:-1;;;;;4122:17:23::1;4141;4157:1;4141:13:::0;:17:::1;:::i;4116:43::-;4179:22;::::0;4173:54:::1;::::0;-1:-1:-1;;;;;4179:22:23::1;4223:3;4203:17;:13:::0;4219:1:::1;4203:17;:::i;4173:54::-;4247:22;::::0;4241:49:::1;::::0;-1:-1:-1;;;;;4247:22:23::1;4271:18;4287:2;4271:13:::0;:18:::1;:::i;4241:49::-;4362:20;::::0;4397:13:::1;:32:::0;;-1:-1:-1;;;;;;4397:32:23::1;-1:-1:-1::0;;;;;4362:20:23;;::::1;4397:32:::0;;::::1;::::0;;4443:62:::1;4460:4;4362:20:::0;4491:13;4443:8:::1;:62::i;:::-;4551:16;-1:-1:-1::0;;;;;4551:24:23::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4533:56:23::1;;4598:4;4605:16;-1:-1:-1::0;;;;;4605:21:23::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4533:96;::::0;-1:-1:-1;;;;;;4533:96:23::1;::::0;;;;;;-1:-1:-1;;;;;2313:15:43;;;4533:96:23::1;::::0;::::1;2295:34:43::0;2365:15;;2345:18;;;2338:43;2230:18;;4533:96:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4519:11;:110:::0;;-1:-1:-1;;;;;;4519:110:23::1;-1:-1:-1::0;;;;;4519:110:23;;::::1;::::0;;::::1;::::0;;;4679:13:::1;::::0;4643:70:::1;::::0;-1:-1:-1;;;4643:70:23;;4679:13;::::1;4643:70;::::0;::::1;2566:51:43::0;-1:-1:-1;;2633:18:43;;;2626:34;4519:110:23;4643:27:::1;::::0;2539:18:43;;4643:70:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3128:1592;2743:1977:::0;;;;;;;;462:9995;;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8415:389:2:-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;3155:2:43;8490:65:2;;;3137:21:43;3194:2;3174:18;;;3167:30;3233:33;3213:18;;;3206:61;3284:18;;8490:65:2;;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;3592:25:43;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;3580:2:43;3565:18;8701:37:2;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;:48::i;:::-;8415:389;;:::o;10123:370::-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;3830:2:43;10246:68:2;;;3812:21:43;3869:2;3849:18;;;3842:30;3908:34;3888:18;;;3881:62;-1:-1:-1;;;3959:18:43;;;3952:34;4003:19;;10246:68:2;3628:400:43;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;4235:2:43;10324:68:2;;;4217:21:43;4274:2;4254:18;;;4247:30;4313:34;4293:18;;;4286:62;-1:-1:-1;;;4364:18:43;;;4357:32;4406:19;;10324:68:2;4033:398:43;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;3592:25:43;;;10454:32:2;;3565:18:43;10454:32:2;;;;;;;10123:370;;;:::o;11795:121::-;;;;:::o;10134:321:23:-;-1:-1:-1;;;;;3508:18:2;;10240:19:23;3508:18:2;;;;;;;;;;;;10360:17:23;:21;;;;;;;3508:18:2;;10337:19:23;10351:5;3508:18:2;10337:19:23;:::i;:::-;10336:45;;;;:::i;:::-;10310:23;10318:15;10310:5;:23;:::i;:::-;:71;;;;:::i;:::-;10309:87;;;;:::i;:::-;10285:17;:21;10303:2;-1:-1:-1;;;;;10285:21:23;-1:-1:-1;;;;;10285:21:23;;;;;;;;;;;;:111;;;;10406:42;10432:4;10438:2;10442:5;10406:25;;;;;:42;;:::i;:::-;10230:225;10134:321;;;:::o;462:9995::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;462:9995:23;;;-1:-1:-1;462:9995:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:43;-1:-1:-1;;;;;89:31:43;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1145::-;307:6;315;323;331;339;347;355;363;416:3;404:9;395:7;391:23;387:33;384:53;;;433:1;430;423:12;384:53;462:9;456:16;446:26;;515:2;504:9;500:18;494:25;528:31;553:5;528:31;:::i;:::-;628:2;613:18;;607:25;578:5;;-1:-1:-1;641:33:43;607:25;641:33;:::i;:::-;745:2;730:18;;724:25;693:7;;-1:-1:-1;758:33:43;724:25;758:33;:::i;:::-;862:3;847:19;;841:26;810:7;;-1:-1:-1;876:33:43;841:26;876:33;:::i;:::-;980:3;965:19;;959:26;928:7;;-1:-1:-1;994:33:43;959:26;994:33;:::i;:::-;1098:3;1083:19;;1077:26;1046:7;;-1:-1:-1;1112:33:43;1077:26;1112:33;:::i;:::-;1216:3;1201:19;;1195:26;1164:7;;-1:-1:-1;1230:33:43;1195:26;1230:33;:::i;:::-;1282:7;1272:17;;;150:1145;;;;;;;;;;;:::o;1300:127::-;1361:10;1356:3;1352:20;1349:1;1342:31;1392:4;1389:1;1382:15;1416:4;1413:1;1406:15;1432:168;1472:7;1538:1;1534;1530:6;1526:14;1523:1;1520:21;1515:1;1508:9;1501:17;1497:45;1494:71;;;1545:18;;:::i;:::-;-1:-1:-1;1585:9:43;;1432:168::o;1605:217::-;1645:1;1671;1661:132;;1715:10;1710:3;1706:20;1703:1;1696:31;1750:4;1747:1;1740:15;1778:4;1775:1;1768:15;1661:132;-1:-1:-1;1807:9:43;;1605:217::o;1827:251::-;1897:6;1950:2;1938:9;1929:7;1925:23;1921:32;1918:52;;;1966:1;1963;1956:12;1918:52;1998:9;1992:16;2017:31;2042:5;2017:31;:::i;:::-;2067:5;1827:251;-1:-1:-1;;;1827:251:43:o;2671:277::-;2738:6;2791:2;2779:9;2770:7;2766:23;2762:32;2759:52;;;2807:1;2804;2797:12;2759:52;2839:9;2833:16;2892:5;2885:13;2878:21;2871:5;2868:32;2858:60;;2914:1;2911;2904:12;3313:128;3353:3;3384:1;3380:6;3377:1;3374:13;3371:39;;;3390:18;;:::i;:::-;-1:-1:-1;3426:9:43;;3313:128::o;4436:125::-;4476:4;4504:1;4501;4498:8;4495:34;;;4509:18;;:::i;:::-;-1:-1:-1;4546:9:43;;4436:125::o;4566:380::-;4645:1;4641:12;;;;4688;;;4709:61;;4763:4;4755:6;4751:17;4741:27;;4709:61;4816:2;4808:6;4805:14;4785:18;4782:38;4779:161;;;4862:10;4857:3;4853:20;4850:1;4843:31;4897:4;4894:1;4887:15;4925:4;4922:1;4915:15;4779:161;;4566:380;;;:::o;:::-;462:9995:23;;;;;;",
  "sourcePath": "contracts/ChainEstateTokenV1.sol",
  "type": "contract"
}