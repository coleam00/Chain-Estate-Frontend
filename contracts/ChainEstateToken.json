{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_airDropContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidityWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_realEstateWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_marketingWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_developerWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouterAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "developerTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "marketingTransactionFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "realEstateTransactionFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airDropContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "airDropInvestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractCHESDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disperseFeesManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "excludeUserFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "includeUsersInFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realEstateTransactionFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realEstateWalletAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "airDropInvestTimeVal",
          "type": "uint256"
        }
      ],
      "name": "setAirDropInvestTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDivisor",
          "type": "uint256"
        }
      ],
      "name": "setContractCHESDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenClaimAddress",
          "type": "address"
        }
      ],
      "name": "setTokenClaimContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useAmount",
          "type": "bool"
        }
      ],
      "name": "swapCHESForBNBManually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenClaimContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "blacklisted",
          "type": "bool"
        }
      ],
      "name": "updateBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDeveloperTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateDeveloperTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMarketingTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateMarketingTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isMinter",
          "type": "bool"
        }
      ],
      "name": "updateMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRealEstateTransactionFee",
          "type": "uint256"
        }
      ],
      "name": "updateRealEstateTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "11": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "21": "contracts/ChainEstateToken.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "42": "interfaces/Uniswap.sol"
  },
  "ast": {
    "absolutePath": "contracts/ChainEstateToken.sol",
    "exportedSymbols": {
      "ChainEstateToken": [
        3594
      ],
      "Context": [
        11654
      ],
      "ERC20": [
        11024
      ],
      "IERC20": [
        12212
      ],
      "IERC20Metadata": [
        12237
      ],
      "IUniswapV2Factory": [
        11036
      ],
      "IUniswapV2Pair": [
        11040
      ],
      "IUniswapV2Router01": [
        11097
      ],
      "IUniswapV2Router02": [
        11157
      ],
      "Ownable": [
        9125
      ]
    },
    "id": 3595,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2470,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:31:21"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2471,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 11025,
        "src": "68:55:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2472,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 9126,
        "src": "124:52:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/Uniswap.sol",
        "file": "../interfaces/Uniswap.sol",
        "id": 2473,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 11158,
        "src": "177:35:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2475,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11024,
              "src": "486:5:21"
            },
            "id": 2476,
            "nodeType": "InheritanceSpecifier",
            "src": "486:5:21"
          },
          {
            "baseName": {
              "id": 2477,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9125,
              "src": "493:7:21"
            },
            "id": 2478,
            "nodeType": "InheritanceSpecifier",
            "src": "493:7:21"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2474,
          "nodeType": "StructuredDocumentation",
          "src": "214:242:21",
          "text": " @title Chain Estate DAO Token\n @dev Main contract for Chain Estate DAO\n TODO - Limit how many tokens users can purchase from PancakeSwap\n TODO - Will possibly create the BNB to CHES token PankcakeSwap pair in the constructor."
        },
        "fullyImplemented": true,
        "id": 3594,
        "linearizedBaseContracts": [
          3594,
          9125,
          11024,
          12237,
          12212,
          11654
        ],
        "name": "ChainEstateToken",
        "nameLocation": "466:16:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dbe66ca0",
            "id": 2482,
            "mutability": "mutable",
            "name": "excludedFromFees",
            "nameLocation": "677:16:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "644:49:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2481,
              "keyType": {
                "id": 2479,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "644:25:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2480,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "664:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1497b01b",
            "id": 2486,
            "mutability": "mutable",
            "name": "airDropInvestTime",
            "nameLocation": "861:17:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "825:53:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2485,
              "keyType": {
                "id": 2483,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "834:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "825:28:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2484,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "845:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9f92be4",
            "id": 2490,
            "mutability": "mutable",
            "name": "blacklist",
            "nameLocation": "1029:9:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "996:42:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2489,
              "keyType": {
                "id": 2487,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1005:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "996:25:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2488,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1016:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f46eccc4",
            "id": 2494,
            "mutability": "mutable",
            "name": "minters",
            "nameLocation": "1165:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1132:40:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2493,
              "keyType": {
                "id": 2491,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1141:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1132:25:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2492,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1152:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1ba7f00f",
            "id": 2496,
            "mutability": "mutable",
            "name": "airDropContractAddress",
            "nameLocation": "1269:22:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1254:37:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2495,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1254:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b3c1da1",
            "id": 2498,
            "mutability": "mutable",
            "name": "burnWalletAddress",
            "nameLocation": "1369:17:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1354:32:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2497,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1354:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "502f91ec",
            "id": 2500,
            "mutability": "mutable",
            "name": "realEstateWalletAddress",
            "nameLocation": "1497:23:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1474:46:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1474:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8eb83f25",
            "id": 2502,
            "mutability": "mutable",
            "name": "liquidityWalletAddress",
            "nameLocation": "1718:22:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1703:37:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2501,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1703:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d158272d",
            "id": 2504,
            "mutability": "mutable",
            "name": "marketingWalletAddress",
            "nameLocation": "1830:22:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1807:45:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2503,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1807:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61eb048a",
            "id": 2506,
            "mutability": "mutable",
            "name": "developerWalletAddress",
            "nameLocation": "1941:22:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "1918:45:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2505,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1918:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20ca3c7f",
            "id": 2508,
            "mutability": "mutable",
            "name": "uniswapRouterAddress",
            "nameLocation": "2058:20:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2043:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2507,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2043:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2fb47be4",
            "id": 2510,
            "mutability": "mutable",
            "name": "initialTimeStamp",
            "nameLocation": "2158:16:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2143:31:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2509,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2143:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e2b0e47",
            "id": 2513,
            "mutability": "mutable",
            "name": "realEstateTransactionFeePercent",
            "nameLocation": "2249:31:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2234:50:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2234:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 2512,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2283:1:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fcd1285",
            "id": 2516,
            "mutability": "mutable",
            "name": "developerFeePercent",
            "nameLocation": "2362:19:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2347:38:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2347:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2515,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2384:1:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6fa55c",
            "id": 2519,
            "mutability": "mutable",
            "name": "marketingFeePercent",
            "nameLocation": "2458:19:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2443:38:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2517,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2443:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2518,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2480:1:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2522,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "2552:13:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2525:40:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 2521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2520,
                "name": "IUniswapV2Router02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11157,
                "src": "2525:18:21"
              },
              "referencedDeclaration": 11157,
              "src": "2525:18:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c816841b",
            "id": 2524,
            "mutability": "mutable",
            "name": "uniswapPair",
            "nameLocation": "2649:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2634:26:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2523,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2634:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ac65c870",
            "id": 2526,
            "mutability": "mutable",
            "name": "tokenClaimContractAddress",
            "nameLocation": "2726:25:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2711:40:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2525,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2711:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f94d733d",
            "id": 2529,
            "mutability": "mutable",
            "name": "contractCHESDivisor",
            "nameLocation": "2877:19:21",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "2862:41:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2527,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2862:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 2528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2899:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2533,
            "name": "realEstateTransactionFeeUpdated",
            "nameLocation": "2976:31:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2531,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "3024:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "3008:36:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3007:38:21"
            },
            "src": "2970:76:21"
          },
          {
            "anonymous": false,
            "id": 2537,
            "name": "marketingTransactionFeeUpdated",
            "nameLocation": "3057:30:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2535,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "3104:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2537,
                  "src": "3088:36:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3088:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3087:38:21"
            },
            "src": "3051:75:21"
          },
          {
            "anonymous": false,
            "id": 2541,
            "name": "developerTransactionFeeUpdated",
            "nameLocation": "3137:30:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2539,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transactionFeeAmount",
                  "nameLocation": "3184:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2541,
                  "src": "3168:36:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3168:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3167:38:21"
            },
            "src": "3131:75:21"
          },
          {
            "body": {
              "id": 2738,
              "nodeType": "Block",
              "src": "3810:1851:21",
              "statements": [
                {
                  "expression": {
                    "id": 2566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2564,
                      "name": "initialTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2510,
                      "src": "3824:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31363435353636343230",
                      "id": 2565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3843:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1645566420_by_1",
                        "typeString": "int_const 1645566420"
                      },
                      "value": "1645566420"
                    },
                    "src": "3824:29:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2567,
                  "nodeType": "ExpressionStatement",
                  "src": "3824:29:21"
                },
                {
                  "expression": {
                    "id": 2570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2568,
                      "name": "airDropContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "3920:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2569,
                      "name": "_airDropContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2545,
                      "src": "3945:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3920:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2571,
                  "nodeType": "ExpressionStatement",
                  "src": "3920:48:21"
                },
                {
                  "expression": {
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2572,
                      "name": "realEstateWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2500,
                      "src": "3982:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2573,
                      "name": "_realEstateWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2551,
                      "src": "4008:24:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3982:50:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2575,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:50:21"
                },
                {
                  "expression": {
                    "id": 2578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2576,
                      "name": "burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "4046:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2577,
                      "name": "_burnWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "4066:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4046:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2579,
                  "nodeType": "ExpressionStatement",
                  "src": "4046:38:21"
                },
                {
                  "expression": {
                    "id": 2582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2580,
                      "name": "liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2502,
                      "src": "4098:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2581,
                      "name": "_liquidityWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2549,
                      "src": "4123:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4098:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2583,
                  "nodeType": "ExpressionStatement",
                  "src": "4098:48:21"
                },
                {
                  "expression": {
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2584,
                      "name": "marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2504,
                      "src": "4160:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2585,
                      "name": "_marketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2553,
                      "src": "4185:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4160:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2587,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:48:21"
                },
                {
                  "expression": {
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2588,
                      "name": "developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2506,
                      "src": "4222:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2589,
                      "name": "_developerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2555,
                      "src": "4247:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4222:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2591,
                  "nodeType": "ExpressionStatement",
                  "src": "4222:48:21"
                },
                {
                  "expression": {
                    "id": 2594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2592,
                      "name": "uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2508,
                      "src": "4284:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2593,
                      "name": "_uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2557,
                      "src": "4307:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4284:44:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2595,
                  "nodeType": "ExpressionStatement",
                  "src": "4284:44:21"
                },
                {
                  "expression": {
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2596,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "4343:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2598,
                      "indexExpression": {
                        "id": 2597,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "4360:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4343:41:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4387:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4343:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "4343:48:21"
                },
                {
                  "expression": {
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2602,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "4405:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2604,
                      "indexExpression": {
                        "id": 2603,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "4422:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4405:40:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4448:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4405:47:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2607,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:47:21"
                },
                {
                  "expression": {
                    "id": 2612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2608,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "4466:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2610,
                      "indexExpression": {
                        "id": 2609,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "4483:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4466:40:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4509:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4466:47:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2613,
                  "nodeType": "ExpressionStatement",
                  "src": "4466:47:21"
                },
                {
                  "expression": {
                    "id": 2618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2614,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "4527:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2616,
                      "indexExpression": {
                        "id": 2615,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2502,
                        "src": "4544:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4527:40:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4570:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4527:47:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2619,
                  "nodeType": "ExpressionStatement",
                  "src": "4527:47:21"
                },
                {
                  "expression": {
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2620,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "4588:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2622,
                      "indexExpression": {
                        "id": 2621,
                        "name": "airDropContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2496,
                        "src": "4605:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4588:40:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4631:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4588:47:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2625,
                  "nodeType": "ExpressionStatement",
                  "src": "4588:47:21"
                },
                {
                  "assignments": [
                    2627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2627,
                      "mutability": "mutable",
                      "name": "firstAirdropClaimAmount",
                      "nameLocation": "4801:23:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2738,
                      "src": "4793:31:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4793:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2633,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_23366791000000000000000000_by_1",
                      "typeString": "int_const 23366791000000000000000000"
                    },
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3233333636373931",
                      "id": 2628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4827:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_23366791_by_1",
                        "typeString": "int_const 23366791"
                      },
                      "value": "23366791"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 2631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4838:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 2630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4844:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "4838:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "4827:19:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_23366791000000000000000000_by_1",
                      "typeString": "int_const 23366791000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4793:53:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2635,
                        "name": "airDropContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2496,
                        "src": "4867:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "id": 2636,
                                      "name": "initialSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2543,
                                      "src": "4893:13:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2637,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4892:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3335",
                                  "id": 2638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4910:2:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_35_by_1",
                                    "typeString": "int_const 35"
                                  },
                                  "value": "35"
                                },
                                "src": "4892:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4915:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "4892:26:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2642,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4891:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2643,
                          "name": "firstAirdropClaimAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2627,
                          "src": "4922:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4891:54:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2634,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4861:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:85:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2646,
                  "nodeType": "ExpressionStatement",
                  "src": "4861:85:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2648,
                        "name": "liquidityWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2502,
                        "src": "4966:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "id": 2649,
                                      "name": "initialSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2543,
                                      "src": "4992:13:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2650,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4991:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 2651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5009:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "4991:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 2653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5013:2:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "4991:24:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2655,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4990:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2656,
                          "name": "firstAirdropClaimAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2627,
                          "src": "5019:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4990:52:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2647,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "4960:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:83:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2659,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:83:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2661,
                        "name": "burnWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2498,
                        "src": "5063:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2662,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2543,
                          "src": "5082:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 2663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5098:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "5082:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2660,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "5057:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5057:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:43:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2668,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "5120:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2669,
                            "name": "initialSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2543,
                            "src": "5144:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 2670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5160:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "5144:17:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 2672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5164:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "5144:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2667,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "5114:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5114:54:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2675,
                  "nodeType": "ExpressionStatement",
                  "src": "5114:54:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2677,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "5188:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2678,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2543,
                          "src": "5212:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 2679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5228:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "5212:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2676,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "5182:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5182:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2682,
                  "nodeType": "ExpressionStatement",
                  "src": "5182:49:21"
                },
                {
                  "assignments": [
                    2685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2685,
                      "mutability": "mutable",
                      "name": "_uniswapV2Router",
                      "nameLocation": "5265:16:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2738,
                      "src": "5246:35:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                        "typeString": "contract IUniswapV2Router02"
                      },
                      "typeName": {
                        "id": 2684,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2683,
                          "name": "IUniswapV2Router02",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11157,
                          "src": "5246:18:21"
                        },
                        "referencedDeclaration": 11157,
                        "src": "5246:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2689,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2687,
                        "name": "uniswapRouterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "5303:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2686,
                      "name": "IUniswapV2Router02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11157,
                      "src": "5284:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$11157_$",
                        "typeString": "type(contract IUniswapV2Router02)"
                      }
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5284:40:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5246:78:21"
                },
                {
                  "expression": {
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2690,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "5338:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2691,
                      "name": "_uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "5354:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "5338:32:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 2693,
                  "nodeType": "ExpressionStatement",
                  "src": "5338:32:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2697,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5401:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 2696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5393:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2695,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5393:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5393:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2701,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2522,
                            "src": "5416:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 2700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5408:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2699,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5408:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5408:22:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2703,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "5432:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2694,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10958,
                      "src": "5384:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5384:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2705,
                  "nodeType": "ExpressionStatement",
                  "src": "5384:62:21"
                },
                {
                  "expression": {
                    "id": 2721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2706,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "5460:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2715,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5539:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                "typeString": "contract ChainEstateToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                "typeString": "contract ChainEstateToken"
                              }
                            ],
                            "id": 2714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5531:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2713,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5531:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5531:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2717,
                              "name": "_uniswapV2Router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2685,
                              "src": "5546:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11050,
                            "src": "5546:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                              "typeString": "function () pure external returns (address)"
                            }
                          },
                          "id": 2719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5546:23:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2708,
                                  "name": "_uniswapV2Router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2685,
                                  "src": "5492:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                },
                                "id": 2709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "factory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11045,
                                "src": "5492:24:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                  "typeString": "function () pure external returns (address)"
                                }
                              },
                              "id": 2710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5492:26:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2707,
                            "name": "IUniswapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11036,
                            "src": "5474:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$11036_$",
                              "typeString": "type(contract IUniswapV2Factory)"
                            }
                          },
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5474:45:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$11036",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11035,
                        "src": "5474:56:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) external returns (address)"
                        }
                      },
                      "id": 2720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5474:96:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5460:110:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2722,
                  "nodeType": "ExpressionStatement",
                  "src": "5460:110:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2729,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2522,
                            "src": "5620:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 2728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5612:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5612:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5612:22:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5641:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2732,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5641:7:21",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 2731,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5636:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5636:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 2735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "5636:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2724,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "5591:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2723,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12212,
                          "src": "5584:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12212_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5584:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12212",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12181,
                      "src": "5584:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5584:70:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2737,
                  "nodeType": "ExpressionStatement",
                  "src": "5584:70:21"
                }
              ]
            },
            "id": 2739,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436861696e457374617465546f6b656e5632",
                    "id": 2560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3780:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7c2026a7d93886fb3920470e186963c0ce60f93ad8582e832b7b0f5defd58c96",
                      "typeString": "literal_string \"ChainEstateTokenV2\""
                    },
                    "value": "ChainEstateTokenV2"
                  },
                  {
                    "hexValue": "43484553",
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3802:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bdf10d818bf280e7003df1b379d53a550513cbb0b5346afb4601ed573d9e1e56",
                      "typeString": "literal_string \"CHES\""
                    },
                    "value": "CHES"
                  }
                ],
                "id": 2562,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2559,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11024,
                  "src": "3774:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "3774:35:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2543,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "3452:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3444:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2545,
                  "mutability": "mutable",
                  "name": "_airDropContractAddress",
                  "nameLocation": "3484:23:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3476:31:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2547,
                  "mutability": "mutable",
                  "name": "_burnWalletAddress",
                  "nameLocation": "3526:18:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3518:26:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2549,
                  "mutability": "mutable",
                  "name": "_liquidityWalletAddress",
                  "nameLocation": "3562:23:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3554:31:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2551,
                  "mutability": "mutable",
                  "name": "_realEstateWalletAddress",
                  "nameLocation": "3611:24:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3595:40:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2553,
                  "mutability": "mutable",
                  "name": "_marketingWalletAddress",
                  "nameLocation": "3661:23:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3645:39:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "_developerWalletAddress",
                  "nameLocation": "3710:23:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3694:39:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3694:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2557,
                  "mutability": "mutable",
                  "name": "_uniswapRouterAddress",
                  "nameLocation": "3751:21:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2739,
                  "src": "3743:29:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3434:339:21"
            },
            "returnParameters": {
              "id": 2563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3810:0:21"
            },
            "scope": 3594,
            "src": "3423:2238:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2750,
              "nodeType": "Block",
              "src": "5815:37:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2747,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5840:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                          "typeString": "contract ChainEstateToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                          "typeString": "contract ChainEstateToken"
                        }
                      ],
                      "id": 2746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5832:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2745,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5832:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5832:13:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2744,
                  "id": 2749,
                  "nodeType": "Return",
                  "src": "5825:20:21"
                }
              ]
            },
            "documentation": {
              "id": 2740,
              "nodeType": "StructuredDocumentation",
              "src": "5667:84:21",
              "text": " @dev Returns the contract address\n @return contract address"
            },
            "functionSelector": "32a2c5d0",
            "id": 2751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nameLocation": "5765:18:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5783:2:21"
            },
            "returnParameters": {
              "id": 2744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2751,
                  "src": "5807:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5807:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5806:9:21"
            },
            "scope": 3594,
            "src": "5756:96:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2765,
              "nodeType": "Block",
              "src": "6047:46:21",
              "statements": [
                {
                  "expression": {
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2759,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "6057:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2761,
                      "indexExpression": {
                        "id": 2760,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2754,
                        "src": "6074:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6057:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6082:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6057:29:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:29:21"
                }
              ]
            },
            "documentation": {
              "id": 2752,
              "nodeType": "StructuredDocumentation",
              "src": "5858:124:21",
              "text": " @dev Adds a user to be excluded from fees.\n @param user address of the user to be excluded from fees."
            },
            "functionSelector": "78c1d245",
            "id": 2766,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2757,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2756,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "6037:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "6037:9:21"
              }
            ],
            "name": "excludeUserFromFees",
            "nameLocation": "5996:19:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2754,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6024:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6016:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6016:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6015:14:21"
            },
            "returnParameters": {
              "id": 2758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6047:0:21"
            },
            "scope": 3594,
            "src": "5987:106:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2775,
              "nodeType": "Block",
              "src": "6300:39:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2772,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "6317:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6317:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2771,
                  "id": 2774,
                  "nodeType": "Return",
                  "src": "6310:22:21"
                }
              ]
            },
            "documentation": {
              "id": 2767,
              "nodeType": "StructuredDocumentation",
              "src": "6099:135:21",
              "text": " @dev Gets the current timestamp, used for testing + verification\n @return the the timestamp of the current block"
            },
            "functionSelector": "6c9230db",
            "id": 2776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTimestamp",
            "nameLocation": "6248:19:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6267:2:21"
            },
            "returnParameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "6291:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6291:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6290:9:21"
            },
            "scope": 3594,
            "src": "6239:100:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2790,
              "nodeType": "Block",
              "src": "6552:47:21",
              "statements": [
                {
                  "expression": {
                    "id": 2788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2784,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "6562:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2786,
                      "indexExpression": {
                        "id": 2785,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "6579:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6562:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6587:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6562:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2789,
                  "nodeType": "ExpressionStatement",
                  "src": "6562:30:21"
                }
              ]
            },
            "documentation": {
              "id": 2777,
              "nodeType": "StructuredDocumentation",
              "src": "6345:143:21",
              "text": " @dev Removes a user from the fee exclusion.\n @param user address of the user than will now have to pay transaction fees."
            },
            "functionSelector": "bbeaa1f8",
            "id": 2791,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2782,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2781,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "6542:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "6542:9:21"
              }
            ],
            "name": "includeUsersInFees",
            "nameLocation": "6502:18:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6529:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2791,
                  "src": "6521:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6521:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6520:14:21"
            },
            "returnParameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6552:0:21"
            },
            "scope": 3594,
            "src": "6493:106:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10560
            ],
            "body": {
              "id": 2980,
              "nodeType": "Block",
              "src": "6951:2403:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7017:24:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2803,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "7018:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2806,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2804,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11644,
                              "src": "7028:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7028:12:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7018:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c61636b6c69737465642066726f6d2074726164696e6720746865204348455320746f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e746163742074686520436861696e204573746174652044414f207465616d2e",
                        "id": 2808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7043:129:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26248277e0eb29b41b25828a7e6d1cff2b632d8ed31aec4453c081d36116670e",
                          "typeString": "literal_string \"You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        },
                        "value": "You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26248277e0eb29b41b25828a7e6d1cff2b632d8ed31aec4453c081d36116670e",
                          "typeString": "literal_string \"You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        }
                      ],
                      "id": 2802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7009:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7009:164:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2810,
                  "nodeType": "ExpressionStatement",
                  "src": "7009:164:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7242:21:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2812,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "7243:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2814,
                          "indexExpression": {
                            "id": 2813,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2794,
                            "src": "7253:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7243:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f752061726520747279696e6720746f2073656e64204348455320746f20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e6720746865204348455320746f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e746163742074686520436861696e204573746174652044414f207465616d2e",
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7265:167:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be97cbb4ae15f29c2aaad0e165cbc789975cd64eaa21a397bf5b620cf8c52ab2",
                          "typeString": "literal_string \"The address you are trying to send CHES to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        },
                        "value": "The address you are trying to send CHES to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be97cbb4ae15f29c2aaad0e165cbc789975cd64eaa21a397bf5b620cf8c52ab2",
                          "typeString": "literal_string \"The address you are trying to send CHES to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        }
                      ],
                      "id": 2811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7234:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7234:199:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "7234:199:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2819,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11644,
                            "src": "7559:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7559:12:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2821,
                          "name": "uniswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2524,
                          "src": "7575:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7559:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 2827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7590:31:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2823,
                            "name": "excludedFromFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2482,
                            "src": "7591:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2826,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2824,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11644,
                              "src": "7608:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7608:12:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7591:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7559:62:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 2832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7625:28:21",
                      "subExpression": {
                        "baseExpression": {
                          "id": 2829,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "7626:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2831,
                        "indexExpression": {
                          "id": 2830,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2794,
                          "src": "7643:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7626:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7559:94:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2851,
                  "nodeType": "IfStatement",
                  "src": "7555:271:21",
                  "trueBody": {
                    "id": 2850,
                    "nodeType": "Block",
                    "src": "7655:171:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 2836,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2794,
                                          "src": "7688:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2835,
                                        "name": "balanceOf",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10535,
                                        "src": "7678:9:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view returns (uint256)"
                                        }
                                      },
                                      "id": 2837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7678:20:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2838,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2796,
                                      "src": "7701:6:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7678:29:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2840,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7677:31:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2841,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10521,
                                        "src": "7712:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 2842,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7712:13:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "313636",
                                      "id": 2843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7728:3:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_166_by_1",
                                        "typeString": "int_const 166"
                                      },
                                      "value": "166"
                                    },
                                    "src": "7712:19:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2845,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7711:21:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7677:55:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e27742068617665206d6f7265207468616e203225206f662074686520746f74616c204348455320737570706c7920616674657220612050616e63616b655377617020737761702e",
                              "id": 2847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7734:80:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab72ad9aaa93409e98a7fd5864404075571e8c705802500a285f01737fd0502c",
                                "typeString": "literal_string \"You can't have more than 2% of the total CHES supply after a PancakeSwap swap.\""
                              },
                              "value": "You can't have more than 2% of the total CHES supply after a PancakeSwap swap."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab72ad9aaa93409e98a7fd5864404075571e8c705802500a285f01737fd0502c",
                                "typeString": "literal_string \"You can't have more than 2% of the total CHES supply after a PancakeSwap swap.\""
                              }
                            ],
                            "id": 2834,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7669:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7669:146:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2849,
                        "nodeType": "ExpressionStatement",
                        "src": "7669:146:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2852,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "7931:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2855,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2853,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "7948:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7948:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7931:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2856,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "7965:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2858,
                      "indexExpression": {
                        "id": 2857,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2794,
                        "src": "7982:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7965:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7931:61:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2870,
                  "nodeType": "IfStatement",
                  "src": "7927:159:21",
                  "trueBody": {
                    "id": 2869,
                    "nodeType": "Block",
                    "src": "7994:92:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2861,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11644,
                                "src": "8018:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8018:12:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2863,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2794,
                              "src": "8032:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2864,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2796,
                              "src": "8043:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2860,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10785,
                            "src": "8008:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8008:42:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2866,
                        "nodeType": "ExpressionStatement",
                        "src": "8008:42:21"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8071:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2801,
                        "id": 2868,
                        "nodeType": "Return",
                        "src": "8064:11:21"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2872,
                      "mutability": "mutable",
                      "name": "realEstateFee",
                      "nameLocation": "8144:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "8136:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8136:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2879,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2873,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "8161:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2874,
                            "name": "realEstateTransactionFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2513,
                            "src": "8170:31:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8161:40:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2876,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8160:42:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8205:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "8160:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8136:72:21"
                },
                {
                  "assignments": [
                    2881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2881,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "8269:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "8261:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2880,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8261:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2888,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2882,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "8285:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2883,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2519,
                            "src": "8294:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8285:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2885,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8284:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8317:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "8284:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8261:59:21"
                },
                {
                  "assignments": [
                    2890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2890,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "8381:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "8373:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2889,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8373:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2897,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2891,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "8397:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2892,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "8406:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8397:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2894,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8396:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8429:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "8396:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8373:59:21"
                },
                {
                  "assignments": [
                    2899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2899,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "8509:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "8501:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2898,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8501:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2905,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2900,
                        "name": "realEstateFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "8520:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2901,
                        "name": "marketingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2881,
                        "src": "8536:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8520:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2903,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2890,
                      "src": "8551:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8520:43:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8501:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2907,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "8647:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8647:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2911,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8669:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 2910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8661:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2909,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8661:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8661:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2913,
                        "name": "totalFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2899,
                        "src": "8676:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2906,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "8637:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:48:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2915,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:48:21"
                },
                {
                  "assignments": [
                    2917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2917,
                      "mutability": "mutable",
                      "name": "contractCHESBalance",
                      "nameLocation": "8704:19:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "8696:27:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2916,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8696:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2924,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2921,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8744:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 2920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8736:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8736:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8736:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2918,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10535,
                      "src": "8726:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8726:24:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8696:54:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2925,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11644,
                        "src": "8765:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8765:12:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2927,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "8781:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8765:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2964,
                  "nodeType": "IfStatement",
                  "src": "8761:392:21",
                  "trueBody": {
                    "id": 2963,
                    "nodeType": "Block",
                    "src": "8794:359:21",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2929,
                            "name": "contractCHESBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2917,
                            "src": "8812:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2931,
                                  "name": "uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2524,
                                  "src": "8844:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2930,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10535,
                                "src": "8834:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8834:22:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 2933,
                              "name": "contractCHESDivisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2529,
                              "src": "8859:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8834:44:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8812:66:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2941,
                        "nodeType": "IfStatement",
                        "src": "8808:140:21",
                        "trueBody": {
                          "id": 2940,
                          "nodeType": "Block",
                          "src": "8880:68:21",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2937,
                                    "name": "contractCHESBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2917,
                                    "src": "8913:19:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2936,
                                  "name": "swapCHESForBNB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3224,
                                  "src": "8898:14:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8898:35:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2939,
                              "nodeType": "ExpressionStatement",
                              "src": "8898:35:21"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2943
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2943,
                            "mutability": "mutable",
                            "name": "contractBNBBalance",
                            "nameLocation": "8986:18:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 2963,
                            "src": "8978:26:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2942,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8978:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2949,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2946,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9015:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                  "typeString": "contract ChainEstateToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                  "typeString": "contract ChainEstateToken"
                                }
                              ],
                              "id": 2945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9007:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2944,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9007:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9007:13:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9007:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8978:50:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2950,
                            "name": "contractBNBBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2943,
                            "src": "9046:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9067:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9046:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2962,
                        "nodeType": "IfStatement",
                        "src": "9042:101:21",
                        "trueBody": {
                          "id": 2961,
                          "nodeType": "Block",
                          "src": "9070:73:21",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2956,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "9114:4:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                            "typeString": "contract ChainEstateToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                            "typeString": "contract ChainEstateToken"
                                          }
                                        ],
                                        "id": 2955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9106:7:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2954,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9106:7:21",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2957,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9106:13:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "9106:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2953,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3272,
                                  "src": "9088:17:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9088:40:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2960,
                              "nodeType": "ExpressionStatement",
                              "src": "9088:40:21"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2966,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "9232:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "9224:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9224:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2970,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2967,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2796,
                      "src": "9249:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2968,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2899,
                      "src": "9258:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9249:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9224:42:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2972,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "9286:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9286:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2974,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2794,
                        "src": "9300:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2975,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "9311:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2971,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "9276:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9276:50:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2977,
                  "nodeType": "ExpressionStatement",
                  "src": "9276:50:21"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9343:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2801,
                  "id": 2979,
                  "nodeType": "Return",
                  "src": "9336:11:21"
                }
              ]
            },
            "documentation": {
              "id": 2792,
              "nodeType": "StructuredDocumentation",
              "src": "6605:257:21",
              "text": " @dev Overrides the BEP20 transfer function to include transaction fees.\n @param recipient the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "a9059cbb",
            "id": 2981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "6876:8:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2798,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6927:8:21"
            },
            "parameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2794,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6893:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "6885:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6885:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2796,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6912:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "6904:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6904:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6884:35:21"
            },
            "returnParameters": {
              "id": 2801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "6945:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6945:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6944:6:21"
            },
            "scope": 3594,
            "src": "6867:2487:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10636
            ],
            "body": {
              "id": 3162,
              "nodeType": "Block",
              "src": "9783:2402:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9849:24:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2995,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "9850:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2998,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2996,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11644,
                              "src": "9860:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9860:12:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9850:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c61636b6c69737465642066726f6d2074726164696e6720746865204348455320746f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e746163742074686520436861696e204573746174652044414f207465616d2e",
                        "id": 3000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9875:129:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26248277e0eb29b41b25828a7e6d1cff2b632d8ed31aec4453c081d36116670e",
                          "typeString": "literal_string \"You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        },
                        "value": "You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26248277e0eb29b41b25828a7e6d1cff2b632d8ed31aec4453c081d36116670e",
                          "typeString": "literal_string \"You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        }
                      ],
                      "id": 2994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9841:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9841:164:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3002,
                  "nodeType": "ExpressionStatement",
                  "src": "9841:164:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10105:16:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3004,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "10106:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3006,
                          "indexExpression": {
                            "id": 3005,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2984,
                            "src": "10116:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10106:15:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f7527726520747279696e6720746f207370656e642074686520746f6b656e732066726f6d20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e6720746865204348455320746f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e746163742074686520436861696e204573746174652044414f207465616d2e",
                        "id": 3008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10123:175:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e0a0d238587ade209875cff15b0f3a5aea6f4ebe0999f6e9970a265b8136a8c",
                          "typeString": "literal_string \"The address you're trying to spend the tokens from has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        },
                        "value": "The address you're trying to spend the tokens from has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e0a0d238587ade209875cff15b0f3a5aea6f4ebe0999f6e9970a265b8136a8c",
                          "typeString": "literal_string \"The address you're trying to spend the tokens from has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        }
                      ],
                      "id": 3003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10097:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10097:202:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3010,
                  "nodeType": "ExpressionStatement",
                  "src": "10097:202:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10368:14:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3012,
                            "name": "blacklist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "10369:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 3014,
                          "indexExpression": {
                            "id": 3013,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2986,
                            "src": "10379:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10369:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206164647265737320796f752061726520747279696e6720746f2073656e6420746f6b656e7320746f20686173206265656e20626c61636b6c69737465642066726f6d2074726164696e6720746865204348455320746f6b656e2e20496620796f75207468696e6b207468697320697320616e206572726f722c20706c6561736520636f6e746163742074686520436861696e204573746174652044414f207465616d2e",
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10384:169:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_907f064de6b67562673d291d6624a38b5ea483b88f134037a266984ea17fc7b4",
                          "typeString": "literal_string \"The address you are trying to send tokens to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        },
                        "value": "The address you are trying to send tokens to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_907f064de6b67562673d291d6624a38b5ea483b88f134037a266984ea17fc7b4",
                          "typeString": "literal_string \"The address you are trying to send tokens to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\""
                        }
                      ],
                      "id": 3011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10360:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10360:194:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "ExpressionStatement",
                  "src": "10360:194:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 3019,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "10671:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3021,
                        "indexExpression": {
                          "id": 3020,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2984,
                          "src": "10688:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10671:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 3022,
                          "name": "excludedFromFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "10697:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3024,
                        "indexExpression": {
                          "id": 3023,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2986,
                          "src": "10714:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10697:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10671:46:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 3026,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "10721:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3029,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3027,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "10738:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10738:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10721:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10671:80:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3047,
                  "nodeType": "IfStatement",
                  "src": "10667:220:21",
                  "trueBody": {
                    "id": 3046,
                    "nodeType": "Block",
                    "src": "10753:134:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3032,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2984,
                              "src": "10783:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3033,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11644,
                                "src": "10789:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10789:12:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3035,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "10803:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3031,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11001,
                            "src": "10767:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10767:43:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3037,
                        "nodeType": "ExpressionStatement",
                        "src": "10767:43:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3039,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2984,
                              "src": "10834:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3040,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2986,
                              "src": "10840:2:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3041,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "10844:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3038,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10785,
                            "src": "10824:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10824:27:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3043,
                        "nodeType": "ExpressionStatement",
                        "src": "10824:27:21"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10872:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2993,
                        "id": 3045,
                        "nodeType": "Return",
                        "src": "10865:11:21"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3049,
                      "mutability": "mutable",
                      "name": "realEstateFee",
                      "nameLocation": "10945:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3162,
                      "src": "10937:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3048,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10937:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3056,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3050,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "10962:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3051,
                            "name": "realEstateTransactionFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2513,
                            "src": "10971:31:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10962:40:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3053,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10961:42:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11006:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "10961:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10937:72:21"
                },
                {
                  "assignments": [
                    3058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3058,
                      "mutability": "mutable",
                      "name": "marketingFee",
                      "nameLocation": "11070:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3162,
                      "src": "11062:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3057,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11062:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3065,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3059,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "11086:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3060,
                            "name": "marketingFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2519,
                            "src": "11095:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11086:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3062,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11085:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11118:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11085:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11062:59:21"
                },
                {
                  "assignments": [
                    3067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3067,
                      "mutability": "mutable",
                      "name": "developerFee",
                      "nameLocation": "11182:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3162,
                      "src": "11174:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3066,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11174:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3074,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3068,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "11198:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3069,
                            "name": "developerFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2516,
                            "src": "11207:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11198:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3071,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11197:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 3072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11230:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11197:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11174:59:21"
                },
                {
                  "assignments": [
                    3076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3076,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "11310:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3162,
                      "src": "11302:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3075,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11302:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3082,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3077,
                        "name": "realEstateFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3049,
                        "src": "11321:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3078,
                        "name": "marketingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3058,
                        "src": "11337:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11321:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3080,
                      "name": "developerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3067,
                      "src": "11352:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11321:43:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11302:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3084,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2984,
                        "src": "11454:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3085,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11644,
                          "src": "11460:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11460:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3087,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "11474:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3083,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11001,
                      "src": "11438:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11438:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3089,
                  "nodeType": "ExpressionStatement",
                  "src": "11438:43:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3091,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2984,
                        "src": "11501:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3094,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11515:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 3093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11507:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3092,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11507:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11507:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3096,
                        "name": "totalFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3076,
                        "src": "11522:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3090,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "11491:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11491:40:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3098,
                  "nodeType": "ExpressionStatement",
                  "src": "11491:40:21"
                },
                {
                  "assignments": [
                    3100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "contractCHESBalance",
                      "nameLocation": "11550:19:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3162,
                      "src": "11542:27:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11542:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3107,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3104,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11590:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 3103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11582:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11582:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11582:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3101,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10535,
                      "src": "11572:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11572:24:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11542:54:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3108,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11644,
                        "src": "11611:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11611:12:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3110,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "11627:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11611:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3147,
                  "nodeType": "IfStatement",
                  "src": "11607:392:21",
                  "trueBody": {
                    "id": 3146,
                    "nodeType": "Block",
                    "src": "11640:359:21",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3112,
                            "name": "contractCHESBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3100,
                            "src": "11658:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3114,
                                  "name": "uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2524,
                                  "src": "11690:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3113,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10535,
                                "src": "11680:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 3115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11680:22:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3116,
                              "name": "contractCHESDivisor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2529,
                              "src": "11705:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11680:44:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11658:66:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3124,
                        "nodeType": "IfStatement",
                        "src": "11654:140:21",
                        "trueBody": {
                          "id": 3123,
                          "nodeType": "Block",
                          "src": "11726:68:21",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3120,
                                    "name": "contractCHESBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3100,
                                    "src": "11759:19:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3119,
                                  "name": "swapCHESForBNB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3224,
                                  "src": "11744:14:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11744:35:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3122,
                              "nodeType": "ExpressionStatement",
                              "src": "11744:35:21"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3126
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3126,
                            "mutability": "mutable",
                            "name": "contractBNBBalance",
                            "nameLocation": "11832:18:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3146,
                            "src": "11824:26:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3125,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11824:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3132,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3129,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11861:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                  "typeString": "contract ChainEstateToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                  "typeString": "contract ChainEstateToken"
                                }
                              ],
                              "id": 3128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11853:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3127,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11853:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11853:13:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "11853:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11824:50:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3133,
                            "name": "contractBNBBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3126,
                            "src": "11892:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11913:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11892:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3145,
                        "nodeType": "IfStatement",
                        "src": "11888:101:21",
                        "trueBody": {
                          "id": 3144,
                          "nodeType": "Block",
                          "src": "11916:73:21",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3139,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "11960:4:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                            "typeString": "contract ChainEstateToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                            "typeString": "contract ChainEstateToken"
                                          }
                                        ],
                                        "id": 3138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11952:7:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3137,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11952:7:21",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3140,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11952:13:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3141,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "11952:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3136,
                                  "name": "sendFeesToWallets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3272,
                                  "src": "11934:17:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11934:40:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3143,
                              "nodeType": "ExpressionStatement",
                              "src": "11934:40:21"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3149,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "12078:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3162,
                      "src": "12070:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3148,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12070:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3153,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3150,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2988,
                      "src": "12095:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3151,
                      "name": "totalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3076,
                      "src": "12104:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12095:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12070:42:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3155,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2984,
                        "src": "12132:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3156,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2986,
                        "src": "12138:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3157,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3149,
                        "src": "12142:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3154,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10785,
                      "src": "12122:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12122:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "12122:35:21"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12174:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2993,
                  "id": 3161,
                  "nodeType": "Return",
                  "src": "12167:11:21"
                }
              ]
            },
            "documentation": {
              "id": 2982,
              "nodeType": "StructuredDocumentation",
              "src": "9360:323:21",
              "text": " @dev Overrides the BEP20 transferFrom function to include transaction fees.\n @param from the address from where the tokens are coming from\n @param to the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "23b872dd",
            "id": 3163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "9697:12:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2990,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9759:8:21"
            },
            "parameters": {
              "id": 2989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2984,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9718:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "9710:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9710:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2986,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9732:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "9724:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9724:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2988,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9744:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "9736:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9736:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9709:42:21"
            },
            "returnParameters": {
              "id": 2993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2992,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "9777:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2991,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9777:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9776:6:21"
            },
            "scope": 3594,
            "src": "9688:2497:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3223,
              "nodeType": "Block",
              "src": "12370:388:21",
              "statements": [
                {
                  "assignments": [
                    3173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3173,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "12397:4:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3223,
                      "src": "12380:21:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12380:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3172,
                        "nodeType": "ArrayTypeName",
                        "src": "12380:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3179,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 3177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12418:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 3176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12404:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12408:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3175,
                        "nodeType": "ArrayTypeName",
                        "src": "12408:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 3178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12404:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12380:40:21"
                },
                {
                  "expression": {
                    "id": 3187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3180,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "12430:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3182,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12435:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12430:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3185,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12448:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                            "typeString": "contract ChainEstateToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                            "typeString": "contract ChainEstateToken"
                          }
                        ],
                        "id": 3184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12440:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12440:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12440:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12430:23:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3188,
                  "nodeType": "ExpressionStatement",
                  "src": "12430:23:21"
                },
                {
                  "expression": {
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3189,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "12463:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3191,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 3190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12468:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12463:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 3192,
                          "name": "uniswapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "12473:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 3193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11050,
                        "src": "12473:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12473:20:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12463:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3196,
                  "nodeType": "ExpressionStatement",
                  "src": "12463:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3200,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12520:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 3199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12512:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3198,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12512:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12512:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3204,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2522,
                            "src": "12535:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 3203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12527:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3202,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12527:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12527:22:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3206,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3166,
                        "src": "12551:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3197,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10958,
                      "src": "12503:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12503:55:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3208,
                  "nodeType": "ExpressionStatement",
                  "src": "12503:55:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3212,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3166,
                        "src": "12646:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12666:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 3214,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "12681:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3217,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12707:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                              "typeString": "contract ChainEstateToken"
                            }
                          ],
                          "id": 3216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12699:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12699:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12699:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3219,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12726:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12726:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3209,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2522,
                        "src": "12568:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$11157",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 3211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11130,
                      "src": "12568:64:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12568:183:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3222,
                  "nodeType": "ExpressionStatement",
                  "src": "12568:183:21"
                }
              ]
            },
            "documentation": {
              "id": 3164,
              "nodeType": "StructuredDocumentation",
              "src": "12191:126:21",
              "text": " @dev Swaps CHES tokens from transaction fees to BNB.\n @param amount the amount of CHES tokens to swap"
            },
            "id": 3224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapCHESForBNB",
            "nameLocation": "12331:14:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3166,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12354:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3224,
                  "src": "12346:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12346:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12345:16:21"
            },
            "returnParameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12370:0:21"
            },
            "scope": 3594,
            "src": "12322:436:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3271,
              "nodeType": "Block",
              "src": "12947:376:21",
              "statements": [
                {
                  "assignments": [
                    3231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3231,
                      "mutability": "mutable",
                      "name": "totalFee",
                      "nameLocation": "12965:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3271,
                      "src": "12957:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12957:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3237,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3232,
                        "name": "realEstateTransactionFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2513,
                        "src": "12976:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3233,
                        "name": "marketingFeePercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2519,
                        "src": "13010:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12976:53:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3235,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "13032:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12976:75:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12957:94:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3241,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3227,
                                "src": "13095:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 3242,
                                "name": "realEstateTransactionFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2513,
                                "src": "13104:31:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13095:40:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3244,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13094:42:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 3245,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3231,
                          "src": "13139:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13094:53:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3238,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "13061:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "13061:32:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13061:87:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "13061:87:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3252,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3227,
                                "src": "13191:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 3253,
                                "name": "marketingFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2519,
                                "src": "13200:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13191:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3255,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13190:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 3256,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3231,
                          "src": "13223:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13190:41:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3249,
                        "name": "marketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "13158:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "13158:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13158:74:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3259,
                  "nodeType": "ExpressionStatement",
                  "src": "13158:74:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3263,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3227,
                                "src": "13275:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 3264,
                                "name": "developerFeePercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2516,
                                "src": "13284:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13275:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3266,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13274:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 3267,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3231,
                          "src": "13307:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13274:41:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3260,
                        "name": "developerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "13242:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "13242:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13242:74:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3270,
                  "nodeType": "ExpressionStatement",
                  "src": "13242:74:21"
                }
              ]
            },
            "documentation": {
              "id": 3225,
              "nodeType": "StructuredDocumentation",
              "src": "12764:127:21",
              "text": " @dev Sends BNB to transaction fee wallets after CHES swaps.\n @param amount the amount to be transfered"
            },
            "id": 3272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendFeesToWallets",
            "nameLocation": "12905:17:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3227,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12931:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3272,
                  "src": "12923:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12923:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12922:16:21"
            },
            "returnParameters": {
              "id": 3229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12947:0:21"
            },
            "scope": 3594,
            "src": "12896:427:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3290,
              "nodeType": "Block",
              "src": "13522:114:21",
              "statements": [
                {
                  "assignments": [
                    3279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3279,
                      "mutability": "mutable",
                      "name": "contractBNBBalance",
                      "nameLocation": "13540:18:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3290,
                      "src": "13532:26:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13532:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3285,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3282,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13569:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                            "typeString": "contract ChainEstateToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                            "typeString": "contract ChainEstateToken"
                          }
                        ],
                        "id": 3281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13561:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13561:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13561:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13561:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13532:50:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3287,
                        "name": "contractBNBBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3279,
                        "src": "13610:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3286,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3272,
                      "src": "13592:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13592:37:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3289,
                  "nodeType": "ExpressionStatement",
                  "src": "13592:37:21"
                }
              ]
            },
            "documentation": {
              "id": 3273,
              "nodeType": "StructuredDocumentation",
              "src": "13329:139:21",
              "text": " @dev Sends BNB to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
            },
            "functionSelector": "7c13efd4",
            "id": 3291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3276,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3275,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "13512:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "13512:9:21"
              }
            ],
            "name": "disperseFeesManually",
            "nameLocation": "13482:20:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13502:2:21"
            },
            "returnParameters": {
              "id": 3277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13522:0:21"
            },
            "scope": 3594,
            "src": "13473:163:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3334,
              "nodeType": "Block",
              "src": "14064:328:21",
              "statements": [
                {
                  "condition": {
                    "id": 3301,
                    "name": "useAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3296,
                    "src": "14078:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3320,
                    "nodeType": "Block",
                    "src": "14150:128:21",
                    "statements": [
                      {
                        "assignments": [
                          3308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3308,
                            "mutability": "mutable",
                            "name": "contractCHESBalance",
                            "nameLocation": "14172:19:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3320,
                            "src": "14164:27:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3307,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14164:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3315,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3312,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14212:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                    "typeString": "contract ChainEstateToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                                    "typeString": "contract ChainEstateToken"
                                  }
                                ],
                                "id": 3311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14204:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3310,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14204:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14204:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3309,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10535,
                            "src": "14194:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 3314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14194:24:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14164:54:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3317,
                              "name": "contractCHESBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3308,
                              "src": "14247:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3316,
                            "name": "swapCHESForBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3224,
                            "src": "14232:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14232:35:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3319,
                        "nodeType": "ExpressionStatement",
                        "src": "14232:35:21"
                      }
                    ]
                  },
                  "id": 3321,
                  "nodeType": "IfStatement",
                  "src": "14074:204:21",
                  "trueBody": {
                    "id": 3306,
                    "nodeType": "Block",
                    "src": "14089:47:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3303,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3294,
                              "src": "14118:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3302,
                            "name": "swapCHESForBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3224,
                            "src": "14103:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14103:22:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3305,
                        "nodeType": "ExpressionStatement",
                        "src": "14103:22:21"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3323,
                      "mutability": "mutable",
                      "name": "contractBNBBalance",
                      "nameLocation": "14296:18:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3334,
                      "src": "14288:26:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14288:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3329,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3326,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "14325:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                            "typeString": "contract ChainEstateToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ChainEstateToken_$3594",
                            "typeString": "contract ChainEstateToken"
                          }
                        ],
                        "id": 3325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14317:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14317:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14317:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14317:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14288:50:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3331,
                        "name": "contractBNBBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "14366:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3330,
                      "name": "sendFeesToWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3272,
                      "src": "14348:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14348:37:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3333,
                  "nodeType": "ExpressionStatement",
                  "src": "14348:37:21"
                }
              ]
            },
            "documentation": {
              "id": 3292,
              "nodeType": "StructuredDocumentation",
              "src": "13642:336:21",
              "text": " @dev Swaps all CHES tokens in the contract for BNB and then disperses those funds to the transaction fee wallets.\n @param amount the amount of CHES in the contract to swap for BNB\n @param useAmount boolean to determine if the amount sent in is swapped for BNB or if the entire contract balance is swapped."
            },
            "functionSelector": "6b9c58df",
            "id": 3335,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3298,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "14054:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "14054:9:21"
              }
            ],
            "name": "swapCHESForBNBManually",
            "nameLocation": "13992:22:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3294,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14023:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3335,
                  "src": "14015:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14015:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3296,
                  "mutability": "mutable",
                  "name": "useAmount",
                  "nameLocation": "14036:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3335,
                  "src": "14031:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3295,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14031:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14014:32:21"
            },
            "returnParameters": {
              "id": 3300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14064:0:21"
            },
            "scope": 3594,
            "src": "13983:409:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3338,
              "nodeType": "Block",
              "src": "14425:2:21",
              "statements": []
            },
            "id": 3339,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14405:2:21"
            },
            "returnParameters": {
              "id": 3337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14425:0:21"
            },
            "scope": 3594,
            "src": "14398:29:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3351,
              "nodeType": "Block",
              "src": "14717:49:21",
              "statements": [
                {
                  "expression": {
                    "id": 3349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3347,
                      "name": "contractCHESDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2529,
                      "src": "14727:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3348,
                      "name": "newDivisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3342,
                      "src": "14749:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14727:32:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3350,
                  "nodeType": "ExpressionStatement",
                  "src": "14727:32:21"
                }
              ]
            },
            "documentation": {
              "id": 3340,
              "nodeType": "StructuredDocumentation",
              "src": "14433:210:21",
              "text": " @dev Sets the value that determines how many CHES tokens need to be in the contract before it's swapped for BNB.\n @param newDivisor the new divisor value to determine the swap threshold"
            },
            "functionSelector": "f439d93c",
            "id": 3352,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3344,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "14707:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "14707:9:21"
              }
            ],
            "name": "setContractCHESDivisor",
            "nameLocation": "14657:22:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3342,
                  "mutability": "mutable",
                  "name": "newDivisor",
                  "nameLocation": "14688:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "14680:18:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14680:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14679:20:21"
            },
            "returnParameters": {
              "id": 3346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14717:0:21"
            },
            "scope": 3594,
            "src": "14648:118:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11023
            ],
            "body": {
              "id": 3406,
              "nodeType": "Block",
              "src": "15145:272:21",
              "statements": [
                {
                  "assignments": [
                    3364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3364,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nameLocation": "15163:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3406,
                      "src": "15155:19:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15155:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3368,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3366,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "15187:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3365,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10535,
                      "src": "15177:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15177:13:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15155:35:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3369,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "15204:2:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15218:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15210:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15210:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15210:10:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15204:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3397,
                  "nodeType": "IfStatement",
                  "src": "15200:158:21",
                  "trueBody": {
                    "id": 3396,
                    "nodeType": "Block",
                    "src": "15222:136:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3375,
                              "name": "airDropInvestTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2486,
                              "src": "15236:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3377,
                            "indexExpression": {
                              "id": 3376,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3357,
                              "src": "15254:2:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15236:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3378,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3359,
                                      "src": "15261:5:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 3379,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "15269:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 3380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "15269:15:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15261:23:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3384,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 3382,
                                            "name": "userBalance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3364,
                                            "src": "15288:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 3383,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3359,
                                            "src": "15302:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "15288:19:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 3385,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "15287:21:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 3386,
                                        "name": "airDropInvestTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2486,
                                        "src": "15311:17:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 3388,
                                      "indexExpression": {
                                        "id": 3387,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3357,
                                        "src": "15329:2:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15311:21:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15287:45:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15261:71:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3391,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15260:73:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3392,
                              "name": "userBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "15336:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15260:87:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15236:111:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3395,
                        "nodeType": "ExpressionStatement",
                        "src": "15236:111:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3401,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3355,
                        "src": "15394:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3402,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "15400:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3403,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3359,
                        "src": "15404:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3398,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "15368:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ChainEstateToken_$3594_$",
                          "typeString": "type(contract super ChainEstateToken)"
                        }
                      },
                      "id": 3400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11023,
                      "src": "15368:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15368:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3405,
                  "nodeType": "ExpressionStatement",
                  "src": "15368:42:21"
                }
              ]
            },
            "documentation": {
              "id": 3353,
              "nodeType": "StructuredDocumentation",
              "src": "14772:272:21",
              "text": " @dev After a token transfer, update the recipient address's air drop invest time since they have a later investment now.\n @param from the sender's address\n @param to the recipient's address\n @param value the amount that was transferred"
            },
            "id": 3407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "15058:19:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3361,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15136:8:21"
            },
            "parameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3355,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15086:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3407,
                  "src": "15078:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15078:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15100:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3407,
                  "src": "15092:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15092:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3359,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "15112:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3407,
                  "src": "15104:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15104:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15077:41:21"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15145:0:21"
            },
            "scope": 3594,
            "src": "15049:368:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3423,
              "nodeType": "Block",
              "src": "15770:46:21",
              "statements": [
                {
                  "expression": {
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3417,
                        "name": "blacklist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "15780:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3419,
                      "indexExpression": {
                        "id": 3418,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3410,
                        "src": "15790:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15780:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3420,
                      "name": "blacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3412,
                      "src": "15798:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15780:29:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3422,
                  "nodeType": "ExpressionStatement",
                  "src": "15780:29:21"
                }
              ]
            },
            "documentation": {
              "id": 3408,
              "nodeType": "StructuredDocumentation",
              "src": "15423:268:21",
              "text": " @dev Updates the blacklist mapping for a given address\n @param user the address that is being added or removed from the blacklist\n @param blacklisted a boolean that determines if the given address is being added or removed from the blacklist"
            },
            "functionSelector": "fc2eb889",
            "id": 3424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3415,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3414,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "15760:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "15760:9:21"
              }
            ],
            "name": "updateBlackList",
            "nameLocation": "15705:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3410,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "15729:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "15721:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15721:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3412,
                  "mutability": "mutable",
                  "name": "blacklisted",
                  "nameLocation": "15740:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "15735:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15735:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15720:32:21"
            },
            "returnParameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15770:0:21"
            },
            "scope": 3594,
            "src": "15696:120:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3447,
              "nodeType": "Block",
              "src": "16102:264:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3433,
                          "name": "newRealEstateTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3427,
                          "src": "16120:27:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 3434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16151:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "16120:33:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207265616c20657374617465207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e203230252e",
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16155:57:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab6dfb247398e07f3eac56eb851d16de26b0fb71c1e689f82af3f5173e9add20",
                          "typeString": "literal_string \"The real estate transaction fee can't be more than 20%.\""
                        },
                        "value": "The real estate transaction fee can't be more than 20%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab6dfb247398e07f3eac56eb851d16de26b0fb71c1e689f82af3f5173e9add20",
                          "typeString": "literal_string \"The real estate transaction fee can't be more than 20%.\""
                        }
                      ],
                      "id": 3432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16112:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16112:101:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3438,
                  "nodeType": "ExpressionStatement",
                  "src": "16112:101:21"
                },
                {
                  "expression": {
                    "id": 3441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3439,
                      "name": "realEstateTransactionFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2513,
                      "src": "16223:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3440,
                      "name": "newRealEstateTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3427,
                      "src": "16257:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16223:61:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3442,
                  "nodeType": "ExpressionStatement",
                  "src": "16223:61:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3444,
                        "name": "newRealEstateTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "16331:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3443,
                      "name": "realEstateTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2533,
                      "src": "16299:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16299:60:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3446,
                  "nodeType": "EmitStatement",
                  "src": "16294:65:21"
                }
              ]
            },
            "documentation": {
              "id": 3425,
              "nodeType": "StructuredDocumentation",
              "src": "15822:181:21",
              "text": " @dev Function to update the real estate transaction fee - can't be more than 20 percent\n @param newRealEstateTransactionFee the new real estate transaction fee"
            },
            "functionSelector": "7be7b656",
            "id": 3448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3429,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "16092:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "16092:9:21"
              }
            ],
            "name": "updateRealEstateTransactionFee",
            "nameLocation": "16017:30:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3427,
                  "mutability": "mutable",
                  "name": "newRealEstateTransactionFee",
                  "nameLocation": "16056:27:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "16048:35:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16048:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16047:37:21"
            },
            "returnParameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16102:0:21"
            },
            "scope": 3594,
            "src": "16008:358:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3471,
              "nodeType": "Block",
              "src": "16644:244:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3457,
                          "name": "newMarketingTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3451,
                          "src": "16662:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16692:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "16662:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206d61726b6574696e67207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 3460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16695:54:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4482bba5fae1605d0ce6abebad666372287aded8b9b27bb6721e75ec1284c5e6",
                          "typeString": "literal_string \"The marketing transaction fee can't be more than 5%.\""
                        },
                        "value": "The marketing transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4482bba5fae1605d0ce6abebad666372287aded8b9b27bb6721e75ec1284c5e6",
                          "typeString": "literal_string \"The marketing transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 3456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16654:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16654:96:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3462,
                  "nodeType": "ExpressionStatement",
                  "src": "16654:96:21"
                },
                {
                  "expression": {
                    "id": 3465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3463,
                      "name": "marketingFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2519,
                      "src": "16760:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3464,
                      "name": "newMarketingTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3451,
                      "src": "16782:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16760:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3466,
                  "nodeType": "ExpressionStatement",
                  "src": "16760:48:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3468,
                        "name": "newMarketingTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3451,
                        "src": "16854:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3467,
                      "name": "marketingTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2537,
                      "src": "16823:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16823:58:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3470,
                  "nodeType": "EmitStatement",
                  "src": "16818:63:21"
                }
              ]
            },
            "documentation": {
              "id": 3449,
              "nodeType": "StructuredDocumentation",
              "src": "16372:175:21",
              "text": " @dev Function to update the marketing transaction fee - can't be more than 5 percent\n @param newMarketingTransactionFee the new marketing transaction fee"
            },
            "functionSelector": "5b81c1a4",
            "id": 3472,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3454,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3453,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "16634:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "16634:9:21"
              }
            ],
            "name": "updateMarketingTransactionFee",
            "nameLocation": "16561:29:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3451,
                  "mutability": "mutable",
                  "name": "newMarketingTransactionFee",
                  "nameLocation": "16599:26:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3472,
                  "src": "16591:34:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16591:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16590:36:21"
            },
            "returnParameters": {
              "id": 3455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16644:0:21"
            },
            "scope": 3594,
            "src": "16552:336:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3495,
              "nodeType": "Block",
              "src": "17166:244:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3481,
                          "name": "newDeveloperTransactionFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3475,
                          "src": "17184:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 3482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17214:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "17184:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520646576656c6f706572207472616e73616374696f6e206665652063616e2774206265206d6f7265207468616e2035252e",
                        "id": 3484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17217:54:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3203f85bd58d1f5b35aa72cbaa6e1972da45cef74f6c798c22fc35ae27773249",
                          "typeString": "literal_string \"The developer transaction fee can't be more than 5%.\""
                        },
                        "value": "The developer transaction fee can't be more than 5%."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3203f85bd58d1f5b35aa72cbaa6e1972da45cef74f6c798c22fc35ae27773249",
                          "typeString": "literal_string \"The developer transaction fee can't be more than 5%.\""
                        }
                      ],
                      "id": 3480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17176:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17176:96:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3486,
                  "nodeType": "ExpressionStatement",
                  "src": "17176:96:21"
                },
                {
                  "expression": {
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3487,
                      "name": "developerFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "17282:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3488,
                      "name": "newDeveloperTransactionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3475,
                      "src": "17304:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17282:48:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "17282:48:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3492,
                        "name": "newDeveloperTransactionFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3475,
                        "src": "17376:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3491,
                      "name": "developerTransactionFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "17345:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17345:58:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3494,
                  "nodeType": "EmitStatement",
                  "src": "17340:63:21"
                }
              ]
            },
            "documentation": {
              "id": 3473,
              "nodeType": "StructuredDocumentation",
              "src": "16894:175:21",
              "text": " @dev Function to update the developer transaction fee - can't be more than 5 percent\n @param newDeveloperTransactionFee the new developer transaction fee"
            },
            "functionSelector": "ecc63390",
            "id": 3496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3477,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "17156:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "17156:9:21"
              }
            ],
            "name": "updateDeveloperTransactionFee",
            "nameLocation": "17083:29:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3475,
                  "mutability": "mutable",
                  "name": "newDeveloperTransactionFee",
                  "nameLocation": "17121:26:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "17113:34:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17113:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17112:36:21"
            },
            "returnParameters": {
              "id": 3479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17166:0:21"
            },
            "scope": 3594,
            "src": "17074:336:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3512,
              "nodeType": "Block",
              "src": "17732:41:21",
              "statements": [
                {
                  "expression": {
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3506,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2494,
                        "src": "17742:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3508,
                      "indexExpression": {
                        "id": 3507,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3499,
                        "src": "17750:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17742:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3509,
                      "name": "isMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "17758:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17742:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "17742:24:21"
                }
              ]
            },
            "documentation": {
              "id": 3497,
              "nodeType": "StructuredDocumentation",
              "src": "17416:243:21",
              "text": " @dev Function to add or remove a CHES token minter\n @param user the address that will be added or removed as a minter\n @param isMinter boolean representing if the address provided will be added or removed as a minter"
            },
            "functionSelector": "43620e71",
            "id": 3513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3503,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "17722:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "17722:9:21"
              }
            ],
            "name": "updateMinter",
            "nameLocation": "17673:12:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "17694:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "17686:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17686:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3501,
                  "mutability": "mutable",
                  "name": "isMinter",
                  "nameLocation": "17705:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "17700:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17700:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17685:29:21"
            },
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17732:0:21"
            },
            "scope": 3594,
            "src": "17664:109:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3534,
              "nodeType": "Block",
              "src": "18044:123:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3522,
                          "name": "minters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2494,
                          "src": "18062:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3525,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3523,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11644,
                            "src": "18070:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18070:12:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18062:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f206d696e74204348455320746f6b656e732e",
                        "id": 3526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18085:45:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70823cc2321ac3bdf165c658e495e00a23f5d527d3ad80f0984bcf36e6841a68",
                          "typeString": "literal_string \"You are not authorized to mint CHES tokens.\""
                        },
                        "value": "You are not authorized to mint CHES tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70823cc2321ac3bdf165c658e495e00a23f5d527d3ad80f0984bcf36e6841a68",
                          "typeString": "literal_string \"You are not authorized to mint CHES tokens.\""
                        }
                      ],
                      "id": 3521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18054:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18054:77:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3528,
                  "nodeType": "ExpressionStatement",
                  "src": "18054:77:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3530,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3516,
                        "src": "18147:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3531,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3518,
                        "src": "18153:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3529,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10841,
                      "src": "18141:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18141:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3533,
                  "nodeType": "ExpressionStatement",
                  "src": "18141:19:21"
                }
              ]
            },
            "documentation": {
              "id": 3514,
              "nodeType": "StructuredDocumentation",
              "src": "17779:209:21",
              "text": " @dev Minter only function to mint new CHES tokens for bridging\n @param user the address that the tokens will be minted to\n @param amount the amount of tokens to be minted to the user"
            },
            "functionSelector": "40c10f19",
            "id": 3535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "18002:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3516,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "18015:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3535,
                  "src": "18007:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18007:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3518,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18029:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3535,
                  "src": "18021:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18021:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18006:30:21"
            },
            "returnParameters": {
              "id": 3520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18044:0:21"
            },
            "scope": 3594,
            "src": "17993:174:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "18412:123:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3544,
                          "name": "minters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2494,
                          "src": "18430:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 3547,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3545,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11644,
                            "src": "18438:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18438:12:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18430:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420617574686f72697a656420746f206275726e204348455320746f6b656e732e",
                        "id": 3548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18453:45:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5052213adb217f7cfa365d3ce6bd8c43098b546fafc5015caaf673ad7a92cd7",
                          "typeString": "literal_string \"You are not authorized to burn CHES tokens.\""
                        },
                        "value": "You are not authorized to burn CHES tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5052213adb217f7cfa365d3ce6bd8c43098b546fafc5015caaf673ad7a92cd7",
                          "typeString": "literal_string \"You are not authorized to burn CHES tokens.\""
                        }
                      ],
                      "id": 3543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18422:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18422:77:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3550,
                  "nodeType": "ExpressionStatement",
                  "src": "18422:77:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3552,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3538,
                        "src": "18515:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3553,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3540,
                        "src": "18521:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3551,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10913,
                      "src": "18509:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18509:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "18509:19:21"
                }
              ]
            },
            "documentation": {
              "id": 3536,
              "nodeType": "StructuredDocumentation",
              "src": "18173:183:21",
              "text": " @dev Minter only function to burn CHES tokens for bridging\n @param user the address to burn the tokens from\n @param amount the amount of tokens to be burned"
            },
            "functionSelector": "9dc29fac",
            "id": 3557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "18370:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3538,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "18383:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "18375:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18375:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3540,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18397:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "18389:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18389:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18374:30:21"
            },
            "returnParameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18412:0:21"
            },
            "scope": 3594,
            "src": "18361:174:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3579,
              "nodeType": "Block",
              "src": "18910:178:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3566,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "18928:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "18928:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3568,
                          "name": "tokenClaimContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "18942:25:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "18928:39:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520746f6b656e20636c61696d20636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 3570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18969:55:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a583712a68c9f6d60353c93344a618e2dd3595583ac38d740f8a181e14333a35",
                          "typeString": "literal_string \"Only the token claim contract can call this function.\""
                        },
                        "value": "Only the token claim contract can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a583712a68c9f6d60353c93344a618e2dd3595583ac38d740f8a181e14333a35",
                          "typeString": "literal_string \"Only the token claim contract can call this function.\""
                        }
                      ],
                      "id": 3565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18920:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18920:105:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3572,
                  "nodeType": "ExpressionStatement",
                  "src": "18920:105:21"
                },
                {
                  "expression": {
                    "id": 3577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3573,
                        "name": "airDropInvestTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2486,
                        "src": "19035:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3575,
                      "indexExpression": {
                        "id": 3574,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3560,
                        "src": "19053:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19035:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3576,
                      "name": "airDropInvestTimeVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3562,
                      "src": "19061:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19035:46:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3578,
                  "nodeType": "ExpressionStatement",
                  "src": "19035:46:21"
                }
              ]
            },
            "documentation": {
              "id": 3558,
              "nodeType": "StructuredDocumentation",
              "src": "18541:283:21",
              "text": " @dev Function that only the token claim contract can call to set the airdrop invest time for a user when claiming their V2 tokens.\n @param user the address to set the airdrop invest time for\n @param airDropInvestTimeVal the airdrop invest time for the user"
            },
            "functionSelector": "72b11637",
            "id": 3580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAirDropInvestTime",
            "nameLocation": "18838:20:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3560,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "18867:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3580,
                  "src": "18859:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18859:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3562,
                  "mutability": "mutable",
                  "name": "airDropInvestTimeVal",
                  "nameLocation": "18881:20:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3580,
                  "src": "18873:28:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18873:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18858:44:21"
            },
            "returnParameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18910:0:21"
            },
            "scope": 3594,
            "src": "18829:259:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3592,
              "nodeType": "Block",
              "src": "19327:62:21",
              "statements": [
                {
                  "expression": {
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3588,
                      "name": "tokenClaimContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "19337:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3589,
                      "name": "tokenClaimAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3583,
                      "src": "19365:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19337:45:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "19337:45:21"
                }
              ]
            },
            "documentation": {
              "id": 3581,
              "nodeType": "StructuredDocumentation",
              "src": "19094:146:21",
              "text": " @dev Only owner function to set the token claim contract address.\n @param tokenClaimAddress the token claim contract address"
            },
            "functionSelector": "aac86d4e",
            "id": 3593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3585,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9067,
                  "src": "19317:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "19317:9:21"
              }
            ],
            "name": "setTokenClaimContractAddress",
            "nameLocation": "19254:28:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "tokenClaimAddress",
                  "nameLocation": "19291:17:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "19283:25:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19283:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19282:27:21"
            },
            "returnParameters": {
              "id": 3587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19327:0:21"
            },
            "scope": 3594,
            "src": "19245:144:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3595,
        "src": "457:18934:21",
        "usedErrors": []
      }
    ],
    "src": "34:19357:21"
  },
  "bytecode": "60806040526003601255600160135560016014556103e86018553480156200002657600080fd5b506040516200314e3803806200314e8339810160408190526200004991620008d1565b604080518082018252601281527121b430b4b722b9ba30ba32aa37b5b2b72b1960711b6020808301918252835180850190945260048452634348455360e01b9084015281519192916200009f9160039162000812565b508051620000b590600490602084019062000812565b505050620000d2620000cc620004e960201b60201c565b620004ed565b63621559d4601155600a80546001600160a01b03199081166001600160a01b038a8116919091178355600c80548316888316908117909155600b805484168b8416179055600d805484168a8416178155600e80548516898516178155600f805486168986161781556010805490961688861617909555600092835260066020526040808420805460ff199081166001908117909255965486168552818520805488168217905591548516845280842080548716831790559154841683528183208054861682179055855484168352912080549093161790915590546a13541c473f5f57f5bc000091620001ee9116826064620001d08d60236200099c565b620001dc9190620009be565b620001e89190620009e1565b6200053f565b600d5462000227906001600160a01b031682600a6200020f8d60036200099c565b6200021b9190620009be565b620001e89190620009fb565b600b5462000245906001600160a01b0316620001e860058c620009be565b600e5462000271906001600160a01b03166064620002658c60056200099c565b620001e89190620009be565b600f546200028f906001600160a01b0316620001e8600a8c620009be565b601054601580546001600160a01b0319166001600160a01b039092169182179055620002bd30828c62000636565b806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015620002f757600080fd5b505afa1580156200030c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000332919062000a16565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200037b57600080fd5b505afa15801562000390573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b6919062000a16565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b158015620003ff57600080fd5b505af115801562000414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043a919062000a16565b601680546001600160a01b0319166001600160a01b0392831690811790915560155460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b390604401602060405180830381600087803b1580156200049d57600080fd5b505af1158015620004b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d8919062000a3d565b505050505050505050505062000a9e565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200059b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060026000828254620005af9190620009fb565b90915550506001600160a01b03821660009081526020819052604081208054839290620005de908490620009fb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3620006326000838362000763565b5050565b6001600160a01b0383166200069a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000592565b6001600160a01b038216620006fd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000592565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b505050565b6001600160a01b0382166000818152602081905260409020549015620007f4576001600160a01b0383166000908152600760205260409020548190620007aa8483620009e1565b620007b691906200099c565b620007c242856200099c565b620007ce9190620009fb565b620007da9190620009be565b6001600160a01b0384166000908152600760205260409020555b6200080c8484846200075e60201b62000fb61760201c565b50505050565b828054620008209062000a61565b90600052602060002090601f0160209004810192826200084457600085556200088f565b82601f106200085f57805160ff19168380011785556200088f565b828001600101855582156200088f579182015b828111156200088f57825182559160200191906001019062000872565b506200089d929150620008a1565b5090565b5b808211156200089d5760008155600101620008a2565b6001600160a01b0381168114620008ce57600080fd5b50565b600080600080600080600080610100898b031215620008ef57600080fd5b8851975060208901516200090381620008b8565b60408a01519097506200091681620008b8565b60608a01519096506200092981620008b8565b60808a01519095506200093c81620008b8565b60a08a01519094506200094f81620008b8565b60c08a01519093506200096281620008b8565b60e08a01519092506200097581620008b8565b809150509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620009b957620009b962000986565b500290565b600082620009dc57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015620009f657620009f662000986565b500390565b6000821982111562000a115762000a1162000986565b500190565b60006020828403121562000a2957600080fd5b815162000a3681620008b8565b9392505050565b60006020828403121562000a5057600080fd5b8151801515811462000a3657600080fd5b600181811c9082168062000a7657607f821691505b6020821081141562000a9857634e487b7160e01b600052602260045260246000fd5b50919050565b6126a08062000aae6000396000f3fe6080604052600436106102975760003560e01c806378c1d2451161015a578063c816841b116100c1578063f2fde38b1161007a578063f2fde38b146107f5578063f439d93c14610815578063f46eccc414610835578063f94d733d14610865578063f9f92be41461087b578063fc2eb889146108ab57600080fd5b8063c816841b14610709578063d158272d14610729578063da6fa55c14610749578063dbe66ca01461075f578063dd62ed3e1461078f578063ecc63390146107d557600080fd5b80639dc29fac116101135780639dc29fac14610649578063a457c2d714610669578063a9059cbb14610689578063aac86d4e146106a9578063ac65c870146106c9578063bbeaa1f8146106e957600080fd5b806378c1d245146105a15780637be7b656146105c15780637c13efd4146105e15780638da5cb5b146105f65780638eb83f251461061457806395d89b411461063457600080fd5b806343620e71116101fe5780636b9c58df116101b75780636b9c58df146105035780636c9230db146105235780636e2b0e471461053657806370a082311461054c578063715018a61461056c57806372b116371461058157600080fd5b806343620e711461044d5780634fcd12851461046d578063502f91ec146104835780635b3c1da1146104a35780635b81c1a4146104c357806361eb048a146104e357600080fd5b806323b872dd1161025057806323b872dd146103a65780632fb47be4146103c6578063313ce567146103dc57806332a2c5d0146103f8578063395093511461040b57806340c10f191461042b57600080fd5b806306fdde03146102a3578063095ea7b3146102ce5780631497b01b146102fe57806318160ddd146103395780631ba7f00f1461034e57806320ca3c7f1461038657600080fd5b3661029e57005b600080fd5b3480156102af57600080fd5b506102b86108cb565b6040516102c59190612274565b60405180910390f35b3480156102da57600080fd5b506102ee6102e93660046122de565b61095d565b60405190151581526020016102c5565b34801561030a57600080fd5b5061032b61031936600461230a565b60076020526000908152604090205481565b6040519081526020016102c5565b34801561034557600080fd5b5060025461032b565b34801561035a57600080fd5b50600a5461036e906001600160a01b031681565b6040516001600160a01b0390911681526020016102c5565b34801561039257600080fd5b5060105461036e906001600160a01b031681565b3480156103b257600080fd5b506102ee6103c1366004612327565b610977565b3480156103d257600080fd5b5061032b60115481565b3480156103e857600080fd5b50604051601281526020016102c5565b34801561040457600080fd5b503061036e565b34801561041757600080fd5b506102ee6104263660046122de565b610d77565b34801561043757600080fd5b5061044b6104463660046122de565b610db6565b005b34801561045957600080fd5b5061044b61046836600461237d565b610e37565b34801561047957600080fd5b5061032b60135481565b34801561048f57600080fd5b50600c5461036e906001600160a01b031681565b3480156104af57600080fd5b50600b5461036e906001600160a01b031681565b3480156104cf57600080fd5b5061044b6104de3660046123b2565b610e8c565b3480156104ef57600080fd5b50600f5461036e906001600160a01b031681565b34801561050f57600080fd5b5061044b61051e3660046123cb565b610f56565b34801561052f57600080fd5b504261032b565b34801561054257600080fd5b5061032b60125481565b34801561055857600080fd5b5061032b61056736600461230a565b610fbb565b34801561057857600080fd5b5061044b610fd6565b34801561058d57600080fd5b5061044b61059c3660046122de565b61100c565b3480156105ad57600080fd5b5061044b6105bc36600461230a565b6110a0565b3480156105cd57600080fd5b5061044b6105dc3660046123b2565b6110ee565b3480156105ed57600080fd5b5061044b6111c2565b34801561060257600080fd5b506005546001600160a01b031661036e565b34801561062057600080fd5b50600d5461036e906001600160a01b031681565b34801561064057600080fd5b506102b86111f9565b34801561065557600080fd5b5061044b6106643660046122de565b611208565b34801561067557600080fd5b506102ee6106843660046122de565b611285565b34801561069557600080fd5b506102ee6106a43660046122de565b611322565b3480156106b557600080fd5b5061044b6106c436600461230a565b6116d3565b3480156106d557600080fd5b5060175461036e906001600160a01b031681565b3480156106f557600080fd5b5061044b61070436600461230a565b61171f565b34801561071557600080fd5b5060165461036e906001600160a01b031681565b34801561073557600080fd5b50600e5461036e906001600160a01b031681565b34801561075557600080fd5b5061032b60145481565b34801561076b57600080fd5b506102ee61077a36600461230a565b60066020526000908152604090205460ff1681565b34801561079b57600080fd5b5061032b6107aa3660046123ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156107e157600080fd5b5061044b6107f03660046123b2565b61176a565b34801561080157600080fd5b5061044b61081036600461230a565b611835565b34801561082157600080fd5b5061044b6108303660046123b2565b6118cd565b34801561084157600080fd5b506102ee61085036600461230a565b60096020526000908152604090205460ff1681565b34801561087157600080fd5b5061032b60185481565b34801561088757600080fd5b506102ee61089636600461230a565b60086020526000908152604090205460ff1681565b3480156108b757600080fd5b5061044b6108c636600461237d565b6118fc565b6060600380546108da90612427565b80601f016020809104026020016040519081016040528092919081815260200182805461090690612427565b80156109535780601f1061092857610100808354040283529160200191610953565b820191906000526020600020905b81548152906001019060200180831161093657829003601f168201915b5050505050905090565b60003361096b818585611951565b60019150505b92915050565b3360009081526008602052604081205460ff16156109b05760405162461bcd60e51b81526004016109a790612462565b60405180910390fd5b6001600160a01b03841660009081526008602052604090205460ff1615610ac85760405162461bcd60e51b81526020600482015260ad60248201527f546865206164647265737320796f7527726520747279696e6720746f2073706560448201527f6e642074686520746f6b656e732066726f6d20686173206265656e20626c616360648201527f6b6c69737465642066726f6d2074726164696e6720746865204348455320746f60848201527f6b656e2e20496620796f75207468696e6b207468697320697320616e2065727260a48201527f6f722c20706c6561736520636f6e746163742074686520436861696e2045737460c48201526c30ba32902220a7903a32b0b69760991b60e4820152610104016109a7565b6001600160a01b03831660009081526008602052604090205460ff1615610bda5760405162461bcd60e51b81526020600482015260a760248201527f546865206164647265737320796f752061726520747279696e6720746f20736560448201527f6e6420746f6b656e7320746f20686173206265656e20626c61636b6c6973746560648201527f642066726f6d2074726164696e6720746865204348455320746f6b656e2e204960848201527f6620796f75207468696e6b207468697320697320616e206572726f722c20706c60a48201527f6561736520636f6e746163742074686520436861696e2045737461746520444160c48201526627903a32b0b69760c91b60e4820152610104016109a7565b6001600160a01b03841660009081526006602052604090205460ff1680610c1957506001600160a01b03831660009081526006602052604090205460ff165b80610c3357503360009081526006602052604090205460ff165b15610c5657610c43843384611a75565b610c4e848484611b07565b506001610d70565b6000606460125484610c689190612521565b610c729190612540565b90506000606460145485610c869190612521565b610c909190612540565b90506000606460135486610ca49190612521565b610cae9190612540565b9050600081610cbd8486612562565b610cc79190612562565b9050610cd4883388611a75565b610cdf883083611b07565b6000610cea30610fbb565b6016549091506001600160a01b0316336001600160a01b031614610d4c57601854601654610d20906001600160a01b0316610fbb565b610d2a9190612540565b811115610d3a57610d3a81611cdb565b478015610d4a57610d4a47611e44565b505b6000610d58838961257a565b9050610d658a8a83611b07565b600196505050505050505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061096b9082908690610db1908790612562565b611951565b3360009081526009602052604090205460ff16610e295760405162461bcd60e51b815260206004820152602b60248201527f596f7520617265206e6f7420617574686f72697a656420746f206d696e74204360448201526a2422a9903a37b5b2b7399760a91b60648201526084016109a7565b610e338282611f62565b5050565b6005546001600160a01b03163314610e615760405162461bcd60e51b81526004016109a790612591565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6005546001600160a01b03163314610eb65760405162461bcd60e51b81526004016109a790612591565b6005811115610f245760405162461bcd60e51b815260206004820152603460248201527f546865206d61726b6574696e67207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b60648201526084016109a7565b601481905560405181907eec95f51190fc49500bf726b0c72cb5c1b132f7bfe7685a33bda07defe3a8a890600090a250565b6005546001600160a01b03163314610f805760405162461bcd60e51b81526004016109a790612591565b8015610f9457610f8f82611cdb565b610fac565b6000610f9f30610fbb565b9050610faa81611cdb565b505b47610fb681611e44565b505050565b6001600160a01b031660009081526020819052604090205490565b6005546001600160a01b031633146110005760405162461bcd60e51b81526004016109a790612591565b61100a6000612049565b565b6017546001600160a01b031633146110845760405162461bcd60e51b815260206004820152603560248201527f4f6e6c792074686520746f6b656e20636c61696d20636f6e7472616374206361604482015274371031b0b636103a3434b990333ab731ba34b7b71760591b60648201526084016109a7565b6001600160a01b03909116600090815260076020526040902055565b6005546001600160a01b031633146110ca5760405162461bcd60e51b81526004016109a790612591565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b031633146111185760405162461bcd60e51b81526004016109a790612591565b601481111561118f5760405162461bcd60e51b815260206004820152603760248201527f546865207265616c20657374617465207472616e73616374696f6e206665652060448201527f63616e2774206265206d6f7265207468616e203230252e00000000000000000060648201526084016109a7565b601281905560405181907f5e294032e562253d1bd8479e26981cf9e5b7ab3e93218bfd57214de3418f0b1c90600090a250565b6005546001600160a01b031633146111ec5760405162461bcd60e51b81526004016109a790612591565b476111f681611e44565b50565b6060600480546108da90612427565b3360009081526009602052604090205460ff1661127b5760405162461bcd60e51b815260206004820152602b60248201527f596f7520617265206e6f7420617574686f72697a656420746f206275726e204360448201526a2422a9903a37b5b2b7399760a91b60648201526084016109a7565b610e33828261209b565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561130a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109a7565b6113178286868403611951565b506001949350505050565b3360009081526008602052604081205460ff16156113525760405162461bcd60e51b81526004016109a790612462565b6001600160a01b03831660009081526008602052604090205460ff16156114625760405162461bcd60e51b81526020600482015260a560248201527f546865206164647265737320796f752061726520747279696e6720746f20736560448201527f6e64204348455320746f20686173206265656e20626c61636b6c69737465642060648201527f66726f6d2074726164696e6720746865204348455320746f6b656e2e2049662060848201527f796f75207468696e6b207468697320697320616e206572726f722c20706c656160a48201527f736520636f6e746163742074686520436861696e204573746174652044414f2060c4820152643a32b0b69760d91b60e4820152610104016109a7565b6016546001600160a01b0316336001600160a01b031614801561149557503360009081526006602052604090205460ff16155b80156114ba57506001600160a01b03831660009081526006602052604090205460ff16155b156115725760a66114ca60025490565b6114d49190612540565b826114de85610fbb565b6114e89190612562565b106115725760405162461bcd60e51b815260206004820152604e60248201527f596f752063616e27742068617665206d6f7265207468616e203225206f66207460448201527f686520746f74616c204348455320737570706c7920616674657220612050616e60648201526d31b0b5b2a9bbb0b81039bbb0b81760911b608482015260a4016109a7565b3360009081526006602052604090205460ff16806115a857506001600160a01b03831660009081526006602052604090205460ff165b156115c0576115b8338484611b07565b506001610971565b60006064601254846115d29190612521565b6115dc9190612540565b905060006064601454856115f09190612521565b6115fa9190612540565b9050600060646013548661160e9190612521565b6116189190612540565b90506000816116278486612562565b6116319190612562565b905061163e333083611b07565b600061164930610fbb565b6016549091506001600160a01b0316336001600160a01b0316146116ab5760185460165461167f906001600160a01b0316610fbb565b6116899190612540565b8111156116995761169981611cdb565b4780156116a9576116a947611e44565b505b60006116b7838961257a565b90506116c4338a83611b07565b50600198975050505050505050565b6005546001600160a01b031633146116fd5760405162461bcd60e51b81526004016109a790612591565b601780546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146117495760405162461bcd60e51b81526004016109a790612591565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b031633146117945760405162461bcd60e51b81526004016109a790612591565b60058111156118025760405162461bcd60e51b815260206004820152603460248201527f54686520646576656c6f706572207472616e73616374696f6e206665652063616044820152733713ba1031329036b7b932903a3430b7101a929760611b60648201526084016109a7565b601381905560405181907f4bee3c216a701857abd67fed754efdd065a8599be5476e2c4b118fb1896b9ffa90600090a250565b6005546001600160a01b0316331461185f5760405162461bcd60e51b81526004016109a790612591565b6001600160a01b0381166118c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109a7565b6111f681612049565b6005546001600160a01b031633146118f75760405162461bcd60e51b81526004016109a790612591565b601855565b6005546001600160a01b031633146119265760405162461bcd60e51b81526004016109a790612591565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6001600160a01b0383166119b35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109a7565b6001600160a01b038216611a145760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109a7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611b015781811015611af45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109a7565b611b018484848403611951565b50505050565b6001600160a01b038316611b6b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109a7565b6001600160a01b038216611bcd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109a7565b6001600160a01b03831660009081526020819052604090205481811015611c455760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109a7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611c7c908490612562565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611cc891815260200190565b60405180910390a3611b018484846121ec565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110611d1057611d106125c6565b6001600160a01b03928316602091820292909201810191909152601554604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611d6457600080fd5b505afa158015611d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9c91906125dc565b81600181518110611daf57611daf6125c6565b6001600160a01b039283166020918202929092010152601554611dd59130911684611951565b60155460405163791ac94760e01b81526001600160a01b039091169063791ac94790611e0e9085906000908690309042906004016125f9565b600060405180830381600087803b158015611e2857600080fd5b505af1158015611e3c573d6000803e3d6000fd5b505050505050565b6000601354601454601254611e599190612562565b611e639190612562565b600c546012549192506001600160a01b0316906108fc908390611e869086612521565b611e909190612540565b6040518115909202916000818181858888f19350505050158015611eb8573d6000803e3d6000fd5b50600e546014546001600160a01b03909116906108fc908390611edb9086612521565b611ee59190612540565b6040518115909202916000818181858888f19350505050158015611f0d573d6000803e3d6000fd5b50600f546013546001600160a01b03909116906108fc908390611f309086612521565b611f3a9190612540565b6040518115909202916000818181858888f19350505050158015610fb6573d6000803e3d6000fd5b6001600160a01b038216611fb85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016109a7565b8060026000828254611fca9190612562565b90915550506001600160a01b03821660009081526020819052604081208054839290611ff7908490612562565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610e33600083836121ec565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166120fb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109a7565b6001600160a01b0382166000908152602081905260409020548181101561216f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109a7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061219e90849061257a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610fb6836000845b60006121f783610fbb565b90506001600160a01b0383161561226f576001600160a01b038316600090815260076020526040902054819061222d848361257a565b6122379190612521565b6122414285612521565b61224b9190612562565b6122559190612540565b6001600160a01b0384166000908152600760205260409020555b611b01565b600060208083528351808285015260005b818110156122a157858101830151858201604001528201612285565b818111156122b3576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b03811681146111f657600080fd5b600080604083850312156122f157600080fd5b82356122fc816122c9565b946020939093013593505050565b60006020828403121561231c57600080fd5b8135610d70816122c9565b60008060006060848603121561233c57600080fd5b8335612347816122c9565b92506020840135612357816122c9565b929592945050506040919091013590565b8035801515811461237857600080fd5b919050565b6000806040838503121561239057600080fd5b823561239b816122c9565b91506123a960208401612368565b90509250929050565b6000602082840312156123c457600080fd5b5035919050565b600080604083850312156123de57600080fd5b823591506123a960208401612368565b6000806040838503121561240157600080fd5b823561240c816122c9565b9150602083013561241c816122c9565b809150509250929050565b600181811c9082168061243b57607f821691505b6020821081141561245c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252607f908201527f596f752068617665206265656e20626c61636b6c69737465642066726f6d207460408201527f726164696e6720746865204348455320746f6b656e2e20496620796f7520746860608201527f696e6b207468697320697320616e206572726f722c20706c6561736520636f6e60808201527f746163742074686520436861696e204573746174652044414f207465616d2e0060a082015260c00190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561253b5761253b61250b565b500290565b60008261255d57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156125755761257561250b565b500190565b60008282101561258c5761258c61250b565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156125ee57600080fd5b8151610d70816122c9565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156126495784516001600160a01b031683529383019391830191600101612624565b50506001600160a01b0396909616606085015250505060800152939250505056fea26469706673582212208df55752d5bca78e9d973f4ee103688a35f234678d8c3115c11cbe73a3e86f3664736f6c63430008080033",
  "bytecodeSha1": "5d291b5c8d9fe2ed229b70d47250a1d430c89559",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.8+commit.dddeac2f"
  },
  "contractName": "ChainEstateToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "140": [
            2006,
            2028,
            true
          ]
        }
      },
      "11": {},
      "2": {
        "ERC20._approve": {
          "130": [
            10254,
            10273,
            true
          ],
          "131": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._burn": {
          "138": [
            9207,
            9228,
            true
          ],
          "139": [
            9398,
            9422,
            true
          ]
        },
        "ERC20._mint": {
          "137": [
            8498,
            8519,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "132": [
            10966,
            11003,
            false
          ],
          "133": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "134": [
            7614,
            7632,
            true
          ],
          "135": [
            7692,
            7708,
            true
          ],
          "136": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "129": [
            6815,
            6850,
            true
          ]
        }
      },
      "21": {
        "ChainEstateToken._afterTokenTransfer": {
          "128": [
            15204,
            15220,
            false
          ]
        },
        "ChainEstateToken.burn": {
          "115": [
            18430,
            18451,
            true
          ]
        },
        "ChainEstateToken.mint": {
          "110": [
            18062,
            18083,
            true
          ]
        },
        "ChainEstateToken.setAirDropInvestTime": {
          "113": [
            18928,
            18967,
            true
          ]
        },
        "ChainEstateToken.swapCHESForBNBManually": {
          "112": [
            14078,
            14087,
            false
          ]
        },
        "ChainEstateToken.transfer": {
          "116": [
            7017,
            7041,
            true
          ],
          "117": [
            7242,
            7263,
            true
          ],
          "118": [
            7559,
            7586,
            false
          ],
          "119": [
            7591,
            7621,
            false
          ],
          "120": [
            7626,
            7653,
            false
          ],
          "121": [
            7677,
            7732,
            true
          ],
          "122": [
            7931,
            7961,
            true
          ],
          "123": [
            7965,
            7992,
            false
          ],
          "124": [
            8765,
            8792,
            false
          ],
          "125": [
            8812,
            8878,
            false
          ],
          "126": [
            9046,
            9068,
            false
          ]
        },
        "ChainEstateToken.transferFrom": {
          "101": [
            9849,
            9873,
            true
          ],
          "102": [
            10105,
            10121,
            true
          ],
          "103": [
            10368,
            10382,
            true
          ],
          "104": [
            10671,
            10693,
            true
          ],
          "105": [
            10697,
            10717,
            true
          ],
          "106": [
            10721,
            10751,
            false
          ],
          "107": [
            11611,
            11638,
            false
          ],
          "108": [
            11658,
            11724,
            false
          ],
          "109": [
            11892,
            11914,
            false
          ]
        },
        "ChainEstateToken.updateDeveloperTransactionFee": {
          "127": [
            17184,
            17215,
            true
          ]
        },
        "ChainEstateToken.updateMarketingTransactionFee": {
          "111": [
            16662,
            16693,
            true
          ]
        },
        "ChainEstateToken.updateRealEstateTransactionFee": {
          "114": [
            16120,
            16153,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "42": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "91": [
            2378,
            2395
          ],
          "92": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "4": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "33": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "62": [
            1998,
            2071
          ],
          "63": [
            2081,
            2109
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "66": [
            10246,
            10314
          ],
          "67": [
            10324,
            10392
          ],
          "68": [
            10403,
            10439
          ],
          "69": [
            10449,
            10486
          ]
        },
        "ERC20._burn": {
          "93": [
            9199,
            9266
          ],
          "94": [
            9390,
            9461
          ],
          "95": [
            9495,
            9539
          ],
          "96": [
            9559,
            9581
          ],
          "97": [
            9592,
            9634
          ],
          "98": [
            9645,
            9693
          ]
        },
        "ERC20._mint": {
          "86": [
            8490,
            8555
          ],
          "87": [
            8626,
            8648
          ],
          "88": [
            8658,
            8686
          ],
          "89": [
            8696,
            8738
          ],
          "90": [
            8749,
            8797
          ]
        },
        "ERC20._spendAllowance": {
          "70": [
            11019,
            11087
          ],
          "71": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "72": [
            7606,
            7674
          ],
          "73": [
            7684,
            7748
          ],
          "74": [
            7855,
            7927
          ],
          "75": [
            7961,
            7999
          ],
          "76": [
            8019,
            8042
          ],
          "77": [
            8053,
            8084
          ],
          "78": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "5": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "8": [
            4570,
            4602
          ],
          "9": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "32": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "44": [
            6807,
            6892
          ],
          "45": [
            6926,
            6986
          ],
          "46": [
            7007,
            7018
          ]
        },
        "ERC20.increaseAllowance": {
          "22": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "6": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "41": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        }
      },
      "21": {
        "ChainEstateToken._afterTokenTransfer": {
          "99": [
            15236,
            15347
          ],
          "100": [
            15368,
            15410
          ]
        },
        "ChainEstateToken.burn": {
          "42": [
            18422,
            18499
          ],
          "43": [
            18509,
            18528
          ]
        },
        "ChainEstateToken.disperseFeesManually": {
          "40": [
            13592,
            13629
          ]
        },
        "ChainEstateToken.excludeUserFromFees": {
          "36": [
            6057,
            6086
          ]
        },
        "ChainEstateToken.getContractAddress": {
          "2": [
            5825,
            5845
          ]
        },
        "ChainEstateToken.getCurrentTimestamp": {
          "3": [
            6310,
            6332
          ]
        },
        "ChainEstateToken.includeUsersInFees": {
          "58": [
            6562,
            6592
          ]
        },
        "ChainEstateToken.mint": {
          "23": [
            18054,
            18131
          ],
          "24": [
            18141,
            18160
          ]
        },
        "ChainEstateToken.sendFeesToWallets": {
          "83": [
            13061,
            13148
          ],
          "84": [
            13158,
            13232
          ],
          "85": [
            13242,
            13316
          ]
        },
        "ChainEstateToken.setAirDropInvestTime": {
          "34": [
            18920,
            19025
          ],
          "35": [
            19035,
            19081
          ]
        },
        "ChainEstateToken.setContractCHESDivisor": {
          "64": [
            14727,
            14759
          ]
        },
        "ChainEstateToken.setTokenClaimContractAddress": {
          "57": [
            19337,
            19382
          ]
        },
        "ChainEstateToken.swapCHESForBNB": {
          "79": [
            12430,
            12453
          ],
          "80": [
            12463,
            12493
          ],
          "81": [
            12503,
            12558
          ],
          "82": [
            12568,
            12751
          ]
        },
        "ChainEstateToken.swapCHESForBNBManually": {
          "29": [
            14103,
            14125
          ],
          "30": [
            14232,
            14267
          ],
          "31": [
            14348,
            14385
          ]
        },
        "ChainEstateToken.transfer": {
          "47": [
            7009,
            7173
          ],
          "48": [
            7234,
            7433
          ],
          "49": [
            7669,
            7815
          ],
          "50": [
            8008,
            8050
          ],
          "51": [
            8064,
            8075
          ],
          "52": [
            8637,
            8685
          ],
          "53": [
            8898,
            8933
          ],
          "54": [
            9088,
            9128
          ],
          "55": [
            9276,
            9326
          ],
          "56": [
            9336,
            9347
          ]
        },
        "ChainEstateToken.transferFrom": {
          "10": [
            9841,
            10005
          ],
          "11": [
            10097,
            10299
          ],
          "12": [
            10360,
            10554
          ],
          "13": [
            10767,
            10810
          ],
          "14": [
            10824,
            10851
          ],
          "15": [
            10865,
            10876
          ],
          "16": [
            11438,
            11481
          ],
          "17": [
            11491,
            11531
          ],
          "18": [
            11744,
            11779
          ],
          "19": [
            11934,
            11974
          ],
          "20": [
            12122,
            12157
          ],
          "21": [
            12167,
            12178
          ]
        },
        "ChainEstateToken.updateBlackList": {
          "65": [
            15780,
            15809
          ]
        },
        "ChainEstateToken.updateDeveloperTransactionFee": {
          "59": [
            17176,
            17272
          ],
          "60": [
            17282,
            17330
          ],
          "61": [
            17340,
            17403
          ]
        },
        "ChainEstateToken.updateMarketingTransactionFee": {
          "26": [
            16654,
            16750
          ],
          "27": [
            16760,
            16808
          ],
          "28": [
            16818,
            16881
          ]
        },
        "ChainEstateToken.updateMinter": {
          "25": [
            17742,
            17766
          ]
        },
        "ChainEstateToken.updateRealEstateTransactionFee": {
          "37": [
            16112,
            16213
          ],
          "38": [
            16223,
            16284
          ],
          "39": [
            16294,
            16359
          ]
        }
      },
      "3": {},
      "4": {},
      "42": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IUniswapV2Factory",
    "IUniswapV2Router02",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "457:18934:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:2;;;;;:::i;:::-;;:::i;:::-;;;1237:14:43;;1230:22;1212:41;;1200:2;1185:18;4433:197:2;1072:187:43;825:53:21;;;;;;;;;;-1:-1:-1;825:53:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1662:25:43;;;1650:2;1635:18;825:53:21;1516:177:43;3244:106:2;;;;;;;;;;-1:-1:-1;3331:12:2;;3244:106;;1254:37:21;;;;;;;;;;-1:-1:-1;1254:37:21;;;;-1:-1:-1;;;;;1254:37:21;;;;;;-1:-1:-1;;;;;1862:32:43;;;1844:51;;1832:2;1817:18;1254:37:21;1698:203:43;2043:35:21;;;;;;;;;;-1:-1:-1;2043:35:21;;;;-1:-1:-1;;;;;2043:35:21;;;9688:2497;;;;;;;;;;-1:-1:-1;9688:2497:21;;;;;:::i;:::-;;:::i;2143:31::-;;;;;;;;;;;;;;;;3093:91:2;;;;;;;;;;-1:-1:-1;3093:91:2;;3175:2;2509:36:43;;2497:2;2482:18;3093:91:2;2367:184:43;5756:96:21;;;;;;;;;;-1:-1:-1;5840:4:21;5756:96;;5873:236:2;;;;;;;;;;-1:-1:-1;5873:236:2;;;;;:::i;:::-;;:::i;17993:174:21:-;;;;;;;;;;-1:-1:-1;17993:174:21;;;;;:::i;:::-;;:::i;:::-;;17664:109;;;;;;;;;;-1:-1:-1;17664:109:21;;;;;:::i;:::-;;:::i;2347:38::-;;;;;;;;;;;;;;;;1474:46;;;;;;;;;;-1:-1:-1;1474:46:21;;;;-1:-1:-1;;;;;1474:46:21;;;1354:32;;;;;;;;;;-1:-1:-1;1354:32:21;;;;-1:-1:-1;;;;;1354:32:21;;;16552:336;;;;;;;;;;-1:-1:-1;16552:336:21;;;;;:::i;:::-;;:::i;1918:45::-;;;;;;;;;;-1:-1:-1;1918:45:21;;;;-1:-1:-1;;;;;1918:45:21;;;13983:409;;;;;;;;;;-1:-1:-1;13983:409:21;;;;;:::i;:::-;;:::i;6239:100::-;;;;;;;;;;-1:-1:-1;6317:15:21;6239:100;;2234:50;;;;;;;;;;;;;;;;3408:125:2;;;;;;;;;;-1:-1:-1;3408:125:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;18829:259:21:-;;;;;;;;;;-1:-1:-1;18829:259:21;;;;;:::i;:::-;;:::i;5987:106::-;;;;;;;;;;-1:-1:-1;5987:106:21;;;;;:::i;:::-;;:::i;16008:358::-;;;;;;;;;;-1:-1:-1;16008:358:21;;;;;:::i;:::-;;:::i;13473:163::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;1703:37:21;;;;;;;;;;-1:-1:-1;1703:37:21;;;;-1:-1:-1;;;;;1703:37:21;;;2367:102:2;;;;;;;;;;;;;:::i;18361:174:21:-;;;;;;;;;;-1:-1:-1;18361:174:21;;;;;:::i;:::-;;:::i;6596:429:2:-;;;;;;;;;;-1:-1:-1;6596:429:2;;;;;:::i;:::-;;:::i;6867:2487:21:-;;;;;;;;;;-1:-1:-1;6867:2487:21;;;;;:::i;:::-;;:::i;19245:144::-;;;;;;;;;;-1:-1:-1;19245:144:21;;;;;:::i;:::-;;:::i;2711:40::-;;;;;;;;;;-1:-1:-1;2711:40:21;;;;-1:-1:-1;;;;;2711:40:21;;;6493:106;;;;;;;;;;-1:-1:-1;6493:106:21;;;;;:::i;:::-;;:::i;2634:26::-;;;;;;;;;;-1:-1:-1;2634:26:21;;;;-1:-1:-1;;;;;2634:26:21;;;1807:45;;;;;;;;;;-1:-1:-1;1807:45:21;;;;-1:-1:-1;;;;;1807:45:21;;;2443:38;;;;;;;;;;;;;;;;644:49;;;;;;;;;;-1:-1:-1;644:49:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;3976:149:2;;;;;;;;;;-1:-1:-1;3976:149:2;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;17074:336:21;;;;;;;;;;-1:-1:-1;17074:336:21;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;14648:118:21:-;;;;;;;;;;-1:-1:-1;14648:118:21;;;;;:::i;:::-;;:::i;1132:40::-;;;;;;;;;;-1:-1:-1;1132:40:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;2862:41;;;;;;;;;;;;;;;;996:42;;;;;;;;;;-1:-1:-1;996:42:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;15696:120;;;;;;;;;;-1:-1:-1;15696:120:21;;;;;:::i;:::-;;:::i;2156:98:2:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:11;4570:32:2;719:10:11;4586:7:2;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;9688:2497:21:-;719:10:11;9777:4:21;9850:23;;;:9;:23;;;;;;;;9849:24;9841:164;;;;-1:-1:-1;;;9841:164:21;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;10106:15:21;;;;;;:9;:15;;;;;;;;10105:16;10097:202;;;;-1:-1:-1;;;10097:202:21;;5260:2:43;10097:202:21;;;5242:21:43;5299:3;5279:18;;;5272:31;5339:34;5319:18;;;5312:62;5410:34;5390:18;;;5383:62;5482:34;5461:19;;;5454:63;5554:34;5533:19;;;5526:63;5626:34;5605:19;;;5598:63;-1:-1:-1;;;5677:19:43;;;5670:44;5731:19;;10097:202:21;5058:698:43;10097:202:21;-1:-1:-1;;;;;10369:13:21;;;;;;:9;:13;;;;;;;;10368:14;10360:194;;;;-1:-1:-1;;;10360:194:21;;5963:2:43;10360:194:21;;;5945:21:43;6002:3;5982:18;;;5975:31;6042:34;6022:18;;;6015:62;6113:34;6093:18;;;6086:62;6185:34;6164:19;;;6157:63;6257:34;6236:19;;;6229:63;6329:34;6308:19;;;6301:63;-1:-1:-1;;;6380:19:43;;;6373:38;6428:19;;10360:194:21;5761:692:43;10360:194:21;-1:-1:-1;;;;;10671:22:21;;;;;;:16;:22;;;;;;;;;:46;;-1:-1:-1;;;;;;10697:20:21;;;;;;:16;:20;;;;;;;;10671:46;:80;;;-1:-1:-1;719:10:11;10721:30:21;;;;:16;:30;;;;;;;;10671:80;10667:220;;;10767:43;10783:4;719:10:11;10803:6:21;10767:15;:43::i;:::-;10824:27;10834:4;10840:2;10844:6;10824:9;:27::i;:::-;-1:-1:-1;10872:4:21;10865:11;;10667:220;10937:21;11006:3;10971:31;;10962:6;:40;;;;:::i;:::-;10961:48;;;;:::i;:::-;10937:72;;11062:20;11118:3;11095:19;;11086:6;:28;;;;:::i;:::-;11085:36;;;;:::i;:::-;11062:59;;11174:20;11230:3;11207:19;;11198:6;:28;;;;:::i;:::-;11197:36;;;;:::i;:::-;11174:59;-1:-1:-1;11302:16:21;11174:59;11321:28;11337:12;11321:13;:28;:::i;:::-;:43;;;;:::i;:::-;11302:62;-1:-1:-1;11438:43:21;11454:4;719:10:11;11474:6:21;11438:15;:43::i;:::-;11491:40;11501:4;11515;11522:8;11491:9;:40::i;:::-;11542:27;11572:24;11590:4;11572:9;:24::i;:::-;11627:11;;11542:54;;-1:-1:-1;;;;;;11627:11:21;719:10:11;-1:-1:-1;;;;;11611:27:21;;11607:392;;11705:19;;11690:11;;11680:22;;-1:-1:-1;;;;;11690:11:21;11680:9;:22::i;:::-;:44;;;;:::i;:::-;11658:19;:66;11654:140;;;11744:35;11759:19;11744:14;:35::i;:::-;11853:21;11892:22;;11888:101;;11934:40;11952:21;11934:17;:40::i;:::-;11640:359;11607:392;12070:22;12095:17;12104:8;12095:6;:17;:::i;:::-;12070:42;;12122:35;12132:4;12138:2;12142:14;12122:9;:35::i;:::-;12174:4;12167:11;;;;;;;;9688:2497;;;;;;:::o;5873:236:2:-;719:10:11;5961:4:2;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:2;;;;;;;;;;5961:4;;719:10:11;6015:66:2;;719:10:11;;6040:27:2;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;17993:174:21:-;719:10:11;18062:21:21;;;;:7;:21;;;;;;;;18054:77;;;;-1:-1:-1;;;18054:77:21;;7450:2:43;18054:77:21;;;7432:21:43;7489:2;7469:18;;;7462:30;7528:34;7508:18;;;7501:62;-1:-1:-1;;;7579:18:43;;;7572:41;7630:19;;18054:77:21;7248:407:43;18054:77:21;18141:19;18147:4;18153:6;18141:5;:19::i;:::-;17993:174;;:::o;17664:109::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;17742:13:21;;;::::1;;::::0;;;:7:::1;:13;::::0;;;;:24;;-1:-1:-1;;17742:24:21::1;::::0;::::1;;::::0;;;::::1;::::0;;17664:109::o;16552:336::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16692:1:21::1;16662:26;:31;;16654:96;;;::::0;-1:-1:-1;;;16654:96:21;;8223:2:43;16654:96:21::1;::::0;::::1;8205:21:43::0;8262:2;8242:18;;;8235:30;8301:34;8281:18;;;8274:62;-1:-1:-1;;;8352:18:43;;;8345:50;8412:19;;16654:96:21::1;8021:416:43::0;16654:96:21::1;16760:19;:48:::0;;;16823:58:::1;::::0;16782:26;;16823:58:::1;::::0;;;::::1;16552:336:::0;:::o;13983:409::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14078:9:21::1;14074:204;;;14103:22;14118:6;14103:14;:22::i;:::-;14074:204;;;14164:27;14194:24;14212:4;14194:9;:24::i;:::-;14164:54;;14232:35;14247:19;14232:14;:35::i;:::-;14150:128;14074:204;14317:21;14348:37;14317:21:::0;14348:17:::1;:37::i;:::-;14064:328;13983:409:::0;;:::o;3408:125:2:-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;18829:259:21:-;18942:25;;-1:-1:-1;;;;;18942:25:21;18928:10;:39;18920:105;;;;-1:-1:-1;;;18920:105:21;;8644:2:43;18920:105:21;;;8626:21:43;8683:2;8663:18;;;8656:30;8722:34;8702:18;;;8695:62;-1:-1:-1;;;8773:18:43;;;8766:51;8834:19;;18920:105:21;8442:417:43;18920:105:21;-1:-1:-1;;;;;19035:23:21;;;;;;;:17;:23;;;;;:46;18829:259::o;5987:106::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6057:22:21::1;;::::0;;;:16:::1;:22;::::0;;;;:29;;-1:-1:-1;;6057:29:21::1;6082:4;6057:29;::::0;;5987:106::o;16008:358::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;16151:2:21::1;16120:27;:33;;16112:101;;;::::0;-1:-1:-1;;;16112:101:21;;9066:2:43;16112:101:21::1;::::0;::::1;9048:21:43::0;9105:2;9085:18;;;9078:30;9144:34;9124:18;;;9117:62;9215:25;9195:18;;;9188:53;9258:19;;16112:101:21::1;8864:419:43::0;16112:101:21::1;16223:31;:61:::0;;;16299:60:::1;::::0;16257:27;;16299:60:::1;::::0;;;::::1;16008:358:::0;:::o;13473:163::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13561:21:21::1;13592:37;13561:21:::0;13592:17:::1;:37::i;:::-;13522:114;13473:163::o:0;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;18361:174:21:-;719:10:11;18430:21:21;;;;:7;:21;;;;;;;;18422:77;;;;-1:-1:-1;;;18422:77:21;;9490:2:43;18422:77:21;;;9472:21:43;9529:2;9509:18;;;9502:30;9568:34;9548:18;;;9541:62;-1:-1:-1;;;9619:18:43;;;9612:41;9670:19;;18422:77:21;9288:407:43;18422:77:21;18509:19;18515:4;18521:6;18509:5;:19::i;6596:429:2:-;719:10:11;6689:4:2;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:2;;;;;;;;;;6689:4;;719:10:11;6815:35:2;;;;6807:85;;;;-1:-1:-1;;;6807:85:2;;9902:2:43;6807:85:2;;;9884:21:43;9941:2;9921:18;;;9914:30;9980:34;9960:18;;;9953:62;-1:-1:-1;;;10031:18:43;;;10024:35;10076:19;;6807:85:2;9700:401:43;6807:85:2;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;-1:-1:-1;7014:4:2;;6596:429;-1:-1:-1;;;;6596:429:2:o;6867:2487:21:-;719:10:11;6945:4:21;7018:23;;;:9;:23;;;;;;;;7017:24;7009:164;;;;-1:-1:-1;;;7009:164:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;7243:20:21;;;;;;:9;:20;;;;;;;;7242:21;7234:199;;;;-1:-1:-1;;;7234:199:21;;10308:2:43;7234:199:21;;;10290:21:43;10347:3;10327:18;;;10320:31;10387:34;10367:18;;;10360:62;10458:34;10438:18;;;10431:62;10530:34;10509:19;;;10502:63;10602:34;10581:19;;;10574:63;10674:34;10653:19;;;10646:63;-1:-1:-1;;;10725:19:43;;;10718:36;10771:19;;7234:199:21;10106:690:43;7234:199:21;7575:11;;-1:-1:-1;;;;;7575:11:21;719:10:11;-1:-1:-1;;;;;7559:27:21;;:62;;;;-1:-1:-1;719:10:11;7591:30:21;;;;:16;:30;;;;;;;;7590:31;7559:62;:94;;;;-1:-1:-1;;;;;;7626:27:21;;;;;;:16;:27;;;;;;;;7625:28;7559:94;7555:271;;;7728:3;7712:13;3331:12:2;;;3244:106;7712:13:21;:19;;;;:::i;:::-;7701:6;7678:20;7688:9;7678;:20::i;:::-;:29;;;;:::i;:::-;7677:55;7669:146;;;;-1:-1:-1;;;7669:146:21;;11003:2:43;7669:146:21;;;10985:21:43;11042:2;11022:18;;;11015:30;11081:34;11061:18;;;11054:62;11152:34;11132:18;;;11125:62;-1:-1:-1;;;11203:19:43;;;11196:45;11258:19;;7669:146:21;10801:482:43;7669:146:21;719:10:11;7931:30:21;;;;:16;:30;;;;;;;;;:61;;-1:-1:-1;;;;;;7965:27:21;;;;;;:16;:27;;;;;;;;7931:61;7927:159;;;8008:42;719:10:11;8032:9:21;8043:6;8008:9;:42::i;:::-;-1:-1:-1;8071:4:21;8064:11;;7927:159;8136:21;8205:3;8170:31;;8161:6;:40;;;;:::i;:::-;8160:48;;;;:::i;:::-;8136:72;;8261:20;8317:3;8294:19;;8285:6;:28;;;;:::i;:::-;8284:36;;;;:::i;:::-;8261:59;;8373:20;8429:3;8406:19;;8397:6;:28;;;;:::i;:::-;8396:36;;;;:::i;:::-;8373:59;-1:-1:-1;8501:16:21;8373:59;8520:28;8536:12;8520:13;:28;:::i;:::-;:43;;;;:::i;:::-;8501:62;-1:-1:-1;8637:48:21;719:10:11;8669:4:21;8676:8;8637:9;:48::i;:::-;8696:27;8726:24;8744:4;8726:9;:24::i;:::-;8781:11;;8696:54;;-1:-1:-1;;;;;;8781:11:21;719:10:11;-1:-1:-1;;;;;8765:27:21;;8761:392;;8859:19;;8844:11;;8834:22;;-1:-1:-1;;;;;8844:11:21;8834:9;:22::i;:::-;:44;;;;:::i;:::-;8812:19;:66;8808:140;;;8898:35;8913:19;8898:14;:35::i;:::-;9007:21;9046:22;;9042:101;;9088:40;9106:21;9088:17;:40::i;:::-;8794:359;8761:392;9224:22;9249:17;9258:8;9249:6;:17;:::i;:::-;9224:42;-1:-1:-1;9276:50:21;719:10:11;9300:9:21;9311:14;9276:9;:50::i;:::-;-1:-1:-1;9343:4:21;;6867:2487;-1:-1:-1;;;;;;;;6867:2487:21:o;19245:144::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;19337:25:21::1;:45:::0;;-1:-1:-1;;;;;;19337:45:21::1;-1:-1:-1::0;;;;;19337:45:21;;;::::1;::::0;;;::::1;::::0;;19245:144::o;6493:106::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6562:22:21::1;6587:5;6562:22:::0;;;:16:::1;:22;::::0;;;;:30;;-1:-1:-1;;6562:30:21::1;::::0;;6493:106::o;17074:336::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;17214:1:21::1;17184:26;:31;;17176:96;;;::::0;-1:-1:-1;;;17176:96:21;;11490:2:43;17176:96:21::1;::::0;::::1;11472:21:43::0;11529:2;11509:18;;;11502:30;11568:34;11548:18;;;11541:62;-1:-1:-1;;;11619:18:43;;;11612:50;11679:19;;17176:96:21::1;11288:416:43::0;17176:96:21::1;17282:19;:48:::0;;;17345:58:::1;::::0;17304:26;;17345:58:::1;::::0;;;::::1;17074:336:::0;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11911:2:43;1998:73:0::1;::::0;::::1;11893:21:43::0;11950:2;11930:18;;;11923:30;11989:34;11969:18;;;11962:62;-1:-1:-1;;;12040:18:43;;;12033:36;12086:19;;1998:73:0::1;11709:402:43::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;14648:118:21:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14727:19:21::1;:32:::0;14648:118::o;15696:120::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;15780:15:21;;;::::1;;::::0;;;:9:::1;:15;::::0;;;;:29;;-1:-1:-1;;15780:29:21::1;::::0;::::1;;::::0;;;::::1;::::0;;15696:120::o;10123:370:2:-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;12318:2:43;10246:68:2;;;12300:21:43;12357:2;12337:18;;;12330:30;12396:34;12376:18;;;12369:62;-1:-1:-1;;;12447:18:43;;;12440:34;12491:19;;10246:68:2;12116:400:43;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;12723:2:43;10324:68:2;;;12705:21:43;12762:2;12742:18;;;12735:30;12801:34;12781:18;;;12774:62;-1:-1:-1;;;12852:18:43;;;12845:32;12894:19;;10324:68:2;12521:398:43;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1662:25:43;;;10454:32:2;;1635:18:43;10454:32:2;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:2;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:2;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:2;;13126:2:43;11019:68:2;;;13108:21:43;13165:2;13145:18;;;13138:30;13204:31;13184:18;;;13177:59;13253:18;;11019:68:2;12924:353:43;11019:68:2;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:2;;7606:68;;;;-1:-1:-1;;;7606:68:2;;13484:2:43;7606:68:2;;;13466:21:43;13523:2;13503:18;;;13496:30;13562:34;13542:18;;;13535:62;-1:-1:-1;;;13613:18:43;;;13606:35;13658:19;;7606:68:2;13282:401:43;7606:68:2;-1:-1:-1;;;;;7692:16:2;;7684:64;;;;-1:-1:-1;;;7684:64:2;;13890:2:43;7684:64:2;;;13872:21:43;13929:2;13909:18;;;13902:30;13968:34;13948:18;;;13941:62;-1:-1:-1;;;14019:18:43;;;14012:33;14062:19;;7684:64:2;13688:399:43;7684:64:2;-1:-1:-1;;;;;7830:15:2;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:2;;14294:2:43;7855:72:2;;;14276:21:43;14333:2;14313:18;;;14306:30;14372:34;14352:18;;;14345:62;-1:-1:-1;;;14423:18:43;;;14416:36;14469:19;;7855:72:2;14092:402:43;7855:72:2;-1:-1:-1;;;;;7961:15:2;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:2;8067:4;-1:-1:-1;;;;;8058:26:2;;8077:6;8058:26;;;;1662:25:43;;1650:2;1635:18;;1516:177;8058:26:2;;;;;;;;8095:37;8115:4;8121:2;8125:6;8095:19;:37::i;12322:436:21:-;12404:16;;;12418:1;12404:16;;;;;;;;12380:21;;12404:16;;;;;;;;;;-1:-1:-1;12404:16:21;12380:40;;12448:4;12430;12435:1;12430:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12430:23:21;;;:7;;;;;;;;;;:23;;;;12473:13;;:20;;;-1:-1:-1;;;12473:20:21;;;;:13;;;;;:18;;:20;;;;;12430:7;;12473:20;;;;;:13;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12463:4;12468:1;12463:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12463:30:21;;;:7;;;;;;;;;:30;12535:13;;12503:55;;12520:4;;12535:13;12551:6;12503:8;:55::i;:::-;12568:13;;:183;;-1:-1:-1;;;12568:183:21;;-1:-1:-1;;;;;12568:13:21;;;;:64;;:183;;12646:6;;12568:13;;12681:4;;12707;;12726:15;;12568:183;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12370:388;12322:436;:::o;12896:427::-;12957:16;13032:19;;13010;;12976:31;;:53;;;;:::i;:::-;:75;;;;:::i;:::-;13061:23;;13104:31;;12957:94;;-1:-1:-1;;;;;;13061:23:21;;:87;;12957:94;;13095:40;;:6;:40;:::i;:::-;13094:53;;;;:::i;:::-;13061:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13158:22:21;;13200:19;;-1:-1:-1;;;;;13158:22:21;;;;:74;;13223:8;;13191:28;;:6;:28;:::i;:::-;13190:41;;;;:::i;:::-;13158:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13242:22:21;;13284:19;;-1:-1:-1;;;;;13242:22:21;;;;:74;;13307:8;;13275:28;;:6;:28;:::i;:::-;13274:41;;;;:::i;:::-;13242:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:389:2;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;16206:2:43;8490:65:2;;;16188:21:43;16245:2;16225:18;;;16218:30;16284:33;16264:18;;;16257:61;16335:18;;8490:65:2;16004:355:43;8490:65:2;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;1662:25:43;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;1650:2:43;1635:18;8701:37:2;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;:48::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;9124:576:2:-;-1:-1:-1;;;;;9207:21:2;;9199:67;;;;-1:-1:-1;;;9199:67:2;;16566:2:43;9199:67:2;;;16548:21:43;16605:2;16585:18;;;16578:30;16644:34;16624:18;;;16617:62;-1:-1:-1;;;16695:18:43;;;16688:31;16736:19;;9199:67:2;16364:397:43;9199:67:2;-1:-1:-1;;;;;9362:18:2;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:2;;16968:2:43;9390:71:2;;;16950:21:43;17007:2;16987:18;;;16980:30;17046:34;17026:18;;;17019:62;-1:-1:-1;;;17097:18:43;;;17090:32;17139:19;;9390:71:2;16766:398:43;9390:71:2;-1:-1:-1;;;;;9495:18:2;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:2;;1662:25:43;;;9623:1:2;;-1:-1:-1;;;;;9597:37:2;;;;;1650:2:43;1635:18;9597:37:2;;;;;;;9645:48;9665:7;9682:1;9686:6;15049:368:21;15155:19;15177:13;15187:2;15177:9;:13::i;:::-;15155:35;-1:-1:-1;;;;;;15204:16:21;;;15200:158;;-1:-1:-1;;;;;15311:21:21;;;;;;:17;:21;;;;;;15336:11;;15288:19;15302:5;15336:11;15288:19;:::i;:::-;15287:45;;;;:::i;:::-;15261:23;15269:15;15261:5;:23;:::i;:::-;:71;;;;:::i;:::-;15260:87;;;;:::i;:::-;-1:-1:-1;;;;;15236:21:21;;;;;;:17;:21;;;;;:111;15200:158;15368:42;13983:409;14:597:43;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:43;574:15;-1:-1:-1;;570:29:43;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:43:o;616:131::-;-1:-1:-1;;;;;691:31:43;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:43:o;1264:247::-;1323:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:52;;;1392:1;1389;1382:12;1344:52;1431:9;1418:23;1450:31;1475:5;1450:31;:::i;1906:456::-;1983:6;1991;1999;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2107:9;2094:23;2126:31;2151:5;2126:31;:::i;:::-;2176:5;-1:-1:-1;2233:2:43;2218:18;;2205:32;2246:33;2205:32;2246:33;:::i;:::-;1906:456;;2298:7;;-1:-1:-1;;;2352:2:43;2337:18;;;;2324:32;;1906:456::o;2556:160::-;2621:20;;2677:13;;2670:21;2660:32;;2650:60;;2706:1;2703;2696:12;2650:60;2556:160;;;:::o;2721:315::-;2786:6;2794;2847:2;2835:9;2826:7;2822:23;2818:32;2815:52;;;2863:1;2860;2853:12;2815:52;2902:9;2889:23;2921:31;2946:5;2921:31;:::i;:::-;2971:5;-1:-1:-1;2995:35:43;3026:2;3011:18;;2995:35;:::i;:::-;2985:45;;2721:315;;;;;:::o;3265:180::-;3324:6;3377:2;3365:9;3356:7;3352:23;3348:32;3345:52;;;3393:1;3390;3383:12;3345:52;-1:-1:-1;3416:23:43;;3265:180;-1:-1:-1;3265:180:43:o;3450:248::-;3515:6;3523;3576:2;3564:9;3555:7;3551:23;3547:32;3544:52;;;3592:1;3589;3582:12;3544:52;3628:9;3615:23;3605:33;;3657:35;3688:2;3677:9;3673:18;3657:35;:::i;3703:388::-;3771:6;3779;3832:2;3820:9;3811:7;3807:23;3803:32;3800:52;;;3848:1;3845;3838:12;3800:52;3887:9;3874:23;3906:31;3931:5;3906:31;:::i;:::-;3956:5;-1:-1:-1;4013:2:43;3998:18;;3985:32;4026:33;3985:32;4026:33;:::i;:::-;4078:7;4068:17;;;3703:388;;;;;:::o;4096:380::-;4175:1;4171:12;;;;4218;;;4239:61;;4293:4;4285:6;4281:17;4271:27;;4239:61;4346:2;4338:6;4335:14;4315:18;4312:38;4309:161;;;4392:10;4387:3;4383:20;4380:1;4373:31;4427:4;4424:1;4417:15;4455:4;4452:1;4445:15;4309:161;;4096:380;;;:::o;4481:572::-;4683:2;4665:21;;;4722:3;4702:18;;;4695:31;4762:34;4757:2;4742:18;;4735:62;4833:34;4828:2;4813:18;;4806:62;4905:34;4899:3;4884:19;;4877:63;4977:33;4971:3;4956:19;;4949:62;5043:3;5028:19;;4481:572::o;6458:127::-;6519:10;6514:3;6510:20;6507:1;6500:31;6550:4;6547:1;6540:15;6574:4;6571:1;6564:15;6590:168;6630:7;6696:1;6692;6688:6;6684:14;6681:1;6678:21;6673:1;6666:9;6659:17;6655:45;6652:71;;;6703:18;;:::i;:::-;-1:-1:-1;6743:9:43;;6590:168::o;6763:217::-;6803:1;6829;6819:132;;6873:10;6868:3;6864:20;6861:1;6854:31;6908:4;6905:1;6898:15;6936:4;6933:1;6926:15;6819:132;-1:-1:-1;6965:9:43;;6763:217::o;6985:128::-;7025:3;7056:1;7052:6;7049:1;7046:13;7043:39;;;7062:18;;:::i;:::-;-1:-1:-1;7098:9:43;;6985:128::o;7118:125::-;7158:4;7186:1;7183;7180:8;7177:34;;;7191:18;;:::i;:::-;-1:-1:-1;7228:9:43;;7118:125::o;7660:356::-;7862:2;7844:21;;;7881:18;;;7874:30;7940:34;7935:2;7920:18;;7913:62;8007:2;7992:18;;7660:356::o;14631:127::-;14692:10;14687:3;14683:20;14680:1;14673:31;14723:4;14720:1;14713:15;14747:4;14744:1;14737:15;14763:251;14833:6;14886:2;14874:9;14865:7;14861:23;14857:32;14854:52;;;14902:1;14899;14892:12;14854:52;14934:9;14928:16;14953:31;14978:5;14953:31;:::i;15019:980::-;15281:4;15329:3;15318:9;15314:19;15360:6;15349:9;15342:25;15386:2;15424:6;15419:2;15408:9;15404:18;15397:34;15467:3;15462:2;15451:9;15447:18;15440:31;15491:6;15526;15520:13;15557:6;15549;15542:22;15595:3;15584:9;15580:19;15573:26;;15634:2;15626:6;15622:15;15608:29;;15655:1;15665:195;15679:6;15676:1;15673:13;15665:195;;;15744:13;;-1:-1:-1;;;;;15740:39:43;15728:52;;15835:15;;;;15800:12;;;;15776:1;15694:9;15665:195;;;-1:-1:-1;;;;;;;15916:32:43;;;;15911:2;15896:18;;15889:60;-1:-1:-1;;;15980:3:43;15965:19;15958:35;15877:3;15019:980;-1:-1:-1;;;15019:980:43:o",
  "language": "Solidity",
  "natspec": {
    "details": "Main contract for Chain Estate DAO TODO - Limit how many tokens users can purchase from PancakeSwap TODO - Will possibly create the BNB to CHES token PankcakeSwap pair in the constructor.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "details": "Minter only function to burn CHES tokens for bridging",
        "params": {
          "amount": "the amount of tokens to be burned",
          "user": "the address to burn the tokens from"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "disperseFeesManually()": {
        "details": "Sends BNB to transaction fee wallets manually as opposed to happening automatically after a certain level of volume"
      },
      "excludeUserFromFees(address)": {
        "details": "Adds a user to be excluded from fees.",
        "params": {
          "user": "address of the user to be excluded from fees."
        }
      },
      "getContractAddress()": {
        "details": "Returns the contract address",
        "returns": {
          "_0": "contract address"
        }
      },
      "getCurrentTimestamp()": {
        "details": "Gets the current timestamp, used for testing + verification",
        "returns": {
          "_0": "the the timestamp of the current block"
        }
      },
      "includeUsersInFees(address)": {
        "details": "Removes a user from the fee exclusion.",
        "params": {
          "user": "address of the user than will now have to pay transaction fees."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Minter only function to mint new CHES tokens for bridging",
        "params": {
          "amount": "the amount of tokens to be minted to the user",
          "user": "the address that the tokens will be minted to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAirDropInvestTime(address,uint256)": {
        "details": "Function that only the token claim contract can call to set the airdrop invest time for a user when claiming their V2 tokens.",
        "params": {
          "airDropInvestTimeVal": "the airdrop invest time for the user",
          "user": "the address to set the airdrop invest time for"
        }
      },
      "setContractCHESDivisor(uint256)": {
        "details": "Sets the value that determines how many CHES tokens need to be in the contract before it's swapped for BNB.",
        "params": {
          "newDivisor": "the new divisor value to determine the swap threshold"
        }
      },
      "setTokenClaimContractAddress(address)": {
        "details": "Only owner function to set the token claim contract address.",
        "params": {
          "tokenClaimAddress": "the token claim contract address"
        }
      },
      "swapCHESForBNBManually(uint256,bool)": {
        "details": "Swaps all CHES tokens in the contract for BNB and then disperses those funds to the transaction fee wallets.",
        "params": {
          "amount": "the amount of CHES in the contract to swap for BNB",
          "useAmount": "boolean to determine if the amount sent in is swapped for BNB or if the entire contract balance is swapped."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Overrides the BEP20 transfer function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "recipient": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Overrides the BEP20 transferFrom function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "from": "the address from where the tokens are coming from",
          "to": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBlackList(address,bool)": {
        "details": "Updates the blacklist mapping for a given address",
        "params": {
          "blacklisted": "a boolean that determines if the given address is being added or removed from the blacklist",
          "user": "the address that is being added or removed from the blacklist"
        }
      },
      "updateDeveloperTransactionFee(uint256)": {
        "details": "Function to update the developer transaction fee - can't be more than 5 percent",
        "params": {
          "newDeveloperTransactionFee": "the new developer transaction fee"
        }
      },
      "updateMarketingTransactionFee(uint256)": {
        "details": "Function to update the marketing transaction fee - can't be more than 5 percent",
        "params": {
          "newMarketingTransactionFee": "the new marketing transaction fee"
        }
      },
      "updateMinter(address,bool)": {
        "details": "Function to add or remove a CHES token minter",
        "params": {
          "isMinter": "boolean representing if the address provided will be added or removed as a minter",
          "user": "the address that will be added or removed as a minter"
        }
      },
      "updateRealEstateTransactionFee(uint256)": {
        "details": "Function to update the real estate transaction fee - can't be more than 20 percent",
        "params": {
          "newRealEstateTransactionFee": "the new real estate transaction fee"
        }
      }
    },
    "title": "Chain Estate DAO Token",
    "version": 1
  },
  "offset": [
    457,
    19391
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x297 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78C1D245 GT PUSH2 0x15A JUMPI DUP1 PUSH4 0xC816841B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0xF439D93C EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x835 JUMPI DUP1 PUSH4 0xF94D733D EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0xFC2EB889 EQ PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC816841B EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xD158272D EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0xDA6FA55C EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0xDBE66CA0 EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x78F JUMPI DUP1 PUSH4 0xECC63390 EQ PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0xAAC86D4E EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0xAC65C870 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0xBBEAA1F8 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78C1D245 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7BE7B656 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x7C13EFD4 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x8EB83F25 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43620E71 GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6B9C58DF GT PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x6B9C58DF EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x6C9230DB EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x6E2B0E47 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x72B11637 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x43620E71 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x4FCD1285 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x502F91EC EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0x5B3C1DA1 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x5B81C1A4 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x61EB048A EQ PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x250 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x2FB47BE4 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x32A2C5D0 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x1497B01B EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x1BA7F00F EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x20CA3C7F EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x29E JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x32B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2327 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH2 0x36E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x23B2 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x23CB JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH2 0x32B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0xFD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x100C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x23B2 JUMP JUMPDEST PUSH2 0x10EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x11C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x11F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x664 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x684 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x1285 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x6A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x1322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH2 0x16D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x704 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH2 0x171F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x36E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x77A CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x7AA CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B2 JUMP JUMPDEST PUSH2 0x176A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x810 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH2 0x1835 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x830 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B2 JUMP JUMPDEST PUSH2 0x18CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x850 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x896 CALLDATASIZE PUSH1 0x4 PUSH2 0x230A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44B PUSH2 0x8C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8DA SWAP1 PUSH2 0x2427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x906 SWAP1 PUSH2 0x2427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x953 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x928 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x953 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x936 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x96B DUP2 DUP6 DUP6 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xAD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F7527726520747279696E6720746F20737065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E642074686520746F6B656E732066726F6D20686173206265656E20626C6163 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6B6C69737465642066726F6D2074726164696E6720746865204348455320746F PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x6B656E2E20496620796F75207468696E6B207468697320697320616E20657272 PUSH1 0xA4 DUP3 ADD MSTORE PUSH32 0x6F722C20706C6561736520636F6E746163742074686520436861696E20457374 PUSH1 0xC4 DUP3 ADD MSTORE PUSH13 0x30BA32902220A7903A32B0B697 PUSH1 0x99 SHL PUSH1 0xE4 DUP3 ADD MSTORE PUSH2 0x104 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA7 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F752061726520747279696E6720746F207365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6420746F6B656E7320746F20686173206265656E20626C61636B6C69737465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x642066726F6D2074726164696E6720746865204348455320746F6B656E2E2049 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x6620796F75207468696E6B207468697320697320616E206572726F722C20706C PUSH1 0xA4 DUP3 ADD MSTORE PUSH32 0x6561736520636F6E746163742074686520436861696E20457374617465204441 PUSH1 0xC4 DUP3 ADD MSTORE PUSH7 0x27903A32B0B697 PUSH1 0xC9 SHL PUSH1 0xE4 DUP3 ADD MSTORE PUSH2 0x104 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC19 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xC33 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC56 JUMPI PUSH2 0xC43 DUP5 CALLER DUP5 PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0xC4E DUP5 DUP5 DUP5 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP5 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x14 SLOAD DUP6 PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x13 SLOAD DUP7 PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0xCBD DUP5 DUP7 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0xCC7 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST SWAP1 POP PUSH2 0xCD4 DUP9 CALLER DUP9 PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0xCDF DUP9 ADDRESS DUP4 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA ADDRESS PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD4C JUMPI PUSH1 0x18 SLOAD PUSH1 0x16 SLOAD PUSH2 0xD20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFBB JUMP JUMPDEST PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH2 0xD3A DUP2 PUSH2 0x1CDB JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD4A SELFBALANCE PUSH2 0x1E44 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xD58 DUP4 DUP10 PUSH2 0x257A JUMP JUMPDEST SWAP1 POP PUSH2 0xD65 DUP11 DUP11 DUP4 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x96B SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xDB1 SWAP1 DUP8 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x1951 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420746F206D696E742043 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x2422A9903A37B5B2B73997 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0xE33 DUP3 DUP3 PUSH2 0x1F62 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206D61726B6574696E67207472616E73616374696F6E20666565206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3713BA1031329036B7B932903A3430B7101A9297 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH31 0xEC95F51190FC49500BF726B0C72CB5C1B132F7BFE7685A33BDA07DEFE3A8A8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF94 JUMPI PUSH2 0xF8F DUP3 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9F ADDRESS PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP PUSH2 0xFAA DUP2 PUSH2 0x1CDB JUMP JUMPDEST POP JUMPDEST SELFBALANCE PUSH2 0xFB6 DUP2 PUSH2 0x1E44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH2 0x100A PUSH1 0x0 PUSH2 0x2049 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1084 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520746F6B656E20636C61696D20636F6E7472616374206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x371031B0B636103A3434B990333AB731BA34B7B717 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x14 DUP2 GT ISZERO PUSH2 0x118F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865207265616C20657374617465207472616E73616374696F6E2066656520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63616E2774206265206D6F7265207468616E203230252E000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x5E294032E562253D1BD8479E26981CF9E5B7AB3E93218BFD57214DE3418F0B1C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST SELFBALANCE PUSH2 0x11F6 DUP2 PUSH2 0x1E44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8DA SWAP1 PUSH2 0x2427 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x127B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420746F206275726E2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x2422A9903A37B5B2B73997 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0xE33 DUP3 DUP3 PUSH2 0x209B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x130A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x1317 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1951 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206164647265737320796F752061726520747279696E6720746F207365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E64204348455320746F20686173206265656E20626C61636B6C697374656420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x66726F6D2074726164696E6720746865204348455320746F6B656E2E20496620 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x796F75207468696E6B207468697320697320616E206572726F722C20706C6561 PUSH1 0xA4 DUP3 ADD MSTORE PUSH32 0x736520636F6E746163742074686520436861696E204573746174652044414F20 PUSH1 0xC4 DUP3 ADD MSTORE PUSH5 0x3A32B0B697 PUSH1 0xD9 SHL PUSH1 0xE4 DUP3 ADD MSTORE PUSH2 0x104 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1495 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14BA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1572 JUMPI PUSH1 0xA6 PUSH2 0x14CA PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14D4 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST DUP3 PUSH2 0x14DE DUP6 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0x14E8 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST LT PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742068617665206D6F7265207468616E203225206F662074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x686520746F74616C204348455320737570706C7920616674657220612050616E PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x31B0B5B2A9BBB0B81039BBB0B817 PUSH1 0x91 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x9A7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x15A8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15B8 CALLER DUP5 DUP5 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x12 SLOAD DUP5 PUSH2 0x15D2 SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x14 SLOAD DUP6 PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x15FA SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x13 SLOAD DUP7 PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x1618 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x1627 DUP5 DUP7 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST SWAP1 POP PUSH2 0x163E CALLER ADDRESS DUP4 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1649 ADDRESS PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16AB JUMPI PUSH1 0x18 SLOAD PUSH1 0x16 SLOAD PUSH2 0x167F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFBB JUMP JUMPDEST PUSH2 0x1689 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1699 JUMPI PUSH2 0x1699 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A9 SELFBALANCE PUSH2 0x1E44 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x16B7 DUP4 DUP10 PUSH2 0x257A JUMP JUMPDEST SWAP1 POP PUSH2 0x16C4 CALLER DUP11 DUP4 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520646576656C6F706572207472616E73616374696F6E20666565206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3713BA1031329036B7B932903A3430B7101A9297 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x4BEE3C216A701857ABD67FED754EFDD065A8599BE5476E2C4B118FB1896B9FFA SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x11F6 DUP2 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x19B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B01 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x1B01 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1951 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1C45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1C7C SWAP1 DUP5 SWAP1 PUSH2 0x2562 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CC8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1B01 DUP5 DUP5 DUP5 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D10 JUMPI PUSH2 0x1D10 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x15 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9C SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DAF JUMPI PUSH2 0x1DAF PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x15 SLOAD PUSH2 0x1DD5 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1E0E SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD PUSH2 0x1E59 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x1E63 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x12 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x1E86 SWAP1 DUP7 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x1E90 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x1EDB SWAP1 DUP7 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x1EE5 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8FC SWAP1 DUP4 SWAP1 PUSH2 0x1F30 SWAP1 DUP7 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x1F3A SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9A7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FCA SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1FF7 SWAP1 DUP5 SWAP1 PUSH2 0x2562 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE33 PUSH1 0x0 DUP4 DUP4 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x216F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x219E SWAP1 DUP5 SWAP1 PUSH2 0x257A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFB6 DUP4 PUSH1 0x0 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x21F7 DUP4 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x226F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x222D DUP5 DUP4 PUSH2 0x257A JUMP JUMPDEST PUSH2 0x2237 SWAP2 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x2241 TIMESTAMP DUP6 PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x224B SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x2255 SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22A1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2285 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x22FC DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x231C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD70 DUP2 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x233C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2347 DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2357 DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x239B DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A9 PUSH1 0x20 DUP5 ADD PUSH2 0x2368 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x23A9 PUSH1 0x20 DUP5 ADD PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x240C DUP2 PUSH2 0x22C9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x241C DUP2 PUSH2 0x22C9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x243B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x245C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7F SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206265656E20626C61636B6C69737465642066726F6D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x726164696E6720746865204348455320746F6B656E2E20496620796F75207468 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x696E6B207468697320697320616E206572726F722C20706C6561736520636F6E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x746163742074686520436861696E204573746174652044414F207465616D2E00 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x253B JUMPI PUSH2 0x253B PUSH2 0x250B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x255D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2575 PUSH2 0x250B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x258C JUMPI PUSH2 0x258C PUSH2 0x250B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD70 DUP2 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2649 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2624 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 CREATE2 JUMPI MSTORE 0xD5 0xBC 0xA7 DUP15 SWAP14 SWAP8 EXTCODEHASH 0x4E 0xE1 SUB PUSH9 0x8A35F234678D8C3115 0xC1 SHR 0xBE PUSH20 0xA3E86F3664736F6C634300080800330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "8": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "LT",
      "path": "21"
    },
    "9": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x297"
    },
    "12": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "13": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "16": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "SHR",
      "path": "21"
    },
    "19": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "20": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x78C1D245"
    },
    "25": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "26": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15A"
    },
    "29": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "30": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "31": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xC816841B"
    },
    "36": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "37": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "41": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "42": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "48": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "52": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "53": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "59": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7F5"
    },
    "62": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "63": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "64": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF439D93C"
    },
    "69": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "70": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x815"
    },
    "73": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "74": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "75": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF46ECCC4"
    },
    "80": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "81": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x835"
    },
    "84": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "85": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "86": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF94D733D"
    },
    "91": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "92": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x865"
    },
    "95": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "96": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "97": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF9F92BE4"
    },
    "102": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "103": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x87B"
    },
    "106": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "107": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "108": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xFC2EB889"
    },
    "113": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "114": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8AB"
    },
    "117": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "118": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "121": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "122": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "123": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "124": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xC816841B"
    },
    "129": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "130": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x709"
    },
    "133": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "134": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "135": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xD158272D"
    },
    "140": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "141": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x729"
    },
    "144": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "145": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "146": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xDA6FA55C"
    },
    "151": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "152": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x749"
    },
    "155": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "156": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "157": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xDBE66CA0"
    },
    "162": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "163": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x75F"
    },
    "166": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "167": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "168": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xDD62ED3E"
    },
    "173": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "174": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x78F"
    },
    "177": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "178": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "179": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xECC63390"
    },
    "184": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "185": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7D5"
    },
    "188": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "189": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "192": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "193": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "194": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "195": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x9DC29FAC"
    },
    "200": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "201": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "205": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "206": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x9DC29FAC"
    },
    "211": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "212": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x649"
    },
    "215": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "216": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "217": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xA457C2D7"
    },
    "222": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "223": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x669"
    },
    "226": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "227": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "228": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xA9059CBB"
    },
    "233": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "234": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x689"
    },
    "237": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "238": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "239": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xAAC86D4E"
    },
    "244": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "245": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6A9"
    },
    "248": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "249": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "250": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xAC65C870"
    },
    "255": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "256": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6C9"
    },
    "259": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "260": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "261": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xBBEAA1F8"
    },
    "266": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "267": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6E9"
    },
    "270": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "271": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "273": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "274": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "275": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "276": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "277": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x78C1D245"
    },
    "282": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "283": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5A1"
    },
    "286": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "287": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "288": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x7BE7B656"
    },
    "293": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "294": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5C1"
    },
    "297": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "298": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "299": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x7C13EFD4"
    },
    "304": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "305": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5E1"
    },
    "308": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "309": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "310": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x8DA5CB5B"
    },
    "315": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "316": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5F6"
    },
    "319": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "320": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "321": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x8EB83F25"
    },
    "326": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "327": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x614"
    },
    "330": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "331": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "332": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x95D89B41"
    },
    "337": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "338": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x634"
    },
    "341": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "342": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "344": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "345": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "346": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "347": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "348": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x43620E71"
    },
    "353": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "354": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1FE"
    },
    "357": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "358": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "359": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6B9C58DF"
    },
    "364": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "365": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B7"
    },
    "368": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "369": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "370": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6B9C58DF"
    },
    "375": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "376": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x503"
    },
    "379": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "380": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "381": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6C9230DB"
    },
    "386": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "387": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x523"
    },
    "390": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "391": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "392": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6E2B0E47"
    },
    "397": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "398": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x536"
    },
    "401": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "402": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "403": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x70A08231"
    },
    "408": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "409": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x54C"
    },
    "412": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "413": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "414": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x715018A6"
    },
    "419": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "420": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x56C"
    },
    "423": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "424": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "425": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x72B11637"
    },
    "430": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "431": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x581"
    },
    "434": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "435": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "437": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "438": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "439": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "440": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "441": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x43620E71"
    },
    "446": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "447": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44D"
    },
    "450": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "451": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "452": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x4FCD1285"
    },
    "457": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "458": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x46D"
    },
    "461": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "462": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "463": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x502F91EC"
    },
    "468": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "469": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x483"
    },
    "472": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "473": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "474": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x5B3C1DA1"
    },
    "479": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "480": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4A3"
    },
    "483": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "484": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "485": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x5B81C1A4"
    },
    "490": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "491": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4C3"
    },
    "494": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "495": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "496": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x61EB048A"
    },
    "501": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "502": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4E3"
    },
    "505": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "506": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "508": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "509": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "510": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "511": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "512": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x23B872DD"
    },
    "517": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "GT",
      "path": "21"
    },
    "518": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x250"
    },
    "521": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "522": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "523": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x23B872DD"
    },
    "528": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "529": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3A6"
    },
    "532": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "533": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "534": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x2FB47BE4"
    },
    "539": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "540": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3C6"
    },
    "543": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "544": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "545": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x313CE567"
    },
    "550": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "551": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3DC"
    },
    "554": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "555": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "556": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x32A2C5D0"
    },
    "561": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "562": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3F8"
    },
    "565": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "566": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "567": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x39509351"
    },
    "572": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "573": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x40B"
    },
    "576": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "577": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "578": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x40C10F19"
    },
    "583": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "584": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x42B"
    },
    "587": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "588": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "590": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "591": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "592": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "593": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "594": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6FDDE03"
    },
    "599": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "600": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A3"
    },
    "603": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "604": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "605": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x95EA7B3"
    },
    "610": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "611": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2CE"
    },
    "614": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "615": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "616": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x1497B01B"
    },
    "621": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "622": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2FE"
    },
    "625": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "626": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "627": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x18160DDD"
    },
    "632": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "633": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x339"
    },
    "636": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "637": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "638": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x1BA7F00F"
    },
    "643": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "644": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x34E"
    },
    "647": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "648": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "649": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x20CA3C7F"
    },
    "654": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "EQ",
      "path": "21"
    },
    "655": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x386"
    },
    "658": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "659": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "661": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "662": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "663": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "664": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "665": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x29E"
    },
    "668": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "669": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "STOP",
      "path": "21"
    },
    "670": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "671": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "673": {
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "DUP1",
      "path": "21"
    },
    "674": {
      "first_revert": true,
      "fn": null,
      "offset": [
        457,
        19391
      ],
      "op": "REVERT",
      "path": "21"
    },
    "675": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "676": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "677": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "678": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "679": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "682": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "683": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "685": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "687": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "688": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "POP",
      "path": "2"
    },
    "689": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B8"
    },
    "692": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CB"
    },
    "695": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "696": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "699": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "700": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C5"
    },
    "703": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "704": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "705": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2274"
    },
    "708": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "709": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "710": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "712": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "713": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "714": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "715": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "2"
    },
    "716": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "717": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "2"
    },
    "718": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "719": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "720": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "721": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "722": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DA"
    },
    "725": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "726": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "728": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "729": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "REVERT",
      "path": "2"
    },
    "730": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "731": {
      "op": "POP"
    },
    "732": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "735": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E9"
    },
    "738": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "739": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "741": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22DE"
    },
    "744": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "745": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "746": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95D"
    },
    "749": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "750": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "753": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "754": {
      "op": "SWAP1"
    },
    "755": {
      "op": "ISZERO"
    },
    "756": {
      "op": "ISZERO"
    },
    "757": {
      "op": "DUP2"
    },
    "758": {
      "op": "MSTORE"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C5"
    },
    "765": {
      "op": "JUMP"
    },
    "766": {
      "offset": [
        825,
        878
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "767": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "768": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "DUP1",
      "path": "21"
    },
    "769": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "770": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x30A"
    },
    "773": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "774": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "776": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "DUP1",
      "path": "21"
    },
    "777": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "REVERT",
      "path": "21"
    },
    "778": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "offset": [
        825,
        878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "783": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x319"
    },
    "786": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "787": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "789": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "792": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        825,
        878
      ],
      "op": "JUMP",
      "path": "21"
    },
    "793": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "794": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "796": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "798": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "799": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "802": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "DUP2",
      "path": "21"
    },
    "803": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "804": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "806": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "807": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "808": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "809": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "DUP2",
      "path": "21"
    },
    "810": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "JUMP",
      "path": "21"
    },
    "811": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "812": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "814": {
      "fn": "ERC20.approve",
      "offset": [
        825,
        878
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "815": {
      "op": "SWAP1"
    },
    "816": {
      "op": "DUP2"
    },
    "817": {
      "op": "MSTORE"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "820": {
      "op": "ADD"
    },
    "821": {
      "offset": [
        825,
        878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2C5"
    },
    "824": {
      "op": "JUMP"
    },
    "825": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "826": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "827": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "828": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "829": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x345"
    },
    "832": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "833": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "835": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "836": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "REVERT",
      "path": "2"
    },
    "837": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "841": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "842": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "845": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "846": {
      "offset": [
        1254,
        1291
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "847": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "848": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "DUP1",
      "path": "21"
    },
    "849": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "850": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x35A"
    },
    "853": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "854": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "856": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "DUP1",
      "path": "21"
    },
    "857": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "REVERT",
      "path": "21"
    },
    "858": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "offset": [
        1254,
        1291
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "862": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "863": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "866": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "SUB"
    },
    "875": {
      "offset": [
        1254,
        1291
      ],
      "op": "AND",
      "path": "21"
    },
    "876": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "DUP2",
      "path": "21"
    },
    "877": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "JUMP",
      "path": "21"
    },
    "878": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "879": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "881": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1254,
        1291
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "op": "SWAP1"
    },
    "891": {
      "op": "SWAP2"
    },
    "892": {
      "op": "AND"
    },
    "893": {
      "op": "DUP2"
    },
    "894": {
      "op": "MSTORE"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "897": {
      "op": "ADD"
    },
    "898": {
      "offset": [
        1254,
        1291
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2C5"
    },
    "901": {
      "op": "JUMP"
    },
    "902": {
      "offset": [
        2043,
        2078
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "903": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "904": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "DUP1",
      "path": "21"
    },
    "905": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "906": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x392"
    },
    "909": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "910": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "912": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "DUP1",
      "path": "21"
    },
    "913": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "REVERT",
      "path": "21"
    },
    "914": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "offset": [
        2043,
        2078
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x10"
    },
    "918": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "919": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "922": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "offset": [
        2043,
        2078
      ],
      "op": "AND",
      "path": "21"
    },
    "932": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "DUP2",
      "path": "21"
    },
    "933": {
      "fn": "ERC20.totalSupply",
      "offset": [
        2043,
        2078
      ],
      "op": "JUMP",
      "path": "21"
    },
    "934": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "935": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "936": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "DUP1",
      "path": "21"
    },
    "937": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "938": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3B2"
    },
    "941": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "942": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "944": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "DUP1",
      "path": "21"
    },
    "945": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "REVERT",
      "path": "21"
    },
    "946": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EE"
    },
    "951": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3C1"
    },
    "954": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "955": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "957": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2327"
    },
    "960": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMP",
      "path": "21"
    },
    "961": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "962": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x977"
    },
    "965": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMP",
      "path": "21"
    },
    "966": {
      "offset": [
        2143,
        2174
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "967": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "968": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "DUP1",
      "path": "21"
    },
    "969": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "970": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3D2"
    },
    "973": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "974": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "976": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "DUP1",
      "path": "21"
    },
    "977": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "REVERT",
      "path": "21"
    },
    "978": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "979": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "POP",
      "path": "21"
    },
    "980": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "983": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x11"
    },
    "985": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "986": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "DUP2",
      "path": "21"
    },
    "987": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        2143,
        2174
      ],
      "op": "JUMP",
      "path": "21"
    },
    "988": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "989": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "990": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "991": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "992": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "995": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "996": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "998": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "999": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1000": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1004": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1005": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C5"
    },
    "1015": {
      "op": "JUMP"
    },
    "1016": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1017": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1018": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1019": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1020": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x404"
    },
    "1023": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1024": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1026": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1027": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1028": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5840,
        5844
      ],
      "op": "ADDRESS",
      "path": "21",
      "statement": 2
    },
    "1031": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1034": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        5756,
        5852
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1035": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1036": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1037": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1038": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1039": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x417"
    },
    "1042": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1043": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1045": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1046": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1047": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "1052": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x426"
    },
    "1055": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1056": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1058": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22DE"
    },
    "1061": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1062": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD77"
    },
    "1066": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1067": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1068": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1069": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1070": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1071": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x437"
    },
    "1074": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1075": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1077": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1078": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1079": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1080": {
      "op": "POP"
    },
    "1081": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1084": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x446"
    },
    "1087": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1088": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1090": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x22DE"
    },
    "1093": {
      "fn": "ChainEstateToken.mint",
      "jump": "i",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1094": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1095": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDB6"
    },
    "1098": {
      "fn": "ChainEstateToken.mint",
      "jump": "i",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1099": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1100": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "STOP",
      "path": "21"
    },
    "1101": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1102": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1103": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1104": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1105": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x459"
    },
    "1108": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1109": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1111": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1112": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1113": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1114": {
      "op": "POP"
    },
    "1115": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1118": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x468"
    },
    "1121": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1122": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1124": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x237D"
    },
    "1127": {
      "fn": "ChainEstateToken.updateMinter",
      "jump": "i",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1128": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1129": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xE37"
    },
    "1132": {
      "fn": "ChainEstateToken.updateMinter",
      "jump": "i",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1133": {
      "offset": [
        2347,
        2385
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1134": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1135": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1136": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1137": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x479"
    },
    "1140": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1141": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1143": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1144": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1145": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1146": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "POP",
      "path": "21"
    },
    "1147": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "1150": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x13"
    },
    "1152": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1153": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1154": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        2347,
        2385
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1155": {
      "offset": [
        1474,
        1520
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1156": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1157": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1158": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1159": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x48F"
    },
    "1162": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1163": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1165": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1166": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1167": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "offset": [
        1474,
        1520
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xC"
    },
    "1171": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1172": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1175": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "offset": [
        1474,
        1520
      ],
      "op": "AND",
      "path": "21"
    },
    "1185": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1186": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1474,
        1520
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1187": {
      "offset": [
        1354,
        1386
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1188": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1189": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1190": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1191": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4AF"
    },
    "1194": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1195": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1197": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1198": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1199": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1200": {
      "op": "POP"
    },
    "1201": {
      "offset": [
        1354,
        1386
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xB"
    },
    "1203": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1204": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1207": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "op": "SUB"
    },
    "1216": {
      "offset": [
        1354,
        1386
      ],
      "op": "AND",
      "path": "21"
    },
    "1217": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1218": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        1354,
        1386
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1219": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1220": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1221": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1222": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1223": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4CF"
    },
    "1226": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1227": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1229": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1230": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1231": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1232": {
      "op": "POP"
    },
    "1233": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1236": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4DE"
    },
    "1239": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1240": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1242": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x23B2"
    },
    "1245": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "jump": "i",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1246": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1247": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xE8C"
    },
    "1250": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "jump": "i",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1251": {
      "offset": [
        1918,
        1963
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1252": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1253": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1254": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1255": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4EF"
    },
    "1258": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1259": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1261": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1262": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1263": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "offset": [
        1918,
        1963
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF"
    },
    "1267": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1268": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1271": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "op": "SUB"
    },
    "1280": {
      "offset": [
        1918,
        1963
      ],
      "op": "AND",
      "path": "21"
    },
    "1281": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1282": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        1918,
        1963
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1283": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1284": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1285": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1286": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1287": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x50F"
    },
    "1290": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1291": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1293": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1294": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1295": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1296": {
      "op": "POP"
    },
    "1297": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1300": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x51E"
    },
    "1303": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1304": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1306": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x23CB"
    },
    "1309": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "i",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1310": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1311": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xF56"
    },
    "1314": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "i",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1315": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1316": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1317": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1318": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1319": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52F"
    },
    "1322": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1323": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1325": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1326": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1327": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6317,
        6332
      ],
      "op": "TIMESTAMP",
      "path": "21",
      "statement": 3
    },
    "1330": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "1333": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        6239,
        6339
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1334": {
      "offset": [
        2234,
        2284
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1335": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1336": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1337": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1338": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x542"
    },
    "1341": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1342": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1344": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1345": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1346": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1347": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "POP",
      "path": "21"
    },
    "1348": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "1351": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x12"
    },
    "1353": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1354": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1355": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        2234,
        2284
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1356": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1357": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1358": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1359": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1360": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1363": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1364": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1366": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1367": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1368": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "1373": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x567"
    },
    "1376": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1377": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1379": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230A"
    },
    "1382": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1383": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1384": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBB"
    },
    "1387": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1389": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1390": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1392": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1396": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1400": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1402": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "1405": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD6"
    },
    "1408": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1409": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1410": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1411": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1412": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1413": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x58D"
    },
    "1416": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1417": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1419": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1420": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1421": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1426": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x59C"
    },
    "1429": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1430": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1432": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x22DE"
    },
    "1435": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "jump": "i",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1436": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1437": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x100C"
    },
    "1440": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "jump": "i",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1441": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1442": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1443": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1444": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1445": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5AD"
    },
    "1448": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1449": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1451": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1452": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1453": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1458": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5BC"
    },
    "1461": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1462": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1464": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "1467": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1468": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1469": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10A0"
    },
    "1472": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1473": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1474": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1475": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1476": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1477": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1481": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1483": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1484": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1485": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1490": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5DC"
    },
    "1493": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1494": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1496": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x23B2"
    },
    "1499": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "jump": "i",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1500": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1501": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10EE"
    },
    "1504": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "jump": "i",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1505": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1506": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1507": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1508": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1509": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5ED"
    },
    "1512": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1513": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1515": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1516": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1517": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1518": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "POP",
      "path": "21"
    },
    "1519": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1522": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11C2"
    },
    "1525": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        13473,
        13636
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1526": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1527": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1528": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1529": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1530": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x602"
    },
    "1533": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1534": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1536": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1537": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1538": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "1542": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1552": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36E"
    },
    "1555": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1556": {
      "offset": [
        1703,
        1740
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1557": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1558": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1559": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1560": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x620"
    },
    "1563": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1564": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1566": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1567": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1568": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "offset": [
        1703,
        1740
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xD"
    },
    "1572": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1573": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1576": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1583": {
      "op": "SHL"
    },
    "1584": {
      "op": "SUB"
    },
    "1585": {
      "offset": [
        1703,
        1740
      ],
      "op": "AND",
      "path": "21"
    },
    "1586": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1587": {
      "fn": "Ownable.owner",
      "offset": [
        1703,
        1740
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1588": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1589": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1590": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1591": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1592": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x640"
    },
    "1595": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1596": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1598": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1601": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "POP",
      "path": "2"
    },
    "1602": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B8"
    },
    "1605": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F9"
    },
    "1608": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1609": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1610": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1611": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1612": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1613": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x655"
    },
    "1616": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1617": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1619": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1620": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1621": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1626": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x664"
    },
    "1629": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1630": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1632": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x22DE"
    },
    "1635": {
      "fn": "ChainEstateToken.burn",
      "jump": "i",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1636": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1637": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1208"
    },
    "1640": {
      "fn": "ChainEstateToken.burn",
      "jump": "i",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1641": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1642": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1643": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1644": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1645": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x675"
    },
    "1648": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1649": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1651": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1652": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1653": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "1658": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x684"
    },
    "1661": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1662": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1664": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22DE"
    },
    "1667": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1668": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1669": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1285"
    },
    "1672": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1673": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1674": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1675": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1676": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1677": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x695"
    },
    "1680": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1681": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1683": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1684": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1685": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EE"
    },
    "1690": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6A4"
    },
    "1693": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1694": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1696": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x22DE"
    },
    "1699": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1700": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1701": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1322"
    },
    "1704": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1705": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1706": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1707": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1708": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1709": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6B5"
    },
    "1712": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1713": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1715": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1716": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1717": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1722": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6C4"
    },
    "1725": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1726": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1728": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "1731": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "jump": "i",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1732": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1733": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x16D3"
    },
    "1736": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "jump": "i",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1737": {
      "offset": [
        2711,
        2751
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1738": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1739": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1740": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1741": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6D5"
    },
    "1744": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1745": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1747": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1748": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1749": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "offset": [
        2711,
        2751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x17"
    },
    "1753": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1754": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1757": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1764": {
      "op": "SHL"
    },
    "1765": {
      "op": "SUB"
    },
    "1766": {
      "offset": [
        2711,
        2751
      ],
      "op": "AND",
      "path": "21"
    },
    "1767": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1768": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        2711,
        2751
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1769": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1770": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1771": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1772": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1773": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6F5"
    },
    "1776": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1777": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1779": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1780": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1781": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "1786": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x704"
    },
    "1789": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1790": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1792": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "1795": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1796": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1797": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x171F"
    },
    "1800": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1801": {
      "offset": [
        2634,
        2660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1802": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1803": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1804": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1805": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x715"
    },
    "1808": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1809": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1811": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1812": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1813": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "offset": [
        2634,
        2660
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x16"
    },
    "1817": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1818": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1821": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "offset": [
        2634,
        2660
      ],
      "op": "AND",
      "path": "21"
    },
    "1831": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1832": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2634,
        2660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1833": {
      "offset": [
        1807,
        1852
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1834": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1835": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1836": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1837": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x735"
    },
    "1840": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1841": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1843": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1844": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1845": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "offset": [
        1807,
        1852
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE"
    },
    "1849": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1850": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36E"
    },
    "1853": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "op": "SUB"
    },
    "1862": {
      "offset": [
        1807,
        1852
      ],
      "op": "AND",
      "path": "21"
    },
    "1863": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1864": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1807,
        1852
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1865": {
      "offset": [
        2443,
        2481
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1866": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1867": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1868": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1869": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x755"
    },
    "1872": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1873": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1875": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1876": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1877": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1878": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "POP",
      "path": "21"
    },
    "1879": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "1882": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x14"
    },
    "1884": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1885": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1886": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        2443,
        2481
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1887": {
      "offset": [
        644,
        693
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1888": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "1889": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1890": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1891": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x76B"
    },
    "1894": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1895": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1897": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1898": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "REVERT",
      "path": "21"
    },
    "1899": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "offset": [
        644,
        693
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EE"
    },
    "1904": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x77A"
    },
    "1907": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1908": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1910": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "1913": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        644,
        693
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1914": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1915": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "1917": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1919": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1920": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1922": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1923": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1924": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1925": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1927": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1928": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1929": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1930": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "1932": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "AND",
      "path": "21"
    },
    "1933": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1934": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        644,
        693
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1935": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1936": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1937": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1938": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1939": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79B"
    },
    "1942": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1943": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1945": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1946": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1947": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1948": {
      "op": "POP"
    },
    "1949": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "1952": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AA"
    },
    "1955": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1956": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1958": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23EE"
    },
    "1961": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1962": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "SUB"
    },
    "1971": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "1972": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1973": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "1974": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1976": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1977": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1978": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1979": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1981": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1983": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1984": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1985": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1986": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1988": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1989": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1990": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1991": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1992": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1993": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1994": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "1995": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1996": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1997": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1998": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1999": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2000": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2001": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2002": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2003": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2004": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2005": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2006": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2007": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2008": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2009": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7E1"
    },
    "2012": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2013": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2015": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2016": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2017": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2018": {
      "op": "POP"
    },
    "2019": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "2022": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7F0"
    },
    "2025": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "2026": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2028": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x23B2"
    },
    "2031": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "jump": "i",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2032": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2033": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x176A"
    },
    "2036": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "jump": "i",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2039": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x801"
    },
    "2044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2047": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2050": {
      "op": "POP"
    },
    "2051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "2054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "2057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230A"
    },
    "2063": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1835"
    },
    "2068": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2069": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2070": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2071": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2072": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2073": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x821"
    },
    "2076": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2077": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2079": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2080": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2081": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "2086": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x830"
    },
    "2089": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "2090": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2092": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x23B2"
    },
    "2095": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "jump": "i",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2096": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2097": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x18CD"
    },
    "2100": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "jump": "i",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2101": {
      "offset": [
        1132,
        1172
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2102": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2103": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2104": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2105": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x841"
    },
    "2108": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2109": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2111": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2112": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2113": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2114": {
      "op": "POP"
    },
    "2115": {
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EE"
    },
    "2118": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x850"
    },
    "2121": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "2122": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2124": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "2127": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "jump": "i",
      "offset": [
        1132,
        1172
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2128": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2129": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x9"
    },
    "2131": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2133": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2134": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2136": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2137": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2138": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2139": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2141": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2142": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2143": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2144": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "2146": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "AND",
      "path": "21"
    },
    "2147": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2148": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        1132,
        1172
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2149": {
      "offset": [
        2862,
        2903
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2150": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2151": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2152": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2153": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x871"
    },
    "2156": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2157": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2159": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2160": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2161": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2162": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "POP",
      "path": "21"
    },
    "2163": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32B"
    },
    "2166": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x18"
    },
    "2168": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2169": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2170": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        2862,
        2903
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2171": {
      "offset": [
        996,
        1038
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2172": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2173": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2174": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2175": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x887"
    },
    "2178": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2179": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2181": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2182": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2183": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "offset": [
        996,
        1038
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EE"
    },
    "2188": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x896"
    },
    "2191": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "2192": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2194": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x230A"
    },
    "2197": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "jump": "i",
      "offset": [
        996,
        1038
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2198": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2199": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "2201": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2203": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2204": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2206": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2207": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2208": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2209": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2211": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2212": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2213": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2214": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "2216": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "AND",
      "path": "21"
    },
    "2217": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2218": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        996,
        1038
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2219": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2220": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "2221": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2222": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2223": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8B7"
    },
    "2226": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2227": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2229": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2230": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "REVERT",
      "path": "21"
    },
    "2231": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x44B"
    },
    "2236": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8C6"
    },
    "2239": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "2240": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2242": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x237D"
    },
    "2245": {
      "fn": "ChainEstateToken.updateBlackList",
      "jump": "i",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2246": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2247": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x18FC"
    },
    "2250": {
      "fn": "ChainEstateToken.updateBlackList",
      "jump": "i",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2251": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2252": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2254": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x3"
    },
    "2256": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2257": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2258": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DA"
    },
    "2261": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2262": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2427"
    },
    "2265": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2266": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2267": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2268": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2270": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2271": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2273": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2274": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2275": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "2276": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "2277": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2279": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2280": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2282": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2283": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2284": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2285": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2286": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2288": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2289": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2290": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2291": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2292": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2293": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2294": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2295": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2296": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2298": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2299": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2300": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2301": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2302": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x906"
    },
    "2305": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2306": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2427"
    },
    "2309": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2310": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2311": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2312": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2313": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x953"
    },
    "2316": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2317": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2318": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2320": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "2"
    },
    "2321": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x928"
    },
    "2324": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2325": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2328": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2329": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2330": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2331": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "2"
    },
    "2332": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "2"
    },
    "2333": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2334": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2335": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2336": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2338": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2339": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2340": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x953"
    },
    "2343": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2344": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2345": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2346": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2347": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2348": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2349": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2351": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2352": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2354": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2356": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2357": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2358": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2359": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2360": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2361": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2362": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2363": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2364": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2366": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2367": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2368": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2370": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2371": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2372": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2373": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "2"
    },
    "2374": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x936"
    },
    "2377": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2378": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2379": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2380": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "2"
    },
    "2381": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2383": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "2"
    },
    "2384": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2385": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "2"
    },
    "2386": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2387": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2388": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2389": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2390": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2391": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2392": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2393": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2394": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "2"
    },
    "2395": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2396": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2397": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2398": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2400": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 7
    },
    "2401": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x96B"
    },
    "2404": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2405": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2406": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2407": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1951"
    },
    "2410": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2411": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2412": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2414": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2415": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "2416": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "2"
    },
    "2417": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2418": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2419": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2420": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "2421": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "2"
    },
    "2422": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2423": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2424": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2425": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9777,
        9781
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2427": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "SWAP1",
      "path": "21",
      "statement": 10
    },
    "2428": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2429": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2430": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9859
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "2432": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2434": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2435": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2437": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2438": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2439": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2440": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "2442": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9850,
        9873
      ],
      "op": "AND",
      "path": "21"
    },
    "2443": {
      "branch": 101,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9849,
        9873
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2444": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9B0"
    },
    "2447": {
      "branch": 101,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2448": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2450": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2459": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2460": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2462": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "ADD",
      "path": "21"
    },
    "2463": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "2466": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2467": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2462"
    },
    "2470": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        9841,
        10005
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2471": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2472": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2474": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2475": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2476": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2477": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "SUB",
      "path": "21"
    },
    "2478": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2479": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "21"
    },
    "2480": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9841,
        10005
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "SUB"
    },
    "2489": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "DUP5",
      "path": "21",
      "statement": 11
    },
    "2490": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "AND",
      "path": "21"
    },
    "2491": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2493": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2494": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2495": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2496": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10115
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "2498": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2500": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2501": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2503": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2504": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2505": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2506": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "2508": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10106,
        10121
      ],
      "op": "AND",
      "path": "21"
    },
    "2509": {
      "branch": 102,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10105,
        10121
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2510": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xAC8"
    },
    "2513": {
      "branch": 102,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2514": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2516": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2525": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2528": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2530": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2531": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "ADD",
      "path": "21"
    },
    "2532": {
      "op": "MSTORE"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xAD"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2537": {
      "op": "DUP3"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "MSTORE"
    },
    "2540": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F7527726520747279696E6720746F20737065"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2575": {
      "op": "DUP3"
    },
    "2576": {
      "op": "ADD"
    },
    "2577": {
      "op": "MSTORE"
    },
    "2578": {
      "op": "PUSH32",
      "value": "0x6E642074686520746F6B656E732066726F6D20686173206265656E20626C6163"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2613": {
      "op": "DUP3"
    },
    "2614": {
      "op": "ADD"
    },
    "2615": {
      "op": "MSTORE"
    },
    "2616": {
      "op": "PUSH32",
      "value": "0x6B6C69737465642066726F6D2074726164696E6720746865204348455320746F"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2651": {
      "op": "DUP3"
    },
    "2652": {
      "op": "ADD"
    },
    "2653": {
      "op": "MSTORE"
    },
    "2654": {
      "op": "PUSH32",
      "value": "0x6B656E2E20496620796F75207468696E6B207468697320697320616E20657272"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2689": {
      "op": "DUP3"
    },
    "2690": {
      "op": "ADD"
    },
    "2691": {
      "op": "MSTORE"
    },
    "2692": {
      "op": "PUSH32",
      "value": "0x6F722C20706C6561736520636F6E746163742074686520436861696E20457374"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "PUSH13",
      "value": "0x30BA32902220A7903A32B0B697"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2749": {
      "op": "DUP3"
    },
    "2750": {
      "op": "ADD"
    },
    "2751": {
      "op": "MSTORE"
    },
    "2752": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "2759": {
      "op": "JUMP"
    },
    "2760": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10097,
        10299
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 12
    },
    "2770": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "AND",
      "path": "21"
    },
    "2771": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2773": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2774": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2775": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2776": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10378
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "2778": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2780": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2781": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2783": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2784": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2785": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2786": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "2788": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10369,
        10382
      ],
      "op": "AND",
      "path": "21"
    },
    "2789": {
      "branch": 103,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10368,
        10382
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2790": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xBDA"
    },
    "2793": {
      "branch": 103,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2794": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2796": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2797": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2803": {
      "op": "SHL"
    },
    "2804": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2805": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2808": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2810": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2811": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "ADD",
      "path": "21"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xA7"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2817": {
      "op": "DUP3"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F752061726520747279696E6720746F207365"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2855": {
      "op": "DUP3"
    },
    "2856": {
      "op": "ADD"
    },
    "2857": {
      "op": "MSTORE"
    },
    "2858": {
      "op": "PUSH32",
      "value": "0x6E6420746F6B656E7320746F20686173206265656E20626C61636B6C69737465"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2893": {
      "op": "DUP3"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "op": "MSTORE"
    },
    "2896": {
      "op": "PUSH32",
      "value": "0x642066726F6D2074726164696E6720746865204348455320746F6B656E2E2049"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2931": {
      "op": "DUP3"
    },
    "2932": {
      "op": "ADD"
    },
    "2933": {
      "op": "MSTORE"
    },
    "2934": {
      "op": "PUSH32",
      "value": "0x6620796F75207468696E6B207468697320697320616E206572726F722C20706C"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "MSTORE"
    },
    "2972": {
      "op": "PUSH32",
      "value": "0x6561736520636F6E746163742074686520436861696E20457374617465204441"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3007": {
      "op": "DUP3"
    },
    "3008": {
      "op": "ADD"
    },
    "3009": {
      "op": "MSTORE"
    },
    "3010": {
      "op": "PUSH7",
      "value": "0x27903A32B0B697"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "3029": {
      "op": "ADD"
    },
    "3030": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "3033": {
      "op": "JUMP"
    },
    "3034": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10360,
        10554
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3041": {
      "op": "SHL"
    },
    "3042": {
      "op": "SUB"
    },
    "3043": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3044": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "AND",
      "path": "21"
    },
    "3045": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3047": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3048": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3049": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3050": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10687
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "3052": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3054": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3055": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3057": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3058": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3059": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3060": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "3062": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "AND",
      "path": "21"
    },
    "3063": {
      "branch": 104,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10693
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3064": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10717
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC19"
    },
    "3067": {
      "branch": 104,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10717
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3068": {
      "op": "POP"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "op": "SUB"
    },
    "3077": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3078": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "AND",
      "path": "21"
    },
    "3079": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3081": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3082": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3083": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3084": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10713
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "3086": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3088": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3089": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3091": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3092": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3093": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3094": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "3096": {
      "branch": 105,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10697,
        10717
      ],
      "op": "AND",
      "path": "21"
    },
    "3097": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10717
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3098": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3099": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC33"
    },
    "3102": {
      "branch": 105,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10751
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3105": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3107": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3108": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3109": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3110": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10737
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "3112": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3114": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3115": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3117": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3118": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3119": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3120": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "3122": {
      "branch": 106,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10721,
        10751
      ],
      "op": "AND",
      "path": "21"
    },
    "3123": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10671,
        10751
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3124": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10667,
        10887
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3125": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10667,
        10887
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC56"
    },
    "3128": {
      "branch": 106,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10667,
        10887
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3129": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10767,
        10810
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 13,
      "value": "0xC43"
    },
    "3132": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10783,
        10787
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3133": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3134": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10803,
        10809
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3135": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10767,
        10782
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A75"
    },
    "3138": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        10767,
        10810
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3139": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10767,
        10810
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3140": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10824,
        10851
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 14,
      "value": "0xC4E"
    },
    "3143": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10834,
        10838
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3144": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10840,
        10842
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3145": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10844,
        10850
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3146": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10824,
        10833
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B07"
    },
    "3149": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        10824,
        10851
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3150": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10824,
        10851
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10872,
        10876
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 15,
      "value": "0x1"
    },
    "3154": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10865,
        10876
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD70"
    },
    "3157": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10865,
        10876
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3158": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10667,
        10887
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3159": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10937,
        10958
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3161": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11006,
        11009
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "3163": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10971,
        11002
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x12"
    },
    "3165": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10971,
        11002
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3166": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10962,
        10968
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3167": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10962,
        11002
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC68"
    },
    "3170": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10962,
        11002
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3171": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10962,
        11002
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3172": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10962,
        11002
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "3175": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        10962,
        11002
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3176": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10962,
        11002
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3177": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10961,
        11009
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC72"
    },
    "3180": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10961,
        11009
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3181": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10961,
        11009
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3182": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10961,
        11009
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "3185": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        10961,
        11009
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3186": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10961,
        11009
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3187": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10937,
        11009
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3188": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        10937,
        11009
      ],
      "op": "POP",
      "path": "21"
    },
    "3189": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3191": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11118,
        11121
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "3193": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11095,
        11114
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x14"
    },
    "3195": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11095,
        11114
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3196": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11086,
        11092
      ],
      "op": "DUP6",
      "path": "21"
    },
    "3197": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11086,
        11114
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC86"
    },
    "3200": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11086,
        11114
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3201": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11086,
        11114
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3202": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11086,
        11114
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "3205": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11086,
        11114
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3206": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11086,
        11114
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3207": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11085,
        11121
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC90"
    },
    "3210": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11085,
        11121
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3211": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11085,
        11121
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3212": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11085,
        11121
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "3215": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11085,
        11121
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3216": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11085,
        11121
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3217": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11062,
        11121
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3218": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11062,
        11121
      ],
      "op": "POP",
      "path": "21"
    },
    "3219": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11174,
        11194
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3221": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11230,
        11233
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "3223": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11207,
        11226
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x13"
    },
    "3225": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11207,
        11226
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3226": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11198,
        11204
      ],
      "op": "DUP7",
      "path": "21"
    },
    "3227": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11198,
        11226
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCA4"
    },
    "3230": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11198,
        11226
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3231": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11198,
        11226
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3232": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11198,
        11226
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "3235": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11198,
        11226
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3236": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11198,
        11226
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3237": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCAE"
    },
    "3240": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11197,
        11233
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3241": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11197,
        11233
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3242": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "3245": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11197,
        11233
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3246": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11197,
        11233
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3247": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11174,
        11233
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11302,
        11318
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3251": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11174,
        11233
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3252": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11349
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCBD"
    },
    "3255": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11337,
        11349
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3256": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11334
      ],
      "op": "DUP7",
      "path": "21"
    },
    "3257": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11349
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "3260": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11321,
        11349
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3261": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11349
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3262": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11364
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCC7"
    },
    "3265": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11364
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3266": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11364
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3267": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11364
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "3270": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11321,
        11364
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3271": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11321,
        11364
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3272": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11302,
        11364
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3273": {
      "op": "POP"
    },
    "3274": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11438,
        11481
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 16,
      "value": "0xCD4"
    },
    "3277": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11454,
        11458
      ],
      "op": "DUP9",
      "path": "21"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3279": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11474,
        11480
      ],
      "op": "DUP9",
      "path": "21"
    },
    "3280": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11438,
        11453
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A75"
    },
    "3283": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11438,
        11481
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3284": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11438,
        11481
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3285": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11491,
        11531
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 17,
      "value": "0xCDF"
    },
    "3288": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11501,
        11505
      ],
      "op": "DUP9",
      "path": "21"
    },
    "3289": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11515,
        11519
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "3290": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11522,
        11530
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3291": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11491,
        11500
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B07"
    },
    "3294": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11491,
        11531
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3295": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11491,
        11531
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3296": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11542,
        11569
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3298": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11572,
        11596
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCEA"
    },
    "3301": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11590,
        11594
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "3302": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11572,
        11581
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "3305": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11572,
        11596
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3306": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11572,
        11596
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3307": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11627,
        11638
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x16"
    },
    "3309": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11627,
        11638
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3310": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11542,
        11596
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3311": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11542,
        11596
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3312": {
      "op": "POP"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11627,
        11638
      ],
      "op": "AND",
      "path": "21"
    },
    "3322": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "op": "SUB"
    },
    "3331": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11611,
        11638
      ],
      "op": "AND",
      "path": "21"
    },
    "3332": {
      "branch": 107,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11611,
        11638
      ],
      "op": "EQ",
      "path": "21"
    },
    "3333": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11607,
        11999
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD4C"
    },
    "3336": {
      "branch": 107,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11607,
        11999
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3337": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11705,
        11724
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x18"
    },
    "3339": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11705,
        11724
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3340": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11690,
        11701
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x16"
    },
    "3342": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11690,
        11701
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3343": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11702
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD20"
    },
    "3346": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11702
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "op": "SUB"
    },
    "3355": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11690,
        11701
      ],
      "op": "AND",
      "path": "21"
    },
    "3356": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11689
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "3359": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11680,
        11702
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3360": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11702
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3361": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11724
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD2A"
    },
    "3364": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11724
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3365": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11724
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3366": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11724
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "3369": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11680,
        11724
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3370": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11680,
        11724
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3371": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11658,
        11677
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3372": {
      "branch": 108,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11658,
        11724
      ],
      "op": "GT",
      "path": "21"
    },
    "3373": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11654,
        11794
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3374": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11654,
        11794
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD3A"
    },
    "3377": {
      "branch": 108,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11654,
        11794
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3378": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11744,
        11779
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 18,
      "value": "0xD3A"
    },
    "3381": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11759,
        11778
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3382": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11744,
        11758
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CDB"
    },
    "3385": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11744,
        11779
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3386": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11744,
        11779
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3387": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11853,
        11874
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "3388": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11892,
        11914
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3389": {
      "branch": 109,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11892,
        11914
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3390": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11888,
        11989
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD4A"
    },
    "3393": {
      "branch": 109,
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11888,
        11989
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3394": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11934,
        11974
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 19,
      "value": "0xD4A"
    },
    "3397": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11952,
        11973
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "3398": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11934,
        11951
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E44"
    },
    "3401": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        11934,
        11974
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3402": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11934,
        11974
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3403": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11640,
        11999
      ],
      "op": "POP",
      "path": "21"
    },
    "3404": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        11607,
        11999
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3405": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12070,
        12092
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3407": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12095,
        12112
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD58"
    },
    "3410": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12104,
        12112
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3411": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12095,
        12101
      ],
      "op": "DUP10",
      "path": "21"
    },
    "3412": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12095,
        12112
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x257A"
    },
    "3415": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        12095,
        12112
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3416": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12095,
        12112
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3417": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12070,
        12112
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3418": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12070,
        12112
      ],
      "op": "POP",
      "path": "21"
    },
    "3419": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12122,
        12157
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 20,
      "value": "0xD65"
    },
    "3422": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12132,
        12136
      ],
      "op": "DUP11",
      "path": "21"
    },
    "3423": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12138,
        12140
      ],
      "op": "DUP11",
      "path": "21"
    },
    "3424": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12142,
        12156
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3425": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12122,
        12131
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B07"
    },
    "3428": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "i",
      "offset": [
        12122,
        12157
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3429": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12122,
        12157
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3430": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12174,
        12178
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 21,
      "value": "0x1"
    },
    "3432": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "SWAP7",
      "path": "21"
    },
    "3433": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3434": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3435": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3436": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3437": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3438": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3439": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        12167,
        12178
      ],
      "op": "POP",
      "path": "21"
    },
    "3440": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3441": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "3442": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "3443": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "POP",
      "path": "21"
    },
    "3444": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "POP",
      "path": "21"
    },
    "3445": {
      "fn": "ChainEstateToken.transferFrom",
      "offset": [
        9688,
        12185
      ],
      "op": "POP",
      "path": "21"
    },
    "3446": {
      "fn": "ChainEstateToken.transferFrom",
      "jump": "o",
      "offset": [
        9688,
        12185
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3447": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3448": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3449": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3451": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 22
    },
    "3452": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3453": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3454": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3456": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3458": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3459": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3460": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3461": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3463": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3464": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3465": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "op": "SUB"
    },
    "3474": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3475": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "2"
    },
    "3476": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3477": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3478": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3479": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3480": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3481": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3482": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3483": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3484": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3485": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3486": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3487": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96B"
    },
    "3490": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3491": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3492": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3493": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3494": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3495": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDB1"
    },
    "3498": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3499": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3500": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3501": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2562"
    },
    "3504": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3505": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3506": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1951"
    },
    "3509": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3510": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3511": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3512": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 23,
      "value": "0x0"
    },
    "3514": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3515": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3516": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3517": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18069
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x9"
    },
    "3519": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3521": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3522": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3524": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3525": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3526": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3527": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "3529": {
      "branch": 110,
      "fn": "ChainEstateToken.mint",
      "offset": [
        18062,
        18083
      ],
      "op": "AND",
      "path": "21"
    },
    "3530": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xE29"
    },
    "3533": {
      "branch": 110,
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3534": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3536": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3545": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3548": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3550": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3551": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "ADD",
      "path": "21"
    },
    "3552": {
      "op": "MSTORE"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3557": {
      "op": "DUP3"
    },
    "3558": {
      "op": "ADD"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420617574686F72697A656420746F206D696E742043"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3595": {
      "op": "DUP3"
    },
    "3596": {
      "op": "ADD"
    },
    "3597": {
      "op": "MSTORE"
    },
    "3598": {
      "op": "PUSH11",
      "value": "0x2422A9903A37B5B2B73997"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3615": {
      "op": "DUP3"
    },
    "3616": {
      "op": "ADD"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "3624": {
      "op": "JUMP"
    },
    "3625": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18054,
        18131
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3626": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18141,
        18160
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 24,
      "value": "0xE33"
    },
    "3629": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18147,
        18151
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3630": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18153,
        18159
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3631": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18141,
        18146
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F62"
    },
    "3634": {
      "fn": "ChainEstateToken.mint",
      "jump": "i",
      "offset": [
        18141,
        18160
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3635": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        18141,
        18160
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3636": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "POP",
      "path": "21"
    },
    "3637": {
      "fn": "ChainEstateToken.mint",
      "offset": [
        17993,
        18167
      ],
      "op": "POP",
      "path": "21"
    },
    "3638": {
      "fn": "ChainEstateToken.mint",
      "jump": "o",
      "offset": [
        17993,
        18167
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3639": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3640": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3642": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3649": {
      "op": "SHL"
    },
    "3650": {
      "op": "SUB"
    },
    "3651": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3652": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3653": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3654": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE61"
    },
    "3657": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3667": {
      "op": "SHL"
    },
    "3668": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3669": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3673": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "3676": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "3680": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3688": {
      "op": "SHL"
    },
    "3689": {
      "op": "SUB"
    },
    "3690": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "SWAP2",
      "path": "21",
      "statement": 25
    },
    "3691": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3692": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3693": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "AND",
      "path": "21"
    },
    "3694": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3696": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3697": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3698": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3699": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17749
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x9"
    },
    "3701": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3703": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3704": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3706": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3707": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17755
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3708": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3709": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3712": {
      "op": "NOT"
    },
    "3713": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "AND",
      "path": "21"
    },
    "3714": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3715": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3716": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3717": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3718": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3719": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3720": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "OR",
      "path": "21"
    },
    "3721": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3722": {
      "fn": "ChainEstateToken.updateMinter",
      "offset": [
        17742,
        17766
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "3723": {
      "fn": "ChainEstateToken.updateMinter",
      "jump": "o",
      "offset": [
        17664,
        17773
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3724": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3725": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3727": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "SUB"
    },
    "3736": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3737": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3738": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3739": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB6"
    },
    "3742": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3743": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3745": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3752": {
      "op": "SHL"
    },
    "3753": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3754": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3755": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3757": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3758": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "3761": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "3765": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3766": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3767": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16692,
        16693
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 26,
      "value": "0x5"
    },
    "3769": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16662,
        16688
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3770": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16662,
        16693
      ],
      "op": "GT",
      "path": "21"
    },
    "3771": {
      "branch": 111,
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16662,
        16693
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3772": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xF24"
    },
    "3775": {
      "branch": 111,
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3776": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3778": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3779": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3787": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3790": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3792": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3793": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "ADD",
      "path": "21"
    },
    "3794": {
      "op": "MSTORE"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "MSTORE"
    },
    "3802": {
      "op": "PUSH32",
      "value": "0x546865206D61726B6574696E67207472616E73616374696F6E20666565206361"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3837": {
      "op": "DUP3"
    },
    "3838": {
      "op": "ADD"
    },
    "3839": {
      "op": "MSTORE"
    },
    "3840": {
      "op": "PUSH20",
      "value": "0x3713BA1031329036B7B932903A3430B7101A9297"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3863": {
      "op": "SHL"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3866": {
      "op": "DUP3"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "op": "MSTORE"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3871": {
      "op": "ADD"
    },
    "3872": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "3875": {
      "op": "JUMP"
    },
    "3876": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16654,
        16750
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3877": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16760,
        16779
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 27,
      "value": "0x14"
    },
    "3879": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16760,
        16808
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3880": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16760,
        16808
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3881": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16760,
        16808
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "3882": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 28,
      "value": "0x40"
    },
    "3884": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3885": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16782,
        16808
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3886": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16782,
        16808
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3887": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "PUSH31",
      "path": "21",
      "value": "0xEC95F51190FC49500BF726B0C72CB5C1B132F7BFE7685A33BDA07DEFE3A8A8"
    },
    "3919": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3920": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3922": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3923": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16823,
        16881
      ],
      "op": "LOG2",
      "path": "21"
    },
    "3924": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "offset": [
        16552,
        16888
      ],
      "op": "POP",
      "path": "21"
    },
    "3925": {
      "fn": "ChainEstateToken.updateMarketingTransactionFee",
      "jump": "o",
      "offset": [
        16552,
        16888
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3926": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3927": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3929": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "op": "SUB"
    },
    "3938": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3939": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3940": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3941": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF80"
    },
    "3944": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3947": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3959": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3960": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "3963": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3964": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "3967": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3968": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3969": {
      "branch": 112,
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14078,
        14087
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3970": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3971": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xF94"
    },
    "3974": {
      "branch": 112,
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3975": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14103,
        14125
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 29,
      "value": "0xF8F"
    },
    "3978": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14118,
        14124
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3979": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14103,
        14117
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CDB"
    },
    "3982": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "i",
      "offset": [
        14103,
        14125
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3983": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14103,
        14125
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3984": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFAC"
    },
    "3987": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3988": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3989": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14164,
        14191
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3991": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14194,
        14218
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xF9F"
    },
    "3994": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14212,
        14216
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "3995": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14194,
        14203
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "3998": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "i",
      "offset": [
        14194,
        14218
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3999": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14194,
        14218
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4000": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14164,
        14218
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4001": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14164,
        14218
      ],
      "op": "POP",
      "path": "21"
    },
    "4002": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14232,
        14267
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 30,
      "value": "0xFAA"
    },
    "4005": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14247,
        14266
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4006": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14232,
        14246
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CDB"
    },
    "4009": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "i",
      "offset": [
        14232,
        14267
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4010": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14232,
        14267
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4011": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14150,
        14278
      ],
      "op": "POP",
      "path": "21"
    },
    "4012": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14074,
        14278
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4013": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14317,
        14338
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "4014": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14348,
        14385
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 31,
      "value": "0xFB6"
    },
    "4017": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14317,
        14338
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4018": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14348,
        14365
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E44"
    },
    "4021": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "i",
      "offset": [
        14348,
        14385
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4022": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14348,
        14385
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4023": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        14064,
        14392
      ],
      "op": "POP",
      "path": "21"
    },
    "4024": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "POP",
      "path": "21"
    },
    "4025": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "POP",
      "path": "21"
    },
    "4026": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "jump": "o",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4027": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4034": {
      "op": "SHL"
    },
    "4035": {
      "op": "SUB"
    },
    "4036": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "2",
      "statement": 32
    },
    "4037": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4039": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4040": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4041": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4042": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4044": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4045": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4046": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4047": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4049": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4050": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4051": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4052": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4053": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4054": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4055": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4057": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4064": {
      "op": "SHL"
    },
    "4065": {
      "op": "SUB"
    },
    "4066": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4067": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4068": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4069": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1000"
    },
    "4072": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4073": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4075": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4076": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4082": {
      "op": "SHL"
    },
    "4083": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4085": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4087": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "4091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "4095": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4097": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x100A"
    },
    "4100": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4102": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2049"
    },
    "4105": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4106": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4107": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4108": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4109": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18942,
        18967
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 34,
      "value": "0x17"
    },
    "4111": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18942,
        18967
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "op": "SUB"
    },
    "4120": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18942,
        18967
      ],
      "op": "AND",
      "path": "21"
    },
    "4121": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18928,
        18938
      ],
      "op": "CALLER",
      "path": "21"
    },
    "4122": {
      "branch": 113,
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18928,
        18967
      ],
      "op": "EQ",
      "path": "21"
    },
    "4123": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1084"
    },
    "4126": {
      "branch": 113,
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4127": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4129": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4136": {
      "op": "SHL"
    },
    "4137": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4138": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4141": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4143": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4144": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "ADD",
      "path": "21"
    },
    "4145": {
      "op": "MSTORE"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4150": {
      "op": "DUP3"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "MSTORE"
    },
    "4153": {
      "op": "PUSH32",
      "value": "0x4F6E6C792074686520746F6B656E20636C61696D20636F6E7472616374206361"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4188": {
      "op": "DUP3"
    },
    "4189": {
      "op": "ADD"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH21",
      "value": "0x371031B0B636103A3434B990333AB731BA34B7B717"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4215": {
      "op": "SHL"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4218": {
      "op": "DUP3"
    },
    "4219": {
      "op": "ADD"
    },
    "4220": {
      "op": "MSTORE"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "4227": {
      "op": "JUMP"
    },
    "4228": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        18920,
        19025
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4235": {
      "op": "SHL"
    },
    "4236": {
      "op": "SUB"
    },
    "4237": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "SWAP1",
      "path": "21",
      "statement": 35
    },
    "4238": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4239": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "AND",
      "path": "21"
    },
    "4240": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4242": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4243": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4244": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4245": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19052
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "4247": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4249": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4250": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4252": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4253": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19058
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4254": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "offset": [
        19035,
        19081
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4255": {
      "fn": "ChainEstateToken.setAirDropInvestTime",
      "jump": "o",
      "offset": [
        18829,
        19088
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4256": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4257": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4259": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4266": {
      "op": "SHL"
    },
    "4267": {
      "op": "SUB"
    },
    "4268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4269": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4270": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4271": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10CA"
    },
    "4274": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4287": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "4293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "4297": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4305": {
      "op": "SHL"
    },
    "4306": {
      "op": "SUB"
    },
    "4307": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "AND",
      "path": "21",
      "statement": 36
    },
    "4308": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4310": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4311": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4312": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4313": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6073
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4315": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4317": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4318": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4320": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4321": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6079
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4322": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6086
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4323": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6086
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4326": {
      "op": "NOT"
    },
    "4327": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6086
      ],
      "op": "AND",
      "path": "21"
    },
    "4328": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6082,
        6086
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "4330": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6086
      ],
      "op": "OR",
      "path": "21"
    },
    "4331": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6086
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4332": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        6057,
        6086
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4333": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "jump": "o",
      "offset": [
        5987,
        6093
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4334": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4335": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4337": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4344": {
      "op": "SHL"
    },
    "4345": {
      "op": "SUB"
    },
    "4346": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4347": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4348": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4349": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1118"
    },
    "4352": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4353": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4355": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4362": {
      "op": "SHL"
    },
    "4363": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "4371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "4375": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4377": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16151,
        16153
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 37,
      "value": "0x14"
    },
    "4379": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16120,
        16147
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4380": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16120,
        16153
      ],
      "op": "GT",
      "path": "21"
    },
    "4381": {
      "branch": 114,
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16120,
        16153
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4382": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x118F"
    },
    "4385": {
      "branch": 114,
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4386": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4388": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4397": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4400": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4402": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4403": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "ADD",
      "path": "21"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "MSTORE"
    },
    "4412": {
      "op": "PUSH32",
      "value": "0x546865207265616C20657374617465207472616E73616374696F6E2066656520"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH32",
      "value": "0x63616E2774206265206D6F7265207468616E203230252E000000000000000000"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4485": {
      "op": "DUP3"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "op": "MSTORE"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "4494": {
      "op": "JUMP"
    },
    "4495": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16112,
        16213
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4496": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16223,
        16254
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 38,
      "value": "0x12"
    },
    "4498": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16223,
        16284
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4499": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16223,
        16284
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4500": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16223,
        16284
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4501": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 39,
      "value": "0x40"
    },
    "4503": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4504": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16257,
        16284
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4505": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16257,
        16284
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4506": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x5E294032E562253D1BD8479E26981CF9E5B7AB3E93218BFD57214DE3418F0B1C"
    },
    "4539": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4540": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4542": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4543": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16299,
        16359
      ],
      "op": "LOG2",
      "path": "21"
    },
    "4544": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "offset": [
        16008,
        16366
      ],
      "op": "POP",
      "path": "21"
    },
    "4545": {
      "fn": "ChainEstateToken.updateRealEstateTransactionFee",
      "jump": "o",
      "offset": [
        16008,
        16366
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4546": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13473,
        13636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4547": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4549": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4556": {
      "op": "SHL"
    },
    "4557": {
      "op": "SUB"
    },
    "4558": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4559": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4560": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4561": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11EC"
    },
    "4564": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4565": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4567": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4574": {
      "op": "SHL"
    },
    "4575": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4576": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "4583": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4584": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "4587": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4589": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13561,
        13582
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "4590": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13592,
        13629
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 40,
      "value": "0x11F6"
    },
    "4593": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13561,
        13582
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4594": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13592,
        13609
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E44"
    },
    "4597": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "jump": "i",
      "offset": [
        13592,
        13629
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4598": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13592,
        13629
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4599": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "offset": [
        13522,
        13636
      ],
      "op": "POP",
      "path": "21"
    },
    "4600": {
      "fn": "ChainEstateToken.disperseFeesManually",
      "jump": "o",
      "offset": [
        13473,
        13636
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4601": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4602": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4604": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x4"
    },
    "4606": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4607": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4608": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DA"
    },
    "4611": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4612": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2427"
    },
    "4615": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4616": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18361,
        18535
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4617": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4618": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 42,
      "value": "0x0"
    },
    "4620": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4621": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4622": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4623": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18437
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x9"
    },
    "4625": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4627": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4628": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4630": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4631": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4632": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4633": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "4635": {
      "branch": 115,
      "fn": "ChainEstateToken.burn",
      "offset": [
        18430,
        18451
      ],
      "op": "AND",
      "path": "21"
    },
    "4636": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x127B"
    },
    "4639": {
      "branch": 115,
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4640": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4642": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4649": {
      "op": "SHL"
    },
    "4650": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4651": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4654": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4656": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4657": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "ADD",
      "path": "21"
    },
    "4658": {
      "op": "MSTORE"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4663": {
      "op": "DUP3"
    },
    "4664": {
      "op": "ADD"
    },
    "4665": {
      "op": "MSTORE"
    },
    "4666": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420617574686F72697A656420746F206275726E2043"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4701": {
      "op": "DUP3"
    },
    "4702": {
      "op": "ADD"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "PUSH11",
      "value": "0x2422A9903A37B5B2B73997"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4721": {
      "op": "DUP3"
    },
    "4722": {
      "op": "ADD"
    },
    "4723": {
      "op": "MSTORE"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4726": {
      "op": "ADD"
    },
    "4727": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "4730": {
      "op": "JUMP"
    },
    "4731": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18422,
        18499
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4732": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18509,
        18528
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 43,
      "value": "0xE33"
    },
    "4735": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18515,
        18519
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4736": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18521,
        18527
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4737": {
      "fn": "ChainEstateToken.burn",
      "offset": [
        18509,
        18514
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x209B"
    },
    "4740": {
      "fn": "ChainEstateToken.burn",
      "jump": "i",
      "offset": [
        18509,
        18528
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4741": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4742": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4743": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4745": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4746": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4747": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4748": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4750": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4752": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4753": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4754": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4755": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4757": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4758": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4759": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4766": {
      "op": "SHL"
    },
    "4767": {
      "op": "SUB"
    },
    "4768": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "2"
    },
    "4770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4771": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4772": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4773": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4777": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4779": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4780": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4781": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 44
    },
    "4782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "2"
    },
    "4784": {
      "branch": 129,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130A"
    },
    "4788": {
      "branch": 129,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4798": {
      "op": "SHL"
    },
    "4799": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4800": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4803": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4805": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "2"
    },
    "4807": {
      "op": "MSTORE"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4812": {
      "op": "DUP3"
    },
    "4813": {
      "op": "ADD"
    },
    "4814": {
      "op": "MSTORE"
    },
    "4815": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4850": {
      "op": "DUP3"
    },
    "4851": {
      "op": "ADD"
    },
    "4852": {
      "op": "MSTORE"
    },
    "4853": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4861": {
      "op": "SHL"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4864": {
      "op": "DUP3"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "op": "MSTORE"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4869": {
      "op": "ADD"
    },
    "4870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "4873": {
      "op": "JUMP"
    },
    "4874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 45,
      "value": "0x1317"
    },
    "4878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "2"
    },
    "4883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1951"
    },
    "4886": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4888": {
      "op": "POP"
    },
    "4889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0x1"
    },
    "4891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4898": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4899": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4900": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6945,
        6949
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4902": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "SWAP1",
      "path": "21",
      "statement": 47
    },
    "4903": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4904": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4905": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7027
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "4907": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4909": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4910": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4912": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4913": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4914": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4915": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "4917": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7018,
        7041
      ],
      "op": "AND",
      "path": "21"
    },
    "4918": {
      "branch": 116,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7017,
        7041
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4919": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1352"
    },
    "4922": {
      "branch": 116,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4923": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4925": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4932": {
      "op": "SHL"
    },
    "4933": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4934": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4935": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4937": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "ADD",
      "path": "21"
    },
    "4938": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "4941": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4942": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2462"
    },
    "4945": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        7009,
        7173
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4946": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7009,
        7173
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4953": {
      "op": "SHL"
    },
    "4954": {
      "op": "SUB"
    },
    "4955": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 48
    },
    "4956": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "AND",
      "path": "21"
    },
    "4957": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4959": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4960": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4961": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4962": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7252
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "4964": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4966": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4967": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4969": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4970": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4971": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4972": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "4974": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7243,
        7263
      ],
      "op": "AND",
      "path": "21"
    },
    "4975": {
      "branch": 117,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7242,
        7263
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4976": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1462"
    },
    "4979": {
      "branch": 117,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4980": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4982": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4989": {
      "op": "SHL"
    },
    "4990": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4991": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4994": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4996": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4997": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "ADD",
      "path": "21"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5003": {
      "op": "DUP3"
    },
    "5004": {
      "op": "ADD"
    },
    "5005": {
      "op": "MSTORE"
    },
    "5006": {
      "op": "PUSH32",
      "value": "0x546865206164647265737320796F752061726520747279696E6720746F207365"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5041": {
      "op": "DUP3"
    },
    "5042": {
      "op": "ADD"
    },
    "5043": {
      "op": "MSTORE"
    },
    "5044": {
      "op": "PUSH32",
      "value": "0x6E64204348455320746F20686173206265656E20626C61636B6C697374656420"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5079": {
      "op": "DUP3"
    },
    "5080": {
      "op": "ADD"
    },
    "5081": {
      "op": "MSTORE"
    },
    "5082": {
      "op": "PUSH32",
      "value": "0x66726F6D2074726164696E6720746865204348455320746F6B656E2E20496620"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5117": {
      "op": "DUP3"
    },
    "5118": {
      "op": "ADD"
    },
    "5119": {
      "op": "MSTORE"
    },
    "5120": {
      "op": "PUSH32",
      "value": "0x796F75207468696E6B207468697320697320616E206572726F722C20706C6561"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5155": {
      "op": "DUP3"
    },
    "5156": {
      "op": "ADD"
    },
    "5157": {
      "op": "MSTORE"
    },
    "5158": {
      "op": "PUSH32",
      "value": "0x736520636F6E746163742074686520436861696E204573746174652044414F20"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5193": {
      "op": "DUP3"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "op": "MSTORE"
    },
    "5196": {
      "op": "PUSH5",
      "value": "0x3A32B0B697"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "5204": {
      "op": "SHL"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "5207": {
      "op": "DUP3"
    },
    "5208": {
      "op": "ADD"
    },
    "5209": {
      "op": "MSTORE"
    },
    "5210": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "5213": {
      "op": "ADD"
    },
    "5214": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "5217": {
      "op": "JUMP"
    },
    "5218": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7234,
        7433
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5219": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7575,
        7586
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x16"
    },
    "5221": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7575,
        7586
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5228": {
      "op": "SHL"
    },
    "5229": {
      "op": "SUB"
    },
    "5230": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7575,
        7586
      ],
      "op": "AND",
      "path": "21"
    },
    "5231": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5238": {
      "op": "SHL"
    },
    "5239": {
      "op": "SUB"
    },
    "5240": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7586
      ],
      "op": "AND",
      "path": "21"
    },
    "5241": {
      "branch": 118,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7586
      ],
      "op": "EQ",
      "path": "21"
    },
    "5242": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7621
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5243": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7621
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5244": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7621
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1495"
    },
    "5247": {
      "branch": 118,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7621
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5248": {
      "op": "POP"
    },
    "5249": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5250": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5252": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5253": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5254": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5255": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7607
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5257": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5259": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5260": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5262": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5263": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5264": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5265": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "5267": {
      "branch": 119,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7591,
        7621
      ],
      "op": "AND",
      "path": "21"
    },
    "5268": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7590,
        7621
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5269": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7621
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5270": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7653
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5271": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7653
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5272": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7653
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14BA"
    },
    "5275": {
      "branch": 119,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7653
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5276": {
      "op": "POP"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5283": {
      "op": "SHL"
    },
    "5284": {
      "op": "SUB"
    },
    "5285": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5286": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "AND",
      "path": "21"
    },
    "5287": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5289": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5290": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5291": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5292": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5294": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5296": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5297": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5299": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5300": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5301": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5302": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "5304": {
      "branch": 120,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7626,
        7653
      ],
      "op": "AND",
      "path": "21"
    },
    "5305": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7625,
        7653
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5306": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7559,
        7653
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5307": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7555,
        7826
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5308": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7555,
        7826
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1572"
    },
    "5311": {
      "branch": 120,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7555,
        7826
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5312": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7728,
        7731
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 49,
      "value": "0xA6"
    },
    "5314": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7725
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14CA"
    },
    "5317": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5319": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5320": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5321": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5322": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7725
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5323": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7731
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14D4"
    },
    "5326": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7731
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5327": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7731
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5328": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7731
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "5331": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        7712,
        7731
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5332": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7712,
        7731
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5333": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7701,
        7707
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5334": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7698
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14DE"
    },
    "5337": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7688,
        7697
      ],
      "op": "DUP6",
      "path": "21"
    },
    "5338": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7687
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "5341": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        7678,
        7698
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5342": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7698
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5343": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7707
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14E8"
    },
    "5346": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7707
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5347": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7707
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5348": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7707
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "5351": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        7678,
        7707
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5352": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7678,
        7707
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5353": {
      "branch": 121,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7677,
        7732
      ],
      "op": "LT",
      "path": "21"
    },
    "5354": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1572"
    },
    "5357": {
      "branch": 121,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5358": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5360": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5367": {
      "op": "SHL"
    },
    "5368": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5369": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5372": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "5374": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5375": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "ADD",
      "path": "21"
    },
    "5376": {
      "op": "MSTORE"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5381": {
      "op": "DUP3"
    },
    "5382": {
      "op": "ADD"
    },
    "5383": {
      "op": "MSTORE"
    },
    "5384": {
      "op": "PUSH32",
      "value": "0x596F752063616E27742068617665206D6F7265207468616E203225206F662074"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5419": {
      "op": "DUP3"
    },
    "5420": {
      "op": "ADD"
    },
    "5421": {
      "op": "MSTORE"
    },
    "5422": {
      "op": "PUSH32",
      "value": "0x686520746F74616C204348455320737570706C7920616674657220612050616E"
    },
    "5455": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5457": {
      "op": "DUP3"
    },
    "5458": {
      "op": "ADD"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "PUSH14",
      "value": "0x31B0B5B2A9BBB0B81039BBB0B817"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5477": {
      "op": "SHL"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5480": {
      "op": "DUP3"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "MSTORE"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5485": {
      "op": "ADD"
    },
    "5486": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "5489": {
      "op": "JUMP"
    },
    "5490": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7669,
        7815
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5491": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5492": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5494": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5495": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5496": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5497": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7947
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5499": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5501": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5502": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5504": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5505": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5506": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5507": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "5509": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "AND",
      "path": "21"
    },
    "5510": {
      "branch": 122,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7961
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5511": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7992
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15A8"
    },
    "5514": {
      "branch": 122,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7992
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5515": {
      "op": "POP"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5522": {
      "op": "SHL"
    },
    "5523": {
      "op": "SUB"
    },
    "5524": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5525": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "AND",
      "path": "21"
    },
    "5526": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5528": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5529": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5530": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5531": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7981
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5533": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5535": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5536": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5538": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5539": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5540": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5541": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "5543": {
      "branch": 123,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7965,
        7992
      ],
      "op": "AND",
      "path": "21"
    },
    "5544": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7931,
        7992
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5545": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7927,
        8086
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5546": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7927,
        8086
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15C0"
    },
    "5549": {
      "branch": 123,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7927,
        8086
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5550": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8008,
        8050
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 50,
      "value": "0x15B8"
    },
    "5553": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5554": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8032,
        8041
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5555": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8043,
        8049
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5556": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8008,
        8017
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B07"
    },
    "5559": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8008,
        8050
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5560": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8008,
        8050
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8071,
        8075
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 51,
      "value": "0x1"
    },
    "5564": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8064,
        8075
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x971"
    },
    "5567": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8064,
        8075
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5568": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        7927,
        8086
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5569": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8136,
        8157
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5571": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8205,
        8208
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "5573": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8170,
        8201
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x12"
    },
    "5575": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8170,
        8201
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5576": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8161,
        8167
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5577": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8161,
        8201
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15D2"
    },
    "5580": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8161,
        8201
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5581": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8161,
        8201
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5582": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8161,
        8201
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "5585": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8161,
        8201
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5586": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8161,
        8201
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5587": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8160,
        8208
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15DC"
    },
    "5590": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8160,
        8208
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5591": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8160,
        8208
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5592": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8160,
        8208
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "5595": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8160,
        8208
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5596": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8160,
        8208
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5597": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8136,
        8208
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5598": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8136,
        8208
      ],
      "op": "POP",
      "path": "21"
    },
    "5599": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8261,
        8281
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5601": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8317,
        8320
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "5603": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8294,
        8313
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x14"
    },
    "5605": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8294,
        8313
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5606": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8285,
        8291
      ],
      "op": "DUP6",
      "path": "21"
    },
    "5607": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8285,
        8313
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15F0"
    },
    "5610": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8285,
        8313
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5611": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8285,
        8313
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5612": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8285,
        8313
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "5615": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8285,
        8313
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5616": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8285,
        8313
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5617": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8284,
        8320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15FA"
    },
    "5620": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8284,
        8320
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5621": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8284,
        8320
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5622": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8284,
        8320
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "5625": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8284,
        8320
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5626": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8284,
        8320
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5627": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8261,
        8320
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5628": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8261,
        8320
      ],
      "op": "POP",
      "path": "21"
    },
    "5629": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8373,
        8393
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5631": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8429,
        8432
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x64"
    },
    "5633": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8406,
        8425
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x13"
    },
    "5635": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8406,
        8425
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5636": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8397,
        8403
      ],
      "op": "DUP7",
      "path": "21"
    },
    "5637": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8397,
        8425
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x160E"
    },
    "5640": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8397,
        8425
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5641": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8397,
        8425
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5642": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8397,
        8425
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "5645": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8397,
        8425
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5646": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8397,
        8425
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5647": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8396,
        8432
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1618"
    },
    "5650": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8396,
        8432
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5651": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8396,
        8432
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5652": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8396,
        8432
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "5655": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8396,
        8432
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5656": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8396,
        8432
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5657": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8373,
        8432
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5658": {
      "op": "POP"
    },
    "5659": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8501,
        8517
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5661": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8373,
        8432
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5662": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8548
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1627"
    },
    "5665": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8536,
        8548
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5666": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8533
      ],
      "op": "DUP7",
      "path": "21"
    },
    "5667": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8548
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "5670": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8520,
        8548
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5671": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8548
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5672": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8563
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1631"
    },
    "5675": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8563
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5676": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8563
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5677": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8563
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "5680": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8520,
        8563
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5681": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8520,
        8563
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5682": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8501,
        8563
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8637,
        8685
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 52,
      "value": "0x163E"
    },
    "5687": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5688": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8669,
        8673
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "5689": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8676,
        8684
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5690": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8637,
        8646
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B07"
    },
    "5693": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8637,
        8685
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5694": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8637,
        8685
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5695": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8696,
        8723
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5697": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8726,
        8750
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1649"
    },
    "5700": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8744,
        8748
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "5701": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8726,
        8735
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "5704": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8726,
        8750
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5705": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8726,
        8750
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5706": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8781,
        8792
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x16"
    },
    "5708": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8781,
        8792
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5709": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8696,
        8750
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5710": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8696,
        8750
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5718": {
      "op": "SHL"
    },
    "5719": {
      "op": "SUB"
    },
    "5720": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8781,
        8792
      ],
      "op": "AND",
      "path": "21"
    },
    "5721": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5728": {
      "op": "SHL"
    },
    "5729": {
      "op": "SUB"
    },
    "5730": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8765,
        8792
      ],
      "op": "AND",
      "path": "21"
    },
    "5731": {
      "branch": 124,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8765,
        8792
      ],
      "op": "EQ",
      "path": "21"
    },
    "5732": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8761,
        9153
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x16AB"
    },
    "5735": {
      "branch": 124,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8761,
        9153
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5736": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8859,
        8878
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x18"
    },
    "5738": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8859,
        8878
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5739": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8844,
        8855
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x16"
    },
    "5741": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8844,
        8855
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5742": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8856
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x167F"
    },
    "5745": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8856
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5752": {
      "op": "SHL"
    },
    "5753": {
      "op": "SUB"
    },
    "5754": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8844,
        8855
      ],
      "op": "AND",
      "path": "21"
    },
    "5755": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8843
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "5758": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8834,
        8856
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5759": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8856
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5760": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1689"
    },
    "5763": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8878
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5764": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8878
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5765": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8878
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "5768": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8834,
        8878
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5769": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8834,
        8878
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5770": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8812,
        8831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5771": {
      "branch": 125,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8812,
        8878
      ],
      "op": "GT",
      "path": "21"
    },
    "5772": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8808,
        8948
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5773": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8808,
        8948
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1699"
    },
    "5776": {
      "branch": 125,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8808,
        8948
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5777": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8898,
        8933
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 53,
      "value": "0x1699"
    },
    "5780": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8913,
        8932
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5781": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8898,
        8912
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CDB"
    },
    "5784": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        8898,
        8933
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5785": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8898,
        8933
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5786": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9007,
        9028
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "5787": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9046,
        9068
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5788": {
      "branch": 126,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9046,
        9068
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5789": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9042,
        9143
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x16A9"
    },
    "5792": {
      "branch": 126,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9042,
        9143
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5793": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9088,
        9128
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 54,
      "value": "0x16A9"
    },
    "5796": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9106,
        9127
      ],
      "op": "SELFBALANCE",
      "path": "21"
    },
    "5797": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9088,
        9105
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E44"
    },
    "5800": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        9088,
        9128
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5801": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9088,
        9128
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5802": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8794,
        9153
      ],
      "op": "POP",
      "path": "21"
    },
    "5803": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        8761,
        9153
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5804": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9224,
        9246
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5806": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9249,
        9266
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x16B7"
    },
    "5809": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9258,
        9266
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5810": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9249,
        9255
      ],
      "op": "DUP10",
      "path": "21"
    },
    "5811": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9249,
        9266
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x257A"
    },
    "5814": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        9249,
        9266
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5815": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9249,
        9266
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5816": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9224,
        9266
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5817": {
      "op": "POP"
    },
    "5818": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9276,
        9326
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 55,
      "value": "0x16C4"
    },
    "5821": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5822": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9300,
        9309
      ],
      "op": "DUP11",
      "path": "21"
    },
    "5823": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9311,
        9325
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5824": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9276,
        9285
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B07"
    },
    "5827": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        9276,
        9326
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5828": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9276,
        9326
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9343,
        9347
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 56,
      "value": "0x1"
    },
    "5832": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        9343,
        9347
      ],
      "op": "SWAP9",
      "path": "21"
    },
    "5833": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        6867,
        9354
      ],
      "op": "SWAP8",
      "path": "21"
    },
    "5834": {
      "op": "POP"
    },
    "5835": {
      "op": "POP"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "op": "POP"
    },
    "5839": {
      "op": "POP"
    },
    "5840": {
      "op": "POP"
    },
    "5841": {
      "op": "POP"
    },
    "5842": {
      "fn": "ChainEstateToken.transfer",
      "jump": "o",
      "offset": [
        6867,
        9354
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5843": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5844": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5846": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5853": {
      "op": "SHL"
    },
    "5854": {
      "op": "SUB"
    },
    "5855": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5856": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5857": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5858": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16FD"
    },
    "5861": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5864": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5874": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "5880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5881": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "5884": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5886": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19362
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 57,
      "value": "0x17"
    },
    "5888": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5889": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5896": {
      "op": "SHL"
    },
    "5897": {
      "op": "SUB"
    },
    "5898": {
      "op": "NOT"
    },
    "5899": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "AND",
      "path": "21"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "op": "SUB"
    },
    "5908": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "5909": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5910": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "5911": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "AND",
      "path": "21"
    },
    "5912": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5913": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5914": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5915": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "OR",
      "path": "21"
    },
    "5916": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5917": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "offset": [
        19337,
        19382
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5918": {
      "fn": "ChainEstateToken.setTokenClaimContractAddress",
      "jump": "o",
      "offset": [
        19245,
        19389
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5919": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5920": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5922": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "op": "SUB"
    },
    "5931": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5932": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5933": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5934": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1749"
    },
    "5937": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5938": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5940": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5947": {
      "op": "SHL"
    },
    "5948": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5949": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5950": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5952": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5953": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "5956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "5960": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5961": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5968": {
      "op": "SHL"
    },
    "5969": {
      "op": "SUB"
    },
    "5970": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "AND",
      "path": "21",
      "statement": 58
    },
    "5971": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6587,
        6592
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5973": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5974": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5975": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5976": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6578
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5978": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5980": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5981": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5983": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5984": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6584
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5985": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6592
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5986": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6592
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5989": {
      "op": "NOT"
    },
    "5990": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6592
      ],
      "op": "AND",
      "path": "21"
    },
    "5991": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6592
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5992": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        6562,
        6592
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5993": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "o",
      "offset": [
        6493,
        6599
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5994": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5995": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5997": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6004": {
      "op": "SHL"
    },
    "6005": {
      "op": "SUB"
    },
    "6006": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6007": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6008": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6009": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1794"
    },
    "6012": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6013": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6015": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6022": {
      "op": "SHL"
    },
    "6023": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6025": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6027": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6028": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "6031": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6032": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "6035": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6036": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6037": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17214,
        17215
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 59,
      "value": "0x5"
    },
    "6039": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17184,
        17210
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6040": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17184,
        17215
      ],
      "op": "GT",
      "path": "21"
    },
    "6041": {
      "branch": 127,
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17184,
        17215
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6042": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1802"
    },
    "6045": {
      "branch": 127,
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6046": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "6048": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6055": {
      "op": "SHL"
    },
    "6056": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6057": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6060": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "6062": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6063": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "ADD",
      "path": "21"
    },
    "6064": {
      "op": "MSTORE"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6069": {
      "op": "DUP3"
    },
    "6070": {
      "op": "ADD"
    },
    "6071": {
      "op": "MSTORE"
    },
    "6072": {
      "op": "PUSH32",
      "value": "0x54686520646576656C6F706572207472616E73616374696F6E20666565206361"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6107": {
      "op": "DUP3"
    },
    "6108": {
      "op": "ADD"
    },
    "6109": {
      "op": "MSTORE"
    },
    "6110": {
      "op": "PUSH20",
      "value": "0x3713BA1031329036B7B932903A3430B7101A9297"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "6133": {
      "op": "SHL"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6136": {
      "op": "DUP3"
    },
    "6137": {
      "op": "ADD"
    },
    "6138": {
      "op": "MSTORE"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A7"
    },
    "6145": {
      "op": "JUMP"
    },
    "6146": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17176,
        17272
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6147": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17282,
        17301
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 60,
      "value": "0x13"
    },
    "6149": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17282,
        17330
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6150": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17282,
        17330
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6151": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17282,
        17330
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "6152": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 61,
      "value": "0x40"
    },
    "6154": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6155": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17304,
        17330
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6156": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17304,
        17330
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6157": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x4BEE3C216A701857ABD67FED754EFDD065A8599BE5476E2C4B118FB1896B9FFA"
    },
    "6190": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6191": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6193": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6194": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17345,
        17403
      ],
      "op": "LOG2",
      "path": "21"
    },
    "6195": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "offset": [
        17074,
        17410
      ],
      "op": "POP",
      "path": "21"
    },
    "6196": {
      "fn": "ChainEstateToken.updateDeveloperTransactionFee",
      "jump": "o",
      "offset": [
        17074,
        17410
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6198": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6200": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6207": {
      "op": "SHL"
    },
    "6208": {
      "op": "SUB"
    },
    "6209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6210": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6211": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6212": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185F"
    },
    "6215": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6216": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6218": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6225": {
      "op": "SHL"
    },
    "6226": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6227": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "6234": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "6238": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6239": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6246": {
      "op": "SHL"
    },
    "6247": {
      "op": "SUB"
    },
    "6248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 62
    },
    "6249": {
      "branch": 140,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "6250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C4"
    },
    "6253": {
      "branch": 140,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6263": {
      "op": "SHL"
    },
    "6264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6270": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "6272": {
      "op": "MSTORE"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6277": {
      "op": "DUP3"
    },
    "6278": {
      "op": "ADD"
    },
    "6279": {
      "op": "MSTORE"
    },
    "6280": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6315": {
      "op": "DUP3"
    },
    "6316": {
      "op": "ADD"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6327": {
      "op": "SHL"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6330": {
      "op": "DUP3"
    },
    "6331": {
      "op": "ADD"
    },
    "6332": {
      "op": "MSTORE"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6335": {
      "op": "ADD"
    },
    "6336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "6339": {
      "op": "JUMP"
    },
    "6340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 63,
      "value": "0x11F6"
    },
    "6344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2049"
    },
    "6348": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6349": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6350": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6352": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6359": {
      "op": "SHL"
    },
    "6360": {
      "op": "SUB"
    },
    "6361": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6362": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6363": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6364": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F7"
    },
    "6367": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6370": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6377": {
      "op": "SHL"
    },
    "6378": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6380": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "6386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6387": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "6390": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6392": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14727,
        14746
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 64,
      "value": "0x18"
    },
    "6394": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "offset": [
        14727,
        14759
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "6395": {
      "fn": "ChainEstateToken.setContractCHESDivisor",
      "jump": "o",
      "offset": [
        14648,
        14766
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6396": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6397": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "6399": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6406": {
      "op": "SHL"
    },
    "6407": {
      "op": "SUB"
    },
    "6408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6409": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6410": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6411": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1926"
    },
    "6414": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6424": {
      "op": "SHL"
    },
    "6425": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "6433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2591"
    },
    "6437": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6445": {
      "op": "SHL"
    },
    "6446": {
      "op": "SUB"
    },
    "6447": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "SWAP2",
      "path": "21",
      "statement": 65
    },
    "6448": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6449": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6450": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "AND",
      "path": "21"
    },
    "6451": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6453": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6454": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6455": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6456": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15789
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "6458": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6460": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6461": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "6463": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6464": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15795
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "6465": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6466": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6469": {
      "op": "NOT"
    },
    "6470": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "AND",
      "path": "21"
    },
    "6471": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6472": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6473": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6474": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6475": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6476": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6477": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "OR",
      "path": "21"
    },
    "6478": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6479": {
      "fn": "ChainEstateToken.updateBlackList",
      "offset": [
        15780,
        15809
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "6480": {
      "fn": "ChainEstateToken.updateBlackList",
      "jump": "o",
      "offset": [
        15696,
        15816
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6481": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6488": {
      "op": "SHL"
    },
    "6489": {
      "op": "SUB"
    },
    "6490": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 66
    },
    "6491": {
      "branch": 130,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "2"
    },
    "6492": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B3"
    },
    "6495": {
      "branch": 130,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6496": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6498": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6505": {
      "op": "SHL"
    },
    "6506": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6507": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6510": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6512": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6513": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "2"
    },
    "6514": {
      "op": "MSTORE"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6517": {
      "op": "DUP1"
    },
    "6518": {
      "op": "DUP3"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "op": "MSTORE"
    },
    "6521": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6556": {
      "op": "DUP3"
    },
    "6557": {
      "op": "ADD"
    },
    "6558": {
      "op": "MSTORE"
    },
    "6559": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6566": {
      "op": "SHL"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6569": {
      "op": "DUP3"
    },
    "6570": {
      "op": "ADD"
    },
    "6571": {
      "op": "MSTORE"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6574": {
      "op": "ADD"
    },
    "6575": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "6578": {
      "op": "JUMP"
    },
    "6579": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6586": {
      "op": "SHL"
    },
    "6587": {
      "op": "SUB"
    },
    "6588": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 67
    },
    "6589": {
      "branch": 131,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "2"
    },
    "6590": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A14"
    },
    "6593": {
      "branch": 131,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6594": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6596": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6603": {
      "op": "SHL"
    },
    "6604": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6605": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6608": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6610": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6611": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6617": {
      "op": "DUP3"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "op": "MSTORE"
    },
    "6620": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6655": {
      "op": "DUP3"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "op": "MSTORE"
    },
    "6658": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6663": {
      "op": "SHL"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6666": {
      "op": "DUP3"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "MSTORE"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6671": {
      "op": "ADD"
    },
    "6672": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "6675": {
      "op": "JUMP"
    },
    "6676": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6683": {
      "op": "SHL"
    },
    "6684": {
      "op": "SUB"
    },
    "6685": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 68
    },
    "6686": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6687": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "2"
    },
    "6688": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6690": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6691": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6692": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6693": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6695": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6697": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6698": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6699": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6700": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6702": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6703": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6704": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6705": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6706": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6707": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "2"
    },
    "6708": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6709": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6710": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6711": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6712": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6713": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6714": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6715": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6716": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6717": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6718": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6719": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6720": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6721": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 69
    },
    "6722": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6723": {
      "op": "DUP5"
    },
    "6724": {
      "op": "DUP2"
    },
    "6725": {
      "op": "MSTORE"
    },
    "6726": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6759": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6760": {
      "op": "ADD"
    },
    "6761": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6763": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6764": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6765": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6766": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "2"
    },
    "6767": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6768": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6769": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "6770": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "6771": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "2"
    },
    "6772": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6773": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6780": {
      "op": "SHL"
    },
    "6781": {
      "op": "SUB"
    },
    "6782": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6783": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6784": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "2"
    },
    "6785": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6787": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6788": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6789": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6790": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6792": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6794": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6795": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6796": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6797": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6799": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6800": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6801": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6802": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6803": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6804": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "2"
    },
    "6805": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6806": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6807": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6808": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6809": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6810": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6811": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6814": {
      "op": "NOT"
    },
    "6815": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6816": {
      "branch": 132,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "2"
    },
    "6817": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B01"
    },
    "6820": {
      "branch": 132,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6821": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 70
    },
    "6822": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6823": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "2"
    },
    "6824": {
      "branch": 133,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6825": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF4"
    },
    "6828": {
      "branch": 133,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6829": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6831": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6838": {
      "op": "SHL"
    },
    "6839": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6840": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6843": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6845": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6846": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "2"
    },
    "6847": {
      "op": "MSTORE"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6852": {
      "op": "DUP3"
    },
    "6853": {
      "op": "ADD"
    },
    "6854": {
      "op": "MSTORE"
    },
    "6855": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6890": {
      "op": "DUP3"
    },
    "6891": {
      "op": "ADD"
    },
    "6892": {
      "op": "MSTORE"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6895": {
      "op": "ADD"
    },
    "6896": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "6899": {
      "op": "JUMP"
    },
    "6900": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6901": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 71,
      "value": "0x1B01"
    },
    "6904": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6905": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6906": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6907": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6908": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "2"
    },
    "6909": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1951"
    },
    "6912": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6913": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6914": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6915": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6916": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6917": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "2"
    },
    "6918": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6919": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6926": {
      "op": "SHL"
    },
    "6927": {
      "op": "SUB"
    },
    "6928": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 72
    },
    "6929": {
      "branch": 134,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "2"
    },
    "6930": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6B"
    },
    "6933": {
      "branch": 134,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6934": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6936": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6943": {
      "op": "SHL"
    },
    "6944": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6945": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6948": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6950": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6951": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "2"
    },
    "6952": {
      "op": "MSTORE"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6957": {
      "op": "DUP3"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "op": "MSTORE"
    },
    "6960": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6995": {
      "op": "DUP3"
    },
    "6996": {
      "op": "ADD"
    },
    "6997": {
      "op": "MSTORE"
    },
    "6998": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7006": {
      "op": "SHL"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7009": {
      "op": "DUP3"
    },
    "7010": {
      "op": "ADD"
    },
    "7011": {
      "op": "MSTORE"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7014": {
      "op": "ADD"
    },
    "7015": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "7018": {
      "op": "JUMP"
    },
    "7019": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7026": {
      "op": "SHL"
    },
    "7027": {
      "op": "SUB"
    },
    "7028": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 73
    },
    "7029": {
      "branch": 135,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "2"
    },
    "7030": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BCD"
    },
    "7033": {
      "branch": 135,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7034": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7036": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7043": {
      "op": "SHL"
    },
    "7044": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7045": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7048": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7050": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7051": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "2"
    },
    "7052": {
      "op": "MSTORE"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7057": {
      "op": "DUP3"
    },
    "7058": {
      "op": "ADD"
    },
    "7059": {
      "op": "MSTORE"
    },
    "7060": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7095": {
      "op": "DUP3"
    },
    "7096": {
      "op": "ADD"
    },
    "7097": {
      "op": "MSTORE"
    },
    "7098": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7104": {
      "op": "SHL"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7107": {
      "op": "DUP3"
    },
    "7108": {
      "op": "ADD"
    },
    "7109": {
      "op": "MSTORE"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7112": {
      "op": "ADD"
    },
    "7113": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "7116": {
      "op": "JUMP"
    },
    "7117": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7124": {
      "op": "SHL"
    },
    "7125": {
      "op": "SUB"
    },
    "7126": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7127": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "2"
    },
    "7128": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7130": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7131": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7132": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7133": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7135": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7136": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7137": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7138": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7140": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7141": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7142": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7143": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 74
    },
    "7144": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7145": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "2"
    },
    "7146": {
      "branch": 136,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7147": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C45"
    },
    "7150": {
      "branch": 136,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7151": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7153": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7160": {
      "op": "SHL"
    },
    "7161": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7162": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7165": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7167": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7168": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "2"
    },
    "7169": {
      "op": "MSTORE"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7174": {
      "op": "DUP3"
    },
    "7175": {
      "op": "ADD"
    },
    "7176": {
      "op": "MSTORE"
    },
    "7177": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7212": {
      "op": "DUP3"
    },
    "7213": {
      "op": "ADD"
    },
    "7214": {
      "op": "MSTORE"
    },
    "7215": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7224": {
      "op": "SHL"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7227": {
      "op": "DUP3"
    },
    "7228": {
      "op": "ADD"
    },
    "7229": {
      "op": "MSTORE"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7232": {
      "op": "ADD"
    },
    "7233": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "7236": {
      "op": "JUMP"
    },
    "7237": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7244": {
      "op": "SHL"
    },
    "7245": {
      "op": "SUB"
    },
    "7246": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 75
    },
    "7247": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7248": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "2"
    },
    "7249": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7251": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7252": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7253": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7254": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7256": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7257": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7258": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7259": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7261": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7262": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7263": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7264": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7265": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7266": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "2"
    },
    "7267": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7268": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7269": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 76
    },
    "7270": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7271": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "2"
    },
    "7272": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7273": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7274": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7275": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7276": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7277": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7278": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7279": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7280": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7281": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7282": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C7C"
    },
    "7285": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7286": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7287": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7288": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2562"
    },
    "7291": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7292": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7293": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7294": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "7295": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "7296": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7297": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7298": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7299": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "2"
    },
    "7300": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 77
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7307": {
      "op": "SHL"
    },
    "7308": {
      "op": "SUB"
    },
    "7309": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "7310": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7317": {
      "op": "SHL"
    },
    "7318": {
      "op": "SUB"
    },
    "7319": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "2"
    },
    "7320": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7353": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7354": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7356": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7357": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC8"
    },
    "7360": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7361": {
      "op": "DUP2"
    },
    "7362": {
      "op": "MSTORE"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7365": {
      "op": "ADD"
    },
    "7366": {
      "op": "SWAP1"
    },
    "7367": {
      "op": "JUMP"
    },
    "7368": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7369": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7371": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7372": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7373": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7374": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "2"
    },
    "7375": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7376": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "2"
    },
    "7377": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 78,
      "value": "0x1B01"
    },
    "7380": {
      "fn": "ERC20._transfer",
      "offset": [
        8115,
        8119
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7381": {
      "fn": "ERC20._transfer",
      "offset": [
        8121,
        8123
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7382": {
      "fn": "ERC20._transfer",
      "offset": [
        8125,
        8131
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7383": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8114
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21EC"
    },
    "7386": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8095,
        8132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7387": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12322,
        12758
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7388": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7390": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7391": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7392": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12418,
        12419
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "7394": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7395": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7396": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7397": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "7399": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7400": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "ADD",
      "path": "21"
    },
    "7401": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7402": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7403": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12380,
        12401
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7405": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12380,
        12401
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7406": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "7408": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7409": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "ADD",
      "path": "21"
    },
    "7410": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7411": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7412": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "7413": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7414": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "CALLDATACOPY",
      "path": "21"
    },
    "7415": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "ADD",
      "path": "21"
    },
    "7416": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7417": {
      "op": "POP"
    },
    "7418": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12404,
        12420
      ],
      "op": "POP",
      "path": "21"
    },
    "7419": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12380,
        12420
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7420": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12380,
        12420
      ],
      "op": "POP",
      "path": "21"
    },
    "7421": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12448,
        12452
      ],
      "op": "ADDRESS",
      "path": "21",
      "statement": 79
    },
    "7422": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12434
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7423": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12435,
        12436
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7425": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7426": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7427": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7428": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "LT",
      "path": "21"
    },
    "7429": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D10"
    },
    "7432": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7433": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D10"
    },
    "7436": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x25C6"
    },
    "7439": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "jump": "i",
      "offset": [
        12430,
        12437
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7440": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "op": "SUB"
    },
    "7449": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7450": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7451": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "AND",
      "path": "21"
    },
    "7452": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "7454": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7455": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7456": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "MUL",
      "path": "21"
    },
    "7457": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7458": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7459": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7460": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "ADD",
      "path": "21"
    },
    "7461": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7462": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "ADD",
      "path": "21"
    },
    "7463": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7464": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7465": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7466": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12453
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7467": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 80,
      "value": "0x15"
    },
    "7469": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7470": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7472": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7473": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7474": {
      "op": "PUSH4",
      "value": "0x15AB88C9"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7481": {
      "op": "SHL"
    },
    "7482": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7483": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7484": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7485": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7486": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7487": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7488": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "7489": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "AND",
      "path": "21"
    },
    "7490": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7491": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12491
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xAD5C4648"
    },
    "7496": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12491
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7497": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "7499": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7500": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7501": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ADD",
      "path": "21"
    },
    "7502": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "7503": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7504": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12430,
        12437
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7505": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7506": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7507": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SUB",
      "path": "21"
    },
    "7508": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ADD",
      "path": "21"
    },
    "7509": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7510": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12486
      ],
      "op": "DUP7",
      "path": "21"
    },
    "7511": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7512": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "EXTCODESIZE",
      "path": "21"
    },
    "7513": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7514": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7515": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7516": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D64"
    },
    "7519": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7520": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7522": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7523": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "REVERT",
      "path": "21"
    },
    "7524": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7525": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "POP",
      "path": "21"
    },
    "7526": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "GAS",
      "path": "21"
    },
    "7527": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "STATICCALL",
      "path": "21"
    },
    "7528": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7529": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7530": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7531": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D78"
    },
    "7534": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7535": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7536": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7538": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7539": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "7540": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7541": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7543": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "REVERT",
      "path": "21"
    },
    "7544": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7545": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "POP",
      "path": "21"
    },
    "7546": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "POP",
      "path": "21"
    },
    "7547": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "POP",
      "path": "21"
    },
    "7548": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "POP",
      "path": "21"
    },
    "7549": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7551": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7552": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7553": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "7555": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "NOT",
      "path": "21"
    },
    "7556": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "7558": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7559": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ADD",
      "path": "21"
    },
    "7560": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "AND",
      "path": "21"
    },
    "7561": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7562": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ADD",
      "path": "21"
    },
    "7563": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7564": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7566": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7567": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "POP",
      "path": "21"
    },
    "7568": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7569": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "ADD",
      "path": "21"
    },
    "7570": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7571": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D9C"
    },
    "7574": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7575": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7576": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x25DC"
    },
    "7579": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "jump": "i",
      "offset": [
        12473,
        12493
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7580": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12473,
        12493
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7581": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12467
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7582": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12468,
        12469
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "7584": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7585": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7586": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7587": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "LT",
      "path": "21"
    },
    "7588": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1DAF"
    },
    "7591": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7592": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1DAF"
    },
    "7595": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x25C6"
    },
    "7598": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "jump": "i",
      "offset": [
        12463,
        12470
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7599": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7606": {
      "op": "SHL"
    },
    "7607": {
      "op": "SUB"
    },
    "7608": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12493
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7609": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12493
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7610": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12493
      ],
      "op": "AND",
      "path": "21"
    },
    "7611": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "7613": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7614": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7615": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "MUL",
      "path": "21"
    },
    "7616": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7617": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7618": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7619": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "ADD",
      "path": "21"
    },
    "7620": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12470
      ],
      "op": "ADD",
      "path": "21"
    },
    "7621": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12463,
        12493
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7622": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12535,
        12548
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 81,
      "value": "0x15"
    },
    "7624": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12535,
        12548
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7625": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12503,
        12558
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1DD5"
    },
    "7628": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12503,
        12558
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7629": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12520,
        12524
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "7630": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12520,
        12524
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7631": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12535,
        12548
      ],
      "op": "AND",
      "path": "21"
    },
    "7632": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12551,
        12557
      ],
      "op": "DUP5",
      "path": "21"
    },
    "7633": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12503,
        12511
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1951"
    },
    "7636": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "jump": "i",
      "offset": [
        12503,
        12558
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7637": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12503,
        12558
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7638": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 82,
      "value": "0x15"
    },
    "7640": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7641": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7643": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7644": {
      "op": "PUSH4",
      "value": "0x791AC947"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7651": {
      "op": "SHL"
    },
    "7652": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7653": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7660": {
      "op": "SHL"
    },
    "7661": {
      "op": "SUB"
    },
    "7662": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7663": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7664": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "AND",
      "path": "21"
    },
    "7665": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7666": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12632
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x791AC947"
    },
    "7671": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12632
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7672": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E0E"
    },
    "7675": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7676": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12646,
        12652
      ],
      "op": "DUP6",
      "path": "21"
    },
    "7677": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12646,
        12652
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7678": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7680": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12581
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7681": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12681,
        12685
      ],
      "op": "DUP7",
      "path": "21"
    },
    "7682": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12681,
        12685
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7683": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12707,
        12711
      ],
      "op": "ADDRESS",
      "path": "21"
    },
    "7684": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12707,
        12711
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7685": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12726,
        12741
      ],
      "op": "TIMESTAMP",
      "path": "21"
    },
    "7686": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12726,
        12741
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7687": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "7689": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "ADD",
      "path": "21"
    },
    "7690": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x25F9"
    },
    "7693": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "jump": "i",
      "offset": [
        12568,
        12751
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7694": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7695": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7697": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7699": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7700": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7701": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7702": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "SUB",
      "path": "21"
    },
    "7703": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7704": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7706": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP8",
      "path": "21"
    },
    "7707": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7708": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "EXTCODESIZE",
      "path": "21"
    },
    "7709": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7710": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7711": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7712": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E28"
    },
    "7715": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7716": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7718": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7719": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "REVERT",
      "path": "21"
    },
    "7720": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7721": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "POP",
      "path": "21"
    },
    "7722": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "GAS",
      "path": "21"
    },
    "7723": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "CALL",
      "path": "21"
    },
    "7724": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7725": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7726": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7727": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E3C"
    },
    "7730": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7731": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7732": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7734": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7735": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "7736": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7737": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7739": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "REVERT",
      "path": "21"
    },
    "7740": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7741": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "POP",
      "path": "21"
    },
    "7742": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "POP",
      "path": "21"
    },
    "7743": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "POP",
      "path": "21"
    },
    "7744": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12568,
        12751
      ],
      "op": "POP",
      "path": "21"
    },
    "7745": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12370,
        12758
      ],
      "op": "POP",
      "path": "21"
    },
    "7746": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "offset": [
        12322,
        12758
      ],
      "op": "POP",
      "path": "21"
    },
    "7747": {
      "fn": "ChainEstateToken.swapCHESForBNB",
      "jump": "o",
      "offset": [
        12322,
        12758
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7748": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12896,
        13323
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7749": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12957,
        12973
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7751": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13032,
        13051
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x13"
    },
    "7753": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13032,
        13051
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7754": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13010,
        13029
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x14"
    },
    "7756": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13010,
        13029
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7757": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13007
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x12"
    },
    "7759": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13007
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7760": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13029
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E59"
    },
    "7763": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13029
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7764": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13029
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7765": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13029
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "7768": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12976,
        13029
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7769": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13029
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7770": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13051
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E63"
    },
    "7773": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13051
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7774": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13051
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7775": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13051
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "7778": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        12976,
        13051
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7779": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12976,
        13051
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7780": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13084
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 83,
      "value": "0xC"
    },
    "7782": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13084
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7783": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13104,
        13135
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x12"
    },
    "7785": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13104,
        13135
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7786": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12957,
        13051
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7787": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12957,
        13051
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7788": {
      "op": "POP"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7795": {
      "op": "SHL"
    },
    "7796": {
      "op": "SUB"
    },
    "7797": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13084
      ],
      "op": "AND",
      "path": "21"
    },
    "7798": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13084
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7799": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FC"
    },
    "7802": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7803": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12957,
        13051
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7804": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        12957,
        13051
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7805": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13095,
        13135
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E86"
    },
    "7808": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13095,
        13135
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7809": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13095,
        13101
      ],
      "op": "DUP7",
      "path": "21"
    },
    "7810": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13095,
        13135
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "7813": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13095,
        13135
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7814": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13095,
        13135
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7815": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13094,
        13147
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E90"
    },
    "7818": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13094,
        13147
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7819": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13094,
        13147
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7820": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13094,
        13147
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "7823": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13094,
        13147
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7824": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13094,
        13147
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7825": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7827": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7828": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7829": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7830": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7831": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7832": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "MUL",
      "path": "21"
    },
    "7833": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7834": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7836": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7837": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7838": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7839": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP6",
      "path": "21"
    },
    "7840": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP9",
      "path": "21"
    },
    "7841": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP9",
      "path": "21"
    },
    "7842": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "CALL",
      "path": "21"
    },
    "7843": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "7844": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "POP",
      "path": "21"
    },
    "7845": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "POP",
      "path": "21"
    },
    "7846": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "POP",
      "path": "21"
    },
    "7847": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "POP",
      "path": "21"
    },
    "7848": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7849": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7850": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7851": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EB8"
    },
    "7854": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7855": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7856": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7858": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7859": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "7860": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7861": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7863": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "REVERT",
      "path": "21"
    },
    "7864": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13061,
        13148
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7865": {
      "op": "POP"
    },
    "7866": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13180
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 84,
      "value": "0xE"
    },
    "7868": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13180
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7869": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13200,
        13219
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x14"
    },
    "7871": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13200,
        13219
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7878": {
      "op": "SHL"
    },
    "7879": {
      "op": "SUB"
    },
    "7880": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13180
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7881": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13180
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7882": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13180
      ],
      "op": "AND",
      "path": "21"
    },
    "7883": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13180
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7884": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FC"
    },
    "7887": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7888": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13223,
        13231
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7889": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13223,
        13231
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7890": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13191,
        13219
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EDB"
    },
    "7893": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13191,
        13219
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7894": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13191,
        13197
      ],
      "op": "DUP7",
      "path": "21"
    },
    "7895": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13191,
        13219
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "7898": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13191,
        13219
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7899": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13191,
        13219
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7900": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13190,
        13231
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EE5"
    },
    "7903": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13190,
        13231
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7904": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13190,
        13231
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7905": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13190,
        13231
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "7908": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13190,
        13231
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7909": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13190,
        13231
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7910": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7912": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7913": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7914": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7915": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7916": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "7917": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "MUL",
      "path": "21"
    },
    "7918": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7919": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7921": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7922": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7923": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7924": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP6",
      "path": "21"
    },
    "7925": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP9",
      "path": "21"
    },
    "7926": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP9",
      "path": "21"
    },
    "7927": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "CALL",
      "path": "21"
    },
    "7928": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "7929": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "POP",
      "path": "21"
    },
    "7930": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "POP",
      "path": "21"
    },
    "7931": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "POP",
      "path": "21"
    },
    "7932": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "POP",
      "path": "21"
    },
    "7933": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7934": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7935": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7936": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F0D"
    },
    "7939": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7940": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7941": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7943": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7944": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "7945": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "7946": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7948": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "REVERT",
      "path": "21"
    },
    "7949": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13158,
        13232
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7950": {
      "op": "POP"
    },
    "7951": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13264
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 85,
      "value": "0xF"
    },
    "7953": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13264
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7954": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13284,
        13303
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x13"
    },
    "7956": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13284,
        13303
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7963": {
      "op": "SHL"
    },
    "7964": {
      "op": "SUB"
    },
    "7965": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13264
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7966": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13264
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7967": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13264
      ],
      "op": "AND",
      "path": "21"
    },
    "7968": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13264
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7969": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8FC"
    },
    "7972": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7973": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13307,
        13315
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7974": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13307,
        13315
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7975": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13275,
        13303
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F30"
    },
    "7978": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13275,
        13303
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7979": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13275,
        13281
      ],
      "op": "DUP7",
      "path": "21"
    },
    "7980": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13275,
        13303
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "7983": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13275,
        13303
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7984": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13275,
        13303
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7985": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13274,
        13315
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F3A"
    },
    "7988": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13274,
        13315
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7989": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13274,
        13315
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7990": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13274,
        13315
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "7993": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "jump": "i",
      "offset": [
        13274,
        13315
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7994": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13274,
        13315
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7995": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "7997": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7998": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7999": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8000": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8001": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "8002": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "MUL",
      "path": "21"
    },
    "8003": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "8004": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8006": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8007": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8008": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8009": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP6",
      "path": "21"
    },
    "8010": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP9",
      "path": "21"
    },
    "8011": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP9",
      "path": "21"
    },
    "8012": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "CALL",
      "path": "21"
    },
    "8013": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "8014": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "POP",
      "path": "21"
    },
    "8015": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "POP",
      "path": "21"
    },
    "8016": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "POP",
      "path": "21"
    },
    "8017": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "POP",
      "path": "21"
    },
    "8018": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8019": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP1",
      "path": "21"
    },
    "8020": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8021": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFB6"
    },
    "8024": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8025": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "8026": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8028": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "DUP1",
      "path": "21"
    },
    "8029": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "8030": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "8031": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8033": {
      "fn": "ChainEstateToken.sendFeesToWallets",
      "offset": [
        13242,
        13316
      ],
      "op": "REVERT",
      "path": "21"
    },
    "8034": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8041": {
      "op": "SHL"
    },
    "8042": {
      "op": "SUB"
    },
    "8043": {
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 86
    },
    "8044": {
      "branch": 137,
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "AND",
      "path": "2"
    },
    "8045": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB8"
    },
    "8048": {
      "branch": 137,
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8049": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8051": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8058": {
      "op": "SHL"
    },
    "8059": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8060": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8063": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8065": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8066": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "ADD",
      "path": "2"
    },
    "8067": {
      "op": "MSTORE"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8072": {
      "op": "DUP3"
    },
    "8073": {
      "op": "ADD"
    },
    "8074": {
      "op": "MSTORE"
    },
    "8075": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8110": {
      "op": "DUP3"
    },
    "8111": {
      "op": "ADD"
    },
    "8112": {
      "op": "MSTORE"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8115": {
      "op": "ADD"
    },
    "8116": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "8119": {
      "op": "JUMP"
    },
    "8120": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8121": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8648
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 87
    },
    "8122": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8124": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8126": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8127": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8128": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8129": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FCA"
    },
    "8132": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8133": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8134": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2562"
    },
    "8137": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8138": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8139": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8140": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8141": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8142": {
      "op": "POP"
    },
    "8143": {
      "op": "POP"
    },
    "8144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8150": {
      "op": "SHL"
    },
    "8151": {
      "op": "SUB"
    },
    "8152": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 88
    },
    "8153": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "AND",
      "path": "2"
    },
    "8154": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8156": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8157": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8158": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8159": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8161": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8162": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8163": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8164": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8166": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8167": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8168": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8169": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8170": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8171": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8172": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8173": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF7"
    },
    "8176": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8177": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8178": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8179": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2562"
    },
    "8182": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8183": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8184": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8185": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8186": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x40"
    },
    "8191": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8192": {
      "op": "DUP2"
    },
    "8193": {
      "op": "DUP2"
    },
    "8194": {
      "op": "MSTORE"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8201": {
      "op": "SHL"
    },
    "8202": {
      "op": "SUB"
    },
    "8203": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8204": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "AND",
      "path": "2"
    },
    "8205": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8206": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8208": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8209": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8242": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8245": {
      "op": "ADD"
    },
    "8246": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8248": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8249": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8250": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8251": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SUB",
      "path": "2"
    },
    "8252": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8253": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8254": {
      "fn": "ERC20._mint",
      "offset": [
        8749,
        8797
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 90,
      "value": "0xE33"
    },
    "8257": {
      "fn": "ERC20._mint",
      "offset": [
        8777,
        8778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8259": {
      "fn": "ERC20._mint",
      "offset": [
        8781,
        8788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8260": {
      "fn": "ERC20._mint",
      "offset": [
        8790,
        8796
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8261": {
      "fn": "ERC20._mint",
      "offset": [
        8749,
        8768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21EC"
    },
    "8264": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8749,
        8797
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8265": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8266": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "8268": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8269": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8276": {
      "op": "SHL"
    },
    "8277": {
      "op": "SUB"
    },
    "8278": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 91
    },
    "8279": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8287": {
      "op": "SHL"
    },
    "8288": {
      "op": "SUB"
    },
    "8289": {
      "op": "NOT"
    },
    "8290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8292": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "8294": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8295": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8296": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8297": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x40"
    },
    "8299": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "8302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8304": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8305": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8306": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8339": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8340": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8342": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8343": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8344": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8345": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8346": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8347": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8354": {
      "op": "SHL"
    },
    "8355": {
      "op": "SUB"
    },
    "8356": {
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 93
    },
    "8357": {
      "branch": 138,
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "AND",
      "path": "2"
    },
    "8358": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20FB"
    },
    "8361": {
      "branch": 138,
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8362": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8364": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8371": {
      "op": "SHL"
    },
    "8372": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8373": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8376": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8378": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8379": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "ADD",
      "path": "2"
    },
    "8380": {
      "op": "MSTORE"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8385": {
      "op": "DUP3"
    },
    "8386": {
      "op": "ADD"
    },
    "8387": {
      "op": "MSTORE"
    },
    "8388": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8423": {
      "op": "DUP3"
    },
    "8424": {
      "op": "ADD"
    },
    "8425": {
      "op": "MSTORE"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8430": {
      "op": "SHL"
    },
    "8431": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8433": {
      "op": "DUP3"
    },
    "8434": {
      "op": "ADD"
    },
    "8435": {
      "op": "MSTORE"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8438": {
      "op": "ADD"
    },
    "8439": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "8442": {
      "op": "JUMP"
    },
    "8443": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8450": {
      "op": "SHL"
    },
    "8451": {
      "op": "SUB"
    },
    "8452": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8453": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "AND",
      "path": "2"
    },
    "8454": {
      "fn": "ERC20._burn",
      "offset": [
        9337,
        9359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8456": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8457": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8458": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8459": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8461": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8462": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8463": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8464": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8466": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8467": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8468": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8469": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 94
    },
    "8470": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8471": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "LT",
      "path": "2"
    },
    "8472": {
      "branch": 139,
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8473": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x216F"
    },
    "8476": {
      "branch": 139,
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8477": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8479": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8486": {
      "op": "SHL"
    },
    "8487": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8488": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8491": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8493": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8494": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "ADD",
      "path": "2"
    },
    "8495": {
      "op": "MSTORE"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8500": {
      "op": "DUP3"
    },
    "8501": {
      "op": "ADD"
    },
    "8502": {
      "op": "MSTORE"
    },
    "8503": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8538": {
      "op": "DUP3"
    },
    "8539": {
      "op": "ADD"
    },
    "8540": {
      "op": "MSTORE"
    },
    "8541": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8546": {
      "op": "SHL"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8549": {
      "op": "DUP3"
    },
    "8550": {
      "op": "ADD"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8554": {
      "op": "ADD"
    },
    "8555": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "8558": {
      "op": "JUMP"
    },
    "8559": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8566": {
      "op": "SHL"
    },
    "8567": {
      "op": "SUB"
    },
    "8568": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 95
    },
    "8569": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "AND",
      "path": "2"
    },
    "8570": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8572": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8573": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8574": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8575": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8577": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8578": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8579": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8580": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8582": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8583": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8584": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8585": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8586": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "SUB",
      "path": "2"
    },
    "8587": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8588": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8589": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9571
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 96,
      "value": "0x2"
    },
    "8591": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8592": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8593": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8594": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8595": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8596": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219E"
    },
    "8599": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8600": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8601": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8602": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x257A"
    },
    "8605": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8606": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8607": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8608": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8609": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8610": {
      "op": "POP"
    },
    "8611": {
      "op": "POP"
    },
    "8612": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 97,
      "value": "0x40"
    },
    "8614": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8615": {
      "op": "DUP3"
    },
    "8616": {
      "op": "DUP2"
    },
    "8617": {
      "op": "MSTORE"
    },
    "8618": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8620": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8627": {
      "op": "SHL"
    },
    "8628": {
      "op": "SUB"
    },
    "8629": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8630": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "AND",
      "path": "2"
    },
    "8631": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8632": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8665": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8668": {
      "op": "ADD"
    },
    "8669": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8671": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8672": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8673": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8674": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SUB",
      "path": "2"
    },
    "8675": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8676": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8677": {
      "fn": "ERC20._burn",
      "offset": [
        9645,
        9693
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 98,
      "value": "0xFB6"
    },
    "8680": {
      "fn": "ERC20._burn",
      "offset": [
        9665,
        9672
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8681": {
      "fn": "ERC20._burn",
      "offset": [
        9682,
        9683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8683": {
      "fn": "ERC20._burn",
      "offset": [
        9686,
        9692
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8684": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15049,
        15417
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8685": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15155,
        15174
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8687": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15177,
        15190
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x21F7"
    },
    "8690": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15187,
        15189
      ],
      "op": "DUP4",
      "path": "21"
    },
    "8691": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15177,
        15186
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBB"
    },
    "8694": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        15177,
        15190
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8695": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15177,
        15190
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8696": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15155,
        15190
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8697": {
      "op": "POP"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8704": {
      "op": "SHL"
    },
    "8705": {
      "op": "SUB"
    },
    "8706": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15204,
        15220
      ],
      "op": "DUP4",
      "path": "21"
    },
    "8707": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15204,
        15220
      ],
      "op": "AND",
      "path": "21"
    },
    "8708": {
      "branch": 128,
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15204,
        15220
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8709": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15200,
        15358
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x226F"
    },
    "8712": {
      "branch": 128,
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15200,
        15358
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8719": {
      "op": "SHL"
    },
    "8720": {
      "op": "SUB"
    },
    "8721": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 99
    },
    "8722": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "AND",
      "path": "21"
    },
    "8723": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8725": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8726": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8727": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "8728": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15328
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "8730": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "8732": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "8733": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "8735": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8736": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "8737": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15311,
        15332
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "8738": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15336,
        15347
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8739": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15336,
        15347
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8740": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15288,
        15307
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x222D"
    },
    "8743": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15302,
        15307
      ],
      "op": "DUP5",
      "path": "21"
    },
    "8744": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15336,
        15347
      ],
      "op": "DUP4",
      "path": "21"
    },
    "8745": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15288,
        15307
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x257A"
    },
    "8748": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        15288,
        15307
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8749": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15288,
        15307
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8750": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15287,
        15332
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2237"
    },
    "8753": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15287,
        15332
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "8754": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15287,
        15332
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8755": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15287,
        15332
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "8758": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        15287,
        15332
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8759": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15287,
        15332
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8760": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15284
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2241"
    },
    "8763": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15269,
        15284
      ],
      "op": "TIMESTAMP",
      "path": "21"
    },
    "8764": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15266
      ],
      "op": "DUP6",
      "path": "21"
    },
    "8765": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15284
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2521"
    },
    "8768": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        15261,
        15284
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8769": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15284
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8770": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15332
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x224B"
    },
    "8773": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15332
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "8774": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15332
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8775": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15332
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2562"
    },
    "8778": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        15261,
        15332
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8779": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15261,
        15332
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8780": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15260,
        15347
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2255"
    },
    "8783": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15260,
        15347
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "8784": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15260,
        15347
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8785": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15260,
        15347
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2540"
    },
    "8788": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        15260,
        15347
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8789": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15260,
        15347
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8796": {
      "op": "SHL"
    },
    "8797": {
      "op": "SUB"
    },
    "8798": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "DUP5",
      "path": "21"
    },
    "8799": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "AND",
      "path": "21"
    },
    "8800": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8802": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8803": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8804": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "8805": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15253
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "8807": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "8809": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "8810": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "8812": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8813": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15257
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "8814": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15236,
        15347
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "8815": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15200,
        15358
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8816": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        15368,
        15410
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 100,
      "value": "0x1B01"
    },
    "8819": {
      "fn": "ChainEstateToken.swapCHESForBNBManually",
      "offset": [
        13983,
        14392
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8820": {
      "op": "JUMPDEST"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8825": {
      "op": "DUP1"
    },
    "8826": {
      "op": "DUP4"
    },
    "8827": {
      "op": "MSTORE"
    },
    "8828": {
      "op": "DUP4"
    },
    "8829": {
      "op": "MLOAD"
    },
    "8830": {
      "op": "DUP1"
    },
    "8831": {
      "op": "DUP3"
    },
    "8832": {
      "op": "DUP6"
    },
    "8833": {
      "op": "ADD"
    },
    "8834": {
      "op": "MSTORE"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8837": {
      "op": "JUMPDEST"
    },
    "8838": {
      "op": "DUP2"
    },
    "8839": {
      "op": "DUP2"
    },
    "8840": {
      "op": "LT"
    },
    "8841": {
      "op": "ISZERO"
    },
    "8842": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "8845": {
      "op": "JUMPI"
    },
    "8846": {
      "op": "DUP6"
    },
    "8847": {
      "op": "DUP2"
    },
    "8848": {
      "op": "ADD"
    },
    "8849": {
      "op": "DUP4"
    },
    "8850": {
      "op": "ADD"
    },
    "8851": {
      "op": "MLOAD"
    },
    "8852": {
      "op": "DUP6"
    },
    "8853": {
      "op": "DUP3"
    },
    "8854": {
      "op": "ADD"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8857": {
      "op": "ADD"
    },
    "8858": {
      "op": "MSTORE"
    },
    "8859": {
      "op": "DUP3"
    },
    "8860": {
      "op": "ADD"
    },
    "8861": {
      "op": "PUSH2",
      "value": "0x2285"
    },
    "8864": {
      "op": "JUMP"
    },
    "8865": {
      "op": "JUMPDEST"
    },
    "8866": {
      "op": "DUP2"
    },
    "8867": {
      "op": "DUP2"
    },
    "8868": {
      "op": "GT"
    },
    "8869": {
      "op": "ISZERO"
    },
    "8870": {
      "op": "PUSH2",
      "value": "0x22B3"
    },
    "8873": {
      "op": "JUMPI"
    },
    "8874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8878": {
      "op": "DUP4"
    },
    "8879": {
      "op": "DUP8"
    },
    "8880": {
      "op": "ADD"
    },
    "8881": {
      "op": "ADD"
    },
    "8882": {
      "op": "MSTORE"
    },
    "8883": {
      "op": "JUMPDEST"
    },
    "8884": {
      "op": "POP"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8887": {
      "op": "ADD"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8890": {
      "op": "NOT"
    },
    "8891": {
      "op": "AND"
    },
    "8892": {
      "op": "SWAP3"
    },
    "8893": {
      "op": "SWAP1"
    },
    "8894": {
      "op": "SWAP3"
    },
    "8895": {
      "op": "ADD"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8898": {
      "op": "ADD"
    },
    "8899": {
      "op": "SWAP4"
    },
    "8900": {
      "op": "SWAP3"
    },
    "8901": {
      "op": "POP"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "op": "POP"
    },
    "8904": {
      "jump": "o",
      "op": "JUMP"
    },
    "8905": {
      "op": "JUMPDEST"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8912": {
      "op": "SHL"
    },
    "8913": {
      "op": "SUB"
    },
    "8914": {
      "op": "DUP2"
    },
    "8915": {
      "op": "AND"
    },
    "8916": {
      "op": "DUP2"
    },
    "8917": {
      "op": "EQ"
    },
    "8918": {
      "op": "PUSH2",
      "value": "0x11F6"
    },
    "8921": {
      "op": "JUMPI"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8924": {
      "op": "DUP1"
    },
    "8925": {
      "op": "REVERT"
    },
    "8926": {
      "op": "JUMPDEST"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8929": {
      "op": "DUP1"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8932": {
      "op": "DUP4"
    },
    "8933": {
      "op": "DUP6"
    },
    "8934": {
      "op": "SUB"
    },
    "8935": {
      "op": "SLT"
    },
    "8936": {
      "op": "ISZERO"
    },
    "8937": {
      "op": "PUSH2",
      "value": "0x22F1"
    },
    "8940": {
      "op": "JUMPI"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8943": {
      "op": "DUP1"
    },
    "8944": {
      "op": "REVERT"
    },
    "8945": {
      "op": "JUMPDEST"
    },
    "8946": {
      "op": "DUP3"
    },
    "8947": {
      "op": "CALLDATALOAD"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x22FC"
    },
    "8951": {
      "op": "DUP2"
    },
    "8952": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "8955": {
      "jump": "i",
      "op": "JUMP"
    },
    "8956": {
      "op": "JUMPDEST"
    },
    "8957": {
      "op": "SWAP5"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8960": {
      "op": "SWAP4"
    },
    "8961": {
      "op": "SWAP1"
    },
    "8962": {
      "op": "SWAP4"
    },
    "8963": {
      "op": "ADD"
    },
    "8964": {
      "op": "CALLDATALOAD"
    },
    "8965": {
      "op": "SWAP4"
    },
    "8966": {
      "op": "POP"
    },
    "8967": {
      "op": "POP"
    },
    "8968": {
      "op": "POP"
    },
    "8969": {
      "jump": "o",
      "op": "JUMP"
    },
    "8970": {
      "op": "JUMPDEST"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8975": {
      "op": "DUP3"
    },
    "8976": {
      "op": "DUP5"
    },
    "8977": {
      "op": "SUB"
    },
    "8978": {
      "op": "SLT"
    },
    "8979": {
      "op": "ISZERO"
    },
    "8980": {
      "op": "PUSH2",
      "value": "0x231C"
    },
    "8983": {
      "op": "JUMPI"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8986": {
      "op": "DUP1"
    },
    "8987": {
      "op": "REVERT"
    },
    "8988": {
      "op": "JUMPDEST"
    },
    "8989": {
      "op": "DUP2"
    },
    "8990": {
      "op": "CALLDATALOAD"
    },
    "8991": {
      "op": "PUSH2",
      "value": "0xD70"
    },
    "8994": {
      "op": "DUP2"
    },
    "8995": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "8998": {
      "jump": "i",
      "op": "JUMP"
    },
    "8999": {
      "op": "JUMPDEST"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9002": {
      "op": "DUP1"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9007": {
      "op": "DUP5"
    },
    "9008": {
      "op": "DUP7"
    },
    "9009": {
      "op": "SUB"
    },
    "9010": {
      "op": "SLT"
    },
    "9011": {
      "op": "ISZERO"
    },
    "9012": {
      "op": "PUSH2",
      "value": "0x233C"
    },
    "9015": {
      "op": "JUMPI"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9018": {
      "op": "DUP1"
    },
    "9019": {
      "op": "REVERT"
    },
    "9020": {
      "op": "JUMPDEST"
    },
    "9021": {
      "op": "DUP4"
    },
    "9022": {
      "op": "CALLDATALOAD"
    },
    "9023": {
      "op": "PUSH2",
      "value": "0x2347"
    },
    "9026": {
      "op": "DUP2"
    },
    "9027": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "9030": {
      "jump": "i",
      "op": "JUMP"
    },
    "9031": {
      "op": "JUMPDEST"
    },
    "9032": {
      "op": "SWAP3"
    },
    "9033": {
      "op": "POP"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9036": {
      "op": "DUP5"
    },
    "9037": {
      "op": "ADD"
    },
    "9038": {
      "op": "CALLDATALOAD"
    },
    "9039": {
      "op": "PUSH2",
      "value": "0x2357"
    },
    "9042": {
      "op": "DUP2"
    },
    "9043": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "9046": {
      "jump": "i",
      "op": "JUMP"
    },
    "9047": {
      "op": "JUMPDEST"
    },
    "9048": {
      "op": "SWAP3"
    },
    "9049": {
      "op": "SWAP6"
    },
    "9050": {
      "op": "SWAP3"
    },
    "9051": {
      "op": "SWAP5"
    },
    "9052": {
      "op": "POP"
    },
    "9053": {
      "op": "POP"
    },
    "9054": {
      "op": "POP"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9057": {
      "op": "SWAP2"
    },
    "9058": {
      "op": "SWAP1"
    },
    "9059": {
      "op": "SWAP2"
    },
    "9060": {
      "op": "ADD"
    },
    "9061": {
      "op": "CALLDATALOAD"
    },
    "9062": {
      "op": "SWAP1"
    },
    "9063": {
      "jump": "o",
      "op": "JUMP"
    },
    "9064": {
      "op": "JUMPDEST"
    },
    "9065": {
      "op": "DUP1"
    },
    "9066": {
      "op": "CALLDATALOAD"
    },
    "9067": {
      "op": "DUP1"
    },
    "9068": {
      "op": "ISZERO"
    },
    "9069": {
      "op": "ISZERO"
    },
    "9070": {
      "op": "DUP2"
    },
    "9071": {
      "op": "EQ"
    },
    "9072": {
      "op": "PUSH2",
      "value": "0x2378"
    },
    "9075": {
      "op": "JUMPI"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9078": {
      "op": "DUP1"
    },
    "9079": {
      "op": "REVERT"
    },
    "9080": {
      "op": "JUMPDEST"
    },
    "9081": {
      "op": "SWAP2"
    },
    "9082": {
      "op": "SWAP1"
    },
    "9083": {
      "op": "POP"
    },
    "9084": {
      "jump": "o",
      "op": "JUMP"
    },
    "9085": {
      "op": "JUMPDEST"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9088": {
      "op": "DUP1"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9091": {
      "op": "DUP4"
    },
    "9092": {
      "op": "DUP6"
    },
    "9093": {
      "op": "SUB"
    },
    "9094": {
      "op": "SLT"
    },
    "9095": {
      "op": "ISZERO"
    },
    "9096": {
      "op": "PUSH2",
      "value": "0x2390"
    },
    "9099": {
      "op": "JUMPI"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9102": {
      "op": "DUP1"
    },
    "9103": {
      "op": "REVERT"
    },
    "9104": {
      "op": "JUMPDEST"
    },
    "9105": {
      "op": "DUP3"
    },
    "9106": {
      "op": "CALLDATALOAD"
    },
    "9107": {
      "op": "PUSH2",
      "value": "0x239B"
    },
    "9110": {
      "op": "DUP2"
    },
    "9111": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "9114": {
      "jump": "i",
      "op": "JUMP"
    },
    "9115": {
      "op": "JUMPDEST"
    },
    "9116": {
      "op": "SWAP2"
    },
    "9117": {
      "op": "POP"
    },
    "9118": {
      "op": "PUSH2",
      "value": "0x23A9"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9123": {
      "op": "DUP5"
    },
    "9124": {
      "op": "ADD"
    },
    "9125": {
      "op": "PUSH2",
      "value": "0x2368"
    },
    "9128": {
      "jump": "i",
      "op": "JUMP"
    },
    "9129": {
      "op": "JUMPDEST"
    },
    "9130": {
      "op": "SWAP1"
    },
    "9131": {
      "op": "POP"
    },
    "9132": {
      "op": "SWAP3"
    },
    "9133": {
      "op": "POP"
    },
    "9134": {
      "op": "SWAP3"
    },
    "9135": {
      "op": "SWAP1"
    },
    "9136": {
      "op": "POP"
    },
    "9137": {
      "jump": "o",
      "op": "JUMP"
    },
    "9138": {
      "op": "JUMPDEST"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9143": {
      "op": "DUP3"
    },
    "9144": {
      "op": "DUP5"
    },
    "9145": {
      "op": "SUB"
    },
    "9146": {
      "op": "SLT"
    },
    "9147": {
      "op": "ISZERO"
    },
    "9148": {
      "op": "PUSH2",
      "value": "0x23C4"
    },
    "9151": {
      "op": "JUMPI"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9154": {
      "op": "DUP1"
    },
    "9155": {
      "op": "REVERT"
    },
    "9156": {
      "op": "JUMPDEST"
    },
    "9157": {
      "op": "POP"
    },
    "9158": {
      "op": "CALLDATALOAD"
    },
    "9159": {
      "op": "SWAP2"
    },
    "9160": {
      "op": "SWAP1"
    },
    "9161": {
      "op": "POP"
    },
    "9162": {
      "jump": "o",
      "op": "JUMP"
    },
    "9163": {
      "op": "JUMPDEST"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9166": {
      "op": "DUP1"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9169": {
      "op": "DUP4"
    },
    "9170": {
      "op": "DUP6"
    },
    "9171": {
      "op": "SUB"
    },
    "9172": {
      "op": "SLT"
    },
    "9173": {
      "op": "ISZERO"
    },
    "9174": {
      "op": "PUSH2",
      "value": "0x23DE"
    },
    "9177": {
      "op": "JUMPI"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9180": {
      "op": "DUP1"
    },
    "9181": {
      "op": "REVERT"
    },
    "9182": {
      "op": "JUMPDEST"
    },
    "9183": {
      "op": "DUP3"
    },
    "9184": {
      "op": "CALLDATALOAD"
    },
    "9185": {
      "op": "SWAP2"
    },
    "9186": {
      "op": "POP"
    },
    "9187": {
      "op": "PUSH2",
      "value": "0x23A9"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9192": {
      "op": "DUP5"
    },
    "9193": {
      "op": "ADD"
    },
    "9194": {
      "op": "PUSH2",
      "value": "0x2368"
    },
    "9197": {
      "jump": "i",
      "op": "JUMP"
    },
    "9198": {
      "op": "JUMPDEST"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9201": {
      "op": "DUP1"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9204": {
      "op": "DUP4"
    },
    "9205": {
      "op": "DUP6"
    },
    "9206": {
      "op": "SUB"
    },
    "9207": {
      "op": "SLT"
    },
    "9208": {
      "op": "ISZERO"
    },
    "9209": {
      "op": "PUSH2",
      "value": "0x2401"
    },
    "9212": {
      "op": "JUMPI"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9215": {
      "op": "DUP1"
    },
    "9216": {
      "op": "REVERT"
    },
    "9217": {
      "op": "JUMPDEST"
    },
    "9218": {
      "op": "DUP3"
    },
    "9219": {
      "op": "CALLDATALOAD"
    },
    "9220": {
      "op": "PUSH2",
      "value": "0x240C"
    },
    "9223": {
      "op": "DUP2"
    },
    "9224": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "9227": {
      "jump": "i",
      "op": "JUMP"
    },
    "9228": {
      "op": "JUMPDEST"
    },
    "9229": {
      "op": "SWAP2"
    },
    "9230": {
      "op": "POP"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9233": {
      "op": "DUP4"
    },
    "9234": {
      "op": "ADD"
    },
    "9235": {
      "op": "CALLDATALOAD"
    },
    "9236": {
      "op": "PUSH2",
      "value": "0x241C"
    },
    "9239": {
      "op": "DUP2"
    },
    "9240": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "9243": {
      "jump": "i",
      "op": "JUMP"
    },
    "9244": {
      "op": "JUMPDEST"
    },
    "9245": {
      "op": "DUP1"
    },
    "9246": {
      "op": "SWAP2"
    },
    "9247": {
      "op": "POP"
    },
    "9248": {
      "op": "POP"
    },
    "9249": {
      "op": "SWAP3"
    },
    "9250": {
      "op": "POP"
    },
    "9251": {
      "op": "SWAP3"
    },
    "9252": {
      "op": "SWAP1"
    },
    "9253": {
      "op": "POP"
    },
    "9254": {
      "jump": "o",
      "op": "JUMP"
    },
    "9255": {
      "op": "JUMPDEST"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "DUP2"
    },
    "9259": {
      "op": "DUP2"
    },
    "9260": {
      "op": "SHR"
    },
    "9261": {
      "op": "SWAP1"
    },
    "9262": {
      "op": "DUP3"
    },
    "9263": {
      "op": "AND"
    },
    "9264": {
      "op": "DUP1"
    },
    "9265": {
      "op": "PUSH2",
      "value": "0x243B"
    },
    "9268": {
      "op": "JUMPI"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9271": {
      "op": "DUP3"
    },
    "9272": {
      "op": "AND"
    },
    "9273": {
      "op": "SWAP2"
    },
    "9274": {
      "op": "POP"
    },
    "9275": {
      "op": "JUMPDEST"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9278": {
      "op": "DUP3"
    },
    "9279": {
      "op": "LT"
    },
    "9280": {
      "op": "DUP2"
    },
    "9281": {
      "op": "EQ"
    },
    "9282": {
      "op": "ISZERO"
    },
    "9283": {
      "op": "PUSH2",
      "value": "0x245C"
    },
    "9286": {
      "op": "JUMPI"
    },
    "9287": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9294": {
      "op": "SHL"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9297": {
      "op": "MSTORE"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9302": {
      "op": "MSTORE"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9307": {
      "op": "REVERT"
    },
    "9308": {
      "op": "JUMPDEST"
    },
    "9309": {
      "op": "POP"
    },
    "9310": {
      "op": "SWAP2"
    },
    "9311": {
      "op": "SWAP1"
    },
    "9312": {
      "op": "POP"
    },
    "9313": {
      "jump": "o",
      "op": "JUMP"
    },
    "9314": {
      "op": "JUMPDEST"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9317": {
      "op": "DUP1"
    },
    "9318": {
      "op": "DUP3"
    },
    "9319": {
      "op": "MSTORE"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9322": {
      "op": "SWAP1"
    },
    "9323": {
      "op": "DUP3"
    },
    "9324": {
      "op": "ADD"
    },
    "9325": {
      "op": "MSTORE"
    },
    "9326": {
      "op": "PUSH32",
      "value": "0x596F752068617665206265656E20626C61636B6C69737465642066726F6D2074"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9361": {
      "op": "DUP3"
    },
    "9362": {
      "op": "ADD"
    },
    "9363": {
      "op": "MSTORE"
    },
    "9364": {
      "op": "PUSH32",
      "value": "0x726164696E6720746865204348455320746F6B656E2E20496620796F75207468"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9399": {
      "op": "DUP3"
    },
    "9400": {
      "op": "ADD"
    },
    "9401": {
      "op": "MSTORE"
    },
    "9402": {
      "op": "PUSH32",
      "value": "0x696E6B207468697320697320616E206572726F722C20706C6561736520636F6E"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9437": {
      "op": "DUP3"
    },
    "9438": {
      "op": "ADD"
    },
    "9439": {
      "op": "MSTORE"
    },
    "9440": {
      "op": "PUSH32",
      "value": "0x746163742074686520436861696E204573746174652044414F207465616D2E00"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9475": {
      "op": "DUP3"
    },
    "9476": {
      "op": "ADD"
    },
    "9477": {
      "op": "MSTORE"
    },
    "9478": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9480": {
      "op": "ADD"
    },
    "9481": {
      "op": "SWAP1"
    },
    "9482": {
      "jump": "o",
      "op": "JUMP"
    },
    "9483": {
      "op": "JUMPDEST"
    },
    "9484": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9491": {
      "op": "SHL"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9494": {
      "op": "MSTORE"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9499": {
      "op": "MSTORE"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9504": {
      "op": "REVERT"
    },
    "9505": {
      "op": "JUMPDEST"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9508": {
      "op": "DUP2"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9511": {
      "op": "NOT"
    },
    "9512": {
      "op": "DIV"
    },
    "9513": {
      "op": "DUP4"
    },
    "9514": {
      "op": "GT"
    },
    "9515": {
      "op": "DUP3"
    },
    "9516": {
      "op": "ISZERO"
    },
    "9517": {
      "op": "ISZERO"
    },
    "9518": {
      "op": "AND"
    },
    "9519": {
      "op": "ISZERO"
    },
    "9520": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9523": {
      "op": "JUMPI"
    },
    "9524": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9527": {
      "op": "PUSH2",
      "value": "0x250B"
    },
    "9530": {
      "jump": "i",
      "op": "JUMP"
    },
    "9531": {
      "op": "JUMPDEST"
    },
    "9532": {
      "op": "POP"
    },
    "9533": {
      "op": "MUL"
    },
    "9534": {
      "op": "SWAP1"
    },
    "9535": {
      "jump": "o",
      "op": "JUMP"
    },
    "9536": {
      "op": "JUMPDEST"
    },
    "9537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9539": {
      "op": "DUP3"
    },
    "9540": {
      "op": "PUSH2",
      "value": "0x255D"
    },
    "9543": {
      "op": "JUMPI"
    },
    "9544": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9551": {
      "op": "SHL"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9554": {
      "op": "MSTORE"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9559": {
      "op": "MSTORE"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9564": {
      "op": "REVERT"
    },
    "9565": {
      "op": "JUMPDEST"
    },
    "9566": {
      "op": "POP"
    },
    "9567": {
      "op": "DIV"
    },
    "9568": {
      "op": "SWAP1"
    },
    "9569": {
      "jump": "o",
      "op": "JUMP"
    },
    "9570": {
      "op": "JUMPDEST"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9573": {
      "op": "DUP3"
    },
    "9574": {
      "op": "NOT"
    },
    "9575": {
      "op": "DUP3"
    },
    "9576": {
      "op": "GT"
    },
    "9577": {
      "op": "ISZERO"
    },
    "9578": {
      "op": "PUSH2",
      "value": "0x2575"
    },
    "9581": {
      "op": "JUMPI"
    },
    "9582": {
      "op": "PUSH2",
      "value": "0x2575"
    },
    "9585": {
      "op": "PUSH2",
      "value": "0x250B"
    },
    "9588": {
      "jump": "i",
      "op": "JUMP"
    },
    "9589": {
      "op": "JUMPDEST"
    },
    "9590": {
      "op": "POP"
    },
    "9591": {
      "op": "ADD"
    },
    "9592": {
      "op": "SWAP1"
    },
    "9593": {
      "jump": "o",
      "op": "JUMP"
    },
    "9594": {
      "op": "JUMPDEST"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9597": {
      "op": "DUP3"
    },
    "9598": {
      "op": "DUP3"
    },
    "9599": {
      "op": "LT"
    },
    "9600": {
      "op": "ISZERO"
    },
    "9601": {
      "op": "PUSH2",
      "value": "0x258C"
    },
    "9604": {
      "op": "JUMPI"
    },
    "9605": {
      "op": "PUSH2",
      "value": "0x258C"
    },
    "9608": {
      "op": "PUSH2",
      "value": "0x250B"
    },
    "9611": {
      "jump": "i",
      "op": "JUMP"
    },
    "9612": {
      "op": "JUMPDEST"
    },
    "9613": {
      "op": "POP"
    },
    "9614": {
      "op": "SUB"
    },
    "9615": {
      "op": "SWAP1"
    },
    "9616": {
      "jump": "o",
      "op": "JUMP"
    },
    "9617": {
      "op": "JUMPDEST"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9620": {
      "op": "DUP1"
    },
    "9621": {
      "op": "DUP3"
    },
    "9622": {
      "op": "MSTORE"
    },
    "9623": {
      "op": "DUP2"
    },
    "9624": {
      "op": "DUP2"
    },
    "9625": {
      "op": "ADD"
    },
    "9626": {
      "op": "MSTORE"
    },
    "9627": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9662": {
      "op": "DUP3"
    },
    "9663": {
      "op": "ADD"
    },
    "9664": {
      "op": "MSTORE"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9667": {
      "op": "ADD"
    },
    "9668": {
      "op": "SWAP1"
    },
    "9669": {
      "jump": "o",
      "op": "JUMP"
    },
    "9670": {
      "op": "JUMPDEST"
    },
    "9671": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9678": {
      "op": "SHL"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9681": {
      "op": "MSTORE"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9684": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9686": {
      "op": "MSTORE"
    },
    "9687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9691": {
      "op": "REVERT"
    },
    "9692": {
      "op": "JUMPDEST"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9697": {
      "op": "DUP3"
    },
    "9698": {
      "op": "DUP5"
    },
    "9699": {
      "op": "SUB"
    },
    "9700": {
      "op": "SLT"
    },
    "9701": {
      "op": "ISZERO"
    },
    "9702": {
      "op": "PUSH2",
      "value": "0x25EE"
    },
    "9705": {
      "op": "JUMPI"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9708": {
      "op": "DUP1"
    },
    "9709": {
      "op": "REVERT"
    },
    "9710": {
      "op": "JUMPDEST"
    },
    "9711": {
      "op": "DUP2"
    },
    "9712": {
      "op": "MLOAD"
    },
    "9713": {
      "op": "PUSH2",
      "value": "0xD70"
    },
    "9716": {
      "op": "DUP2"
    },
    "9717": {
      "op": "PUSH2",
      "value": "0x22C9"
    },
    "9720": {
      "jump": "i",
      "op": "JUMP"
    },
    "9721": {
      "op": "JUMPDEST"
    },
    "9722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9726": {
      "op": "DUP3"
    },
    "9727": {
      "op": "ADD"
    },
    "9728": {
      "op": "DUP8"
    },
    "9729": {
      "op": "DUP4"
    },
    "9730": {
      "op": "MSTORE"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9733": {
      "op": "DUP8"
    },
    "9734": {
      "op": "DUP2"
    },
    "9735": {
      "op": "DUP6"
    },
    "9736": {
      "op": "ADD"
    },
    "9737": {
      "op": "MSTORE"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9742": {
      "op": "DUP6"
    },
    "9743": {
      "op": "ADD"
    },
    "9744": {
      "op": "MSTORE"
    },
    "9745": {
      "op": "DUP2"
    },
    "9746": {
      "op": "DUP8"
    },
    "9747": {
      "op": "MLOAD"
    },
    "9748": {
      "op": "DUP1"
    },
    "9749": {
      "op": "DUP5"
    },
    "9750": {
      "op": "MSTORE"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9753": {
      "op": "DUP7"
    },
    "9754": {
      "op": "ADD"
    },
    "9755": {
      "op": "SWAP2"
    },
    "9756": {
      "op": "POP"
    },
    "9757": {
      "op": "DUP3"
    },
    "9758": {
      "op": "DUP10"
    },
    "9759": {
      "op": "ADD"
    },
    "9760": {
      "op": "SWAP4"
    },
    "9761": {
      "op": "POP"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9764": {
      "op": "JUMPDEST"
    },
    "9765": {
      "op": "DUP2"
    },
    "9766": {
      "op": "DUP2"
    },
    "9767": {
      "op": "LT"
    },
    "9768": {
      "op": "ISZERO"
    },
    "9769": {
      "op": "PUSH2",
      "value": "0x2649"
    },
    "9772": {
      "op": "JUMPI"
    },
    "9773": {
      "op": "DUP5"
    },
    "9774": {
      "op": "MLOAD"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9781": {
      "op": "SHL"
    },
    "9782": {
      "op": "SUB"
    },
    "9783": {
      "op": "AND"
    },
    "9784": {
      "op": "DUP4"
    },
    "9785": {
      "op": "MSTORE"
    },
    "9786": {
      "op": "SWAP4"
    },
    "9787": {
      "op": "DUP4"
    },
    "9788": {
      "op": "ADD"
    },
    "9789": {
      "op": "SWAP4"
    },
    "9790": {
      "op": "SWAP2"
    },
    "9791": {
      "op": "DUP4"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "SWAP2"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9796": {
      "op": "ADD"
    },
    "9797": {
      "op": "PUSH2",
      "value": "0x2624"
    },
    "9800": {
      "op": "JUMP"
    },
    "9801": {
      "op": "JUMPDEST"
    },
    "9802": {
      "op": "POP"
    },
    "9803": {
      "op": "POP"
    },
    "9804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9810": {
      "op": "SHL"
    },
    "9811": {
      "op": "SUB"
    },
    "9812": {
      "op": "SWAP7"
    },
    "9813": {
      "op": "SWAP1"
    },
    "9814": {
      "op": "SWAP7"
    },
    "9815": {
      "op": "AND"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9818": {
      "op": "DUP6"
    },
    "9819": {
      "op": "ADD"
    },
    "9820": {
      "op": "MSTORE"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "op": "POP"
    },
    "9823": {
      "op": "POP"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9826": {
      "op": "ADD"
    },
    "9827": {
      "op": "MSTORE"
    },
    "9828": {
      "op": "SWAP4"
    },
    "9829": {
      "op": "SWAP3"
    },
    "9830": {
      "op": "POP"
    },
    "9831": {
      "op": "POP"
    },
    "9832": {
      "op": "POP"
    },
    "9833": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d764cbced7105cffeaa8e0dbbb47782437ca4889",
  "source": "// SPDX-License-Identifier: MIT\n \npragma solidity >=0.8.0 <0.9.0;\n \nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/Uniswap.sol\";\n\n/**\n * @title Chain Estate DAO Token\n * @dev Main contract for Chain Estate DAO\n * TODO - Limit how many tokens users can purchase from PancakeSwap\n * TODO - Will possibly create the BNB to CHES token PankcakeSwap pair in the constructor.\n */\ncontract ChainEstateToken is ERC20, Ownable {\n\n    // Mapping to exclude some contracts from fees. Transfers are excluded from fees if address in this mapping is recipient or sender.\n    mapping (address => bool) public excludedFromFees;\n\n    // Mapping to determine the timestamp of each address' investment. Earlier average investment = better air drop rewards.\n    mapping (address => uint256) public airDropInvestTime;\n\n    // Blacklist mapping to prevent addresses from trading if necessary (i.e. flagged for malicious activity).\n    mapping (address => bool) public blacklist;\n\n    // Mapping to determine which addresses can mint Chain Estate tokens for bridging.\n    mapping (address => bool) public minters;\n\n    // Address of the contract responsible for the air dropping mechanism.\n    address public airDropContractAddress;\n\n    // Address of the contract for burning CHES tokens.\n    address public burnWalletAddress;\n\n    // Real estate wallet address used to collect funds to purchase real estate.\n    address payable public realEstateWalletAddress;\n\n    // Liquidity wallet address used to hold the 30% of CHES tokens for the liquidity pool.\n    // After these coins are moved to the DEX, this address will no longer be used.\n    address public liquidityWalletAddress;\n\n    // Marketing wallet address used for funding marketing.\n    address payable public marketingWalletAddress;\n\n    // Developer wallet address used for funding the team.\n    address payable public developerWalletAddress;\n\n    // The PancakeSwap router address for swapping CHES tokens for WBNB.\n    address public uniswapRouterAddress;\n\n    // The initial block timestamp of the token contract.\n    uint256 public initialTimeStamp;\n\n    // Real estate transaction fee - deployed at 3%.\n    uint256 public realEstateTransactionFeePercent = 3;\n\n    // Developer team transaction fee - deployed at 1%.\n    uint256 public developerFeePercent = 1;\n\n    // Marketing transaction fee - deployed at 1%.\n    uint256 public marketingFeePercent = 1;\n\n    // PancakeSwap router interface.\n    IUniswapV2Router02 private uniswapRouter;\n\n    // Address of the WBNB to CHES token pair on PancakeSwap.\n    address public uniswapPair;\n\n    // Address of the token claim contract.\n    address public tokenClaimContractAddress;\n\n    // Determines how many CHES tokens this contract needs before it swaps for WBNB to pay fee wallets.\n    uint256 public contractCHESDivisor = 1000;\n\n    // Events to emit when the transaction fees are updated\n    event realEstateTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event marketingTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n    event developerTransactionFeeUpdated(uint256 indexed transactionFeeAmount);\n\n    // Initial token distribution:\n    // 35% - Air drop contract\n    // 30% - Liquidity pool (6 month lockup period)\n    // 20% - Burn\n    // 10% - Developer coins (6 month lockup period)\n    // 5% - Marketing\n    constructor(\n        uint256 initialSupply, \n        address _airDropContractAddress, \n        address _burnWalletAddress,\n        address _liquidityWalletAddress,\n        address payable _realEstateWalletAddress,\n        address payable _marketingWalletAddress,\n        address payable _developerWalletAddress,\n        address _uniswapRouterAddress) ERC20(\"ChainEstateTokenV2\", \"CHES\") {\n            initialTimeStamp = 1645566420;  // Initial timestamp for the CHES v1 token contract\n            airDropContractAddress = _airDropContractAddress;\n            realEstateWalletAddress = _realEstateWalletAddress;\n            burnWalletAddress = _burnWalletAddress;\n            liquidityWalletAddress = _liquidityWalletAddress;\n            marketingWalletAddress = _marketingWalletAddress;\n            developerWalletAddress = _developerWalletAddress;\n            uniswapRouterAddress = _uniswapRouterAddress;\n\n            excludedFromFees[realEstateWalletAddress] = true;\n            excludedFromFees[developerWalletAddress] = true;\n            excludedFromFees[marketingWalletAddress] = true;\n            excludedFromFees[liquidityWalletAddress] = true;\n            excludedFromFees[airDropContractAddress] = true;    // No transaction fees for claiming air drop rewards\n\n            // The number of tokens claimed in the first airdrop for the v1 CHES token\n            uint256 firstAirdropClaimAmount = 23366791 * 10 ** 18;\n\n            _mint(airDropContractAddress, ((initialSupply) * 35 / 100) - firstAirdropClaimAmount);\n            _mint(liquidityWalletAddress, ((initialSupply) * 3 / 10) + firstAirdropClaimAmount);\n            _mint(burnWalletAddress, initialSupply / 5);\n            _mint(marketingWalletAddress, initialSupply * 5 / 100);\n            _mint(developerWalletAddress, initialSupply / 10);\n\n            IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(uniswapRouterAddress);\n            uniswapRouter = _uniswapV2Router;\n            _approve(address(this), address(uniswapRouter), initialSupply);\n            uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n            IERC20(uniswapPair).approve(address(uniswapRouter), type(uint256).max);\n    }\n\n    /**\n     * @dev Returns the contract address\n     * @return contract address\n     */\n    function getContractAddress() public view returns (address){\n        return address(this);\n    }\n\n    /**\n    * @dev Adds a user to be excluded from fees.\n    * @param user address of the user to be excluded from fees.\n     */\n    function excludeUserFromFees(address user) public onlyOwner {\n        excludedFromFees[user] = true;\n    }\n\n    /**\n    * @dev Gets the current timestamp, used for testing + verification\n    * @return the the timestamp of the current block\n     */\n    function getCurrentTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    /**\n    * @dev Removes a user from the fee exclusion.\n    * @param user address of the user than will now have to pay transaction fees.\n     */\n    function includeUsersInFees(address user) public onlyOwner {\n        excludedFromFees[user] = false;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transfer function to include transaction fees.\n     * @param recipient the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        // Ensure the sender isn't blacklisted.\n        require(!blacklist[_msgSender()], \"You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\");\n        // Ensure the recipient isn't blacklisted.\n        require(!blacklist[recipient], \"The address you are trying to send CHES to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\");\n\n        // Stops investors from owning more than 2% of the total supply from purchasing CHES from PancakeSwap.\n        if (_msgSender() == uniswapPair && !excludedFromFees[_msgSender()] && !excludedFromFees[recipient]) {\n            require((balanceOf(recipient) + amount) < (totalSupply() / 166), \"You can't have more than 2% of the total CHES supply after a PancakeSwap swap.\");\n        }\n\n        // If the sender or recipient is excluded from fees, perform the default transfer.\n        if (excludedFromFees[_msgSender()] || excludedFromFees[recipient]) {\n            _transfer(_msgSender(), recipient, amount);\n            return true;\n        }\n\n        // Real estate transaction fee.\n        uint256 realEstateFee = (amount * realEstateTransactionFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address.\n        uint256 totalFee = realEstateFee + marketingFee + developerFee;\n \n        // Sends the transaction fees to the contract address\n        _transfer(_msgSender(), address(this), totalFee);\n\n        uint256 contractCHESBalance = balanceOf(address(this));\n\n        if (_msgSender() != uniswapPair) {\n            if (contractCHESBalance > balanceOf(uniswapPair) / contractCHESDivisor) {\n                swapCHESForBNB(contractCHESBalance);\n            }\n                \n            uint256 contractBNBBalance = address(this).balance;\n            if (contractBNBBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - totalFee;\n        _transfer(_msgSender(), recipient, valueAfterFees);\n        return true;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transferFrom function to include transaction fees.\n     * @param from the address from where the tokens are coming from\n     * @param to the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        // Ensure the sender isn't blacklisted.\n        require(!blacklist[_msgSender()], \"You have been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\");\n        // Ensure the address where the tokens are coming from isn't blacklisted.\n        require(!blacklist[from], \"The address you're trying to spend the tokens from has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\");\n        // Ensure the recipient isn't blacklisted.\n        require(!blacklist[to], \"The address you are trying to send tokens to has been blacklisted from trading the CHES token. If you think this is an error, please contact the Chain Estate DAO team.\");\n\n        // If the from address or to address is excluded from fees, perform the default transferFrom.\n        if (excludedFromFees[from] || excludedFromFees[to] || excludedFromFees[_msgSender()]) {\n            _spendAllowance(from, _msgSender(), amount);\n            _transfer(from, to, amount);\n            return true;\n        }\n\n        // Real estate transaction fee.\n        uint256 realEstateFee = (amount * realEstateTransactionFeePercent) / 100;\n        // Marketing team transaction fee.\n        uint256 marketingFee = (amount * marketingFeePercent) / 100;\n        // Developer team transaction fee.\n        uint256 developerFee = (amount * developerFeePercent) / 100;\n\n        // The total fee to send to the contract address.\n        uint256 totalFee = realEstateFee + marketingFee + developerFee;\n \n        // Sends the transaction fees to the contract address\n        _spendAllowance(from, _msgSender(), amount);\n        _transfer(from, address(this), totalFee);\n\n        uint256 contractCHESBalance = balanceOf(address(this));\n\n        if (_msgSender() != uniswapPair) {\n            if (contractCHESBalance > balanceOf(uniswapPair) / contractCHESDivisor) {\n                swapCHESForBNB(contractCHESBalance);\n            }\n                \n            uint256 contractBNBBalance = address(this).balance;\n            if (contractBNBBalance > 0) {\n                sendFeesToWallets(address(this).balance);\n            }\n        }\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - totalFee;\n        _transfer(from, to, valueAfterFees);\n        return true;\n    }\n\n    /**\n     * @dev Swaps CHES tokens from transaction fees to BNB.\n     * @param amount the amount of CHES tokens to swap\n     */\n    function swapCHESForBNB(uint256 amount) private {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapRouter.WETH();\n        _approve(address(this), address(uniswapRouter), amount);\n        uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            amount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @dev Sends BNB to transaction fee wallets after CHES swaps.\n     * @param amount the amount to be transfered\n     */\n    function sendFeesToWallets(uint256 amount) private {\n        uint256 totalFee = realEstateTransactionFeePercent + marketingFeePercent + developerFeePercent;\n        realEstateWalletAddress.transfer((amount * realEstateTransactionFeePercent) / totalFee);\n        marketingWalletAddress.transfer((amount * marketingFeePercent) / totalFee);\n        developerWalletAddress.transfer((amount * developerFeePercent) / totalFee);\n    }\n\n    /**\n     * @dev Sends BNB to transaction fee wallets manually as opposed to happening automatically after a certain level of volume\n     */\n    function disperseFeesManually() public onlyOwner {\n        uint256 contractBNBBalance = address(this).balance;\n        sendFeesToWallets(contractBNBBalance);\n    }\n\n    /**\n     * @dev Swaps all CHES tokens in the contract for BNB and then disperses those funds to the transaction fee wallets.\n     * @param amount the amount of CHES in the contract to swap for BNB\n     * @param useAmount boolean to determine if the amount sent in is swapped for BNB or if the entire contract balance is swapped.\n     */\n    function swapCHESForBNBManually(uint256 amount, bool useAmount) public onlyOwner {\n        if (useAmount) {\n            swapCHESForBNB(amount);\n        }\n        else {\n            uint256 contractCHESBalance = balanceOf(address(this));\n            swapCHESForBNB(contractCHESBalance);\n        }\n\n        uint256 contractBNBBalance = address(this).balance;\n        sendFeesToWallets(contractBNBBalance);\n    }\n\n    receive() external payable {}\n\n    /**\n     * @dev Sets the value that determines how many CHES tokens need to be in the contract before it's swapped for BNB.\n     * @param newDivisor the new divisor value to determine the swap threshold\n     */\n    function setContractCHESDivisor(uint256 newDivisor) public onlyOwner {\n        contractCHESDivisor = newDivisor;\n    }\n\n    /**\n     * @dev After a token transfer, update the recipient address's air drop invest time since they have a later investment now.\n     * @param from the sender's address\n     * @param to the recipient's address\n     * @param value the amount that was transferred\n     */\n    function _afterTokenTransfer(address from, address to, uint256 value) internal virtual override {\n        uint256 userBalance = balanceOf(to);\n        if (to != address(0)) {\n            airDropInvestTime[to] = (value * block.timestamp + (userBalance - value) * airDropInvestTime[to]) / userBalance;\n        }\n\n        super._afterTokenTransfer(from, to, value);\n    }\n\n    /**\n    * @dev Updates the blacklist mapping for a given address\n    * @param user the address that is being added or removed from the blacklist\n    * @param blacklisted a boolean that determines if the given address is being added or removed from the blacklist\n    */\n    function updateBlackList(address user, bool blacklisted) public onlyOwner {\n        blacklist[user] = blacklisted;\n    }\n\n    /**\n    * @dev Function to update the real estate transaction fee - can't be more than 20 percent\n    * @param newRealEstateTransactionFee the new real estate transaction fee\n    */\n    function updateRealEstateTransactionFee(uint256 newRealEstateTransactionFee) public onlyOwner {\n        require(newRealEstateTransactionFee <= 20, \"The real estate transaction fee can't be more than 20%.\");\n        realEstateTransactionFeePercent = newRealEstateTransactionFee;\n        emit realEstateTransactionFeeUpdated(newRealEstateTransactionFee);\n    }\n\n    /**\n    * @dev Function to update the marketing transaction fee - can't be more than 5 percent\n    * @param newMarketingTransactionFee the new marketing transaction fee\n    */\n    function updateMarketingTransactionFee(uint256 newMarketingTransactionFee) public onlyOwner {\n        require(newMarketingTransactionFee <= 5, \"The marketing transaction fee can't be more than 5%.\");\n        marketingFeePercent = newMarketingTransactionFee;\n        emit marketingTransactionFeeUpdated(newMarketingTransactionFee);\n    }\n\n    /**\n    * @dev Function to update the developer transaction fee - can't be more than 5 percent\n    * @param newDeveloperTransactionFee the new developer transaction fee\n    */\n    function updateDeveloperTransactionFee(uint256 newDeveloperTransactionFee) public onlyOwner {\n        require(newDeveloperTransactionFee <= 5, \"The developer transaction fee can't be more than 5%.\");\n        developerFeePercent = newDeveloperTransactionFee;\n        emit developerTransactionFeeUpdated(newDeveloperTransactionFee);\n    }\n\n    /**\n    * @dev Function to add or remove a CHES token minter\n    * @param user the address that will be added or removed as a minter\n    * @param isMinter boolean representing if the address provided will be added or removed as a minter\n    */\n    function updateMinter(address user, bool isMinter) public onlyOwner {\n        minters[user] = isMinter;\n    }\n\n    /**\n    * @dev Minter only function to mint new CHES tokens for bridging\n    * @param user the address that the tokens will be minted to\n    * @param amount the amount of tokens to be minted to the user\n    */\n    function mint(address user, uint256 amount) public {\n        require(minters[_msgSender()], \"You are not authorized to mint CHES tokens.\");\n        _mint(user, amount);\n    }\n\n    /**\n    * @dev Minter only function to burn CHES tokens for bridging\n    * @param user the address to burn the tokens from\n    * @param amount the amount of tokens to be burned\n    */\n    function burn(address user, uint256 amount) public {\n        require(minters[_msgSender()], \"You are not authorized to burn CHES tokens.\");\n        _burn(user, amount);\n    }\n\n    /**\n    * @dev Function that only the token claim contract can call to set the airdrop invest time for a user when claiming their V2 tokens.\n    * @param user the address to set the airdrop invest time for\n    * @param airDropInvestTimeVal the airdrop invest time for the user\n    */\n    function setAirDropInvestTime(address user, uint256 airDropInvestTimeVal) public {\n        require(msg.sender == tokenClaimContractAddress, \"Only the token claim contract can call this function.\");\n        airDropInvestTime[user] = airDropInvestTimeVal;\n    }\n\n    /**\n    * @dev Only owner function to set the token claim contract address.\n    * @param tokenClaimAddress the token claim contract address\n    */\n    function setTokenClaimContractAddress(address tokenClaimAddress) public onlyOwner {\n        tokenClaimContractAddress = tokenClaimAddress;\n    }\n}",
  "sourceMap": "457:18934:21:-:0;;;2283:1;2234:50;;2384:1;2347:38;;2480:1;2443:38;;2899:4;2862:41;;3423:2238;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:2;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;3843:10:21::1;3824:16;:29:::0;3920:22:::1;:48:::0;;-1:-1:-1;;;;;;3920:48:21;;::::1;-1:-1:-1::0;;;;;3920:48:21;;::::1;::::0;;;::::1;::::0;;3982:23:::1;:50:::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;4046:17:::1;:38:::0;;;::::1;::::0;;::::1;;::::0;;4098:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;4160:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;4222:22:::1;:48:::0;;;::::1;::::0;;::::1;;::::0;;4284:20:::1;:44:::0;;;;::::1;::::0;;::::1;;::::0;;;-1:-1:-1;4343:41:21;;;-1:-1:-1;4343:41:21::1;::::0;;;;;:48;;-1:-1:-1;;4343:48:21;;::::1;-1:-1:-1::0;4343:48:21;;::::1;::::0;;;4422:22;;;::::1;4405:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;4483:22;;;::::1;4466:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;4544:22;;;::::1;4527:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;4605:22;;;::::1;4588:40:::0;;;;:47;;;;::::1;;::::0;;;4867:22;;4827:19:::1;::::0;4861:85:::1;::::0;4867:22:::1;4827:19:::0;4915:3:::1;4892:20;4893:13:::0;4910:2:::1;4892:20;:::i;:::-;:26;;;;:::i;:::-;4891:54;;;;:::i;:::-;4861:5;:85::i;:::-;4966:22;::::0;4960:83:::1;::::0;-1:-1:-1;;;;;4966:22:21::1;5019:23:::0;5013:2:::1;4991:19;4992:13:::0;5009:1:::1;4991:19;:::i;:::-;:24;;;;:::i;:::-;4990:52;;;;:::i;4960:83::-;5063:17;::::0;5057:43:::1;::::0;-1:-1:-1;;;;;5063:17:21::1;5082;5098:1;5082:13:::0;:17:::1;:::i;5057:43::-;5120:22;::::0;5114:54:::1;::::0;-1:-1:-1;;;;;5120:22:21::1;5164:3;5144:17;:13:::0;5160:1:::1;5144:17;:::i;:::-;:23;;;;:::i;5114:54::-;5188:22;::::0;5182:49:::1;::::0;-1:-1:-1;;;;;5188:22:21::1;5212:18;5228:2;5212:13:::0;:18:::1;:::i;5182:49::-;5303:20;::::0;5338:13:::1;:32:::0;;-1:-1:-1;;;;;;5338:32:21::1;-1:-1:-1::0;;;;;5303:20:21;;::::1;5338:32:::0;;::::1;::::0;;5384:62:::1;5401:4;5303:20:::0;5432:13;5384:8:::1;:62::i;:::-;5492:16;-1:-1:-1::0;;;;;5492:24:21::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5474:56:21::1;;5539:4;5546:16;-1:-1:-1::0;;;;;5546:21:21::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5474:96;::::0;-1:-1:-1;;;;;;5474:96:21::1;::::0;;;;;;-1:-1:-1;;;;;2576:15:43;;;5474:96:21::1;::::0;::::1;2558:34:43::0;2628:15;;2608:18;;;2601:43;2493:18;;5474:96:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5460:11;:110:::0;;-1:-1:-1;;;;;;5460:110:21::1;-1:-1:-1::0;;;;;5460:110:21;;::::1;::::0;;::::1;::::0;;;5620:13:::1;::::0;5584:70:::1;::::0;-1:-1:-1;;;5584:70:21;;5620:13;::::1;5584:70;::::0;::::1;2829:51:43::0;-1:-1:-1;;2896:18:43;;;2889:34;5460:110:21;5584:27:::1;::::0;2802:18:43;;5584:70:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3810:1851;;3423:2238:::0;;;;;;;;457:18934;;640:96:11;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8415:389:2:-;-1:-1:-1;;;;;8498:21:2;;8490:65;;;;-1:-1:-1;;;8490:65:2;;3418:2:43;8490:65:2;;;3400:21:43;3457:2;3437:18;;;3430:30;3496:33;3476:18;;;3469:61;3547:18;;8490:65:2;;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:2;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:2;;3722:25:43;;;-1:-1:-1;;;;;8701:37:2;;;8718:1;;8701:37;;3710:2:43;3695:18;8701:37:2;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;:48::i;:::-;8415:389;;:::o;10123:370::-;-1:-1:-1;;;;;10254:19:2;;10246:68;;;;-1:-1:-1;;;10246:68:2;;3960:2:43;10246:68:2;;;3942:21:43;3999:2;3979:18;;;3972:30;4038:34;4018:18;;;4011:62;-1:-1:-1;;;4089:18:43;;;4082:34;4133:19;;10246:68:2;3758:400:43;10246:68:2;-1:-1:-1;;;;;10332:21:2;;10324:68;;;;-1:-1:-1;;;10324:68:2;;4365:2:43;10324:68:2;;;4347:21:43;4404:2;4384:18;;;4377:30;4443:34;4423:18;;;4416:62;-1:-1:-1;;;4494:18:43;;;4487:32;4536:19;;10324:68:2;4163:398:43;10324:68:2;-1:-1:-1;;;;;10403:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;3722:25:43;;;10454:32:2;;3695:18:43;10454:32:2;;;;;;;10123:370;;;:::o;11795:121::-;;;;:::o;15049:368:21:-;-1:-1:-1;;;;;3508:18:2;;15155:19:21;3508:18:2;;;;;;;;;;;;15204:16:21;15200:158;;-1:-1:-1;;;;;15311:21:21;;;;;;:17;:21;;;;;;15336:11;;15288:19;15302:5;15336:11;15288:19;:::i;:::-;15287:45;;;;:::i;:::-;15261:23;15269:15;15261:5;:23;:::i;:::-;:71;;;;:::i;:::-;15260:87;;;;:::i;:::-;-1:-1:-1;;;;;15236:21:21;;;;;;:17;:21;;;;;:111;15200:158;15368:42;15394:4;15400:2;15404:5;15368:25;;;;;:42;;:::i;:::-;15145:272;15049:368;;;:::o;457:18934::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:18934:21;;;-1:-1:-1;457:18934:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:43;-1:-1:-1;;;;;89:31:43;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1145::-;307:6;315;323;331;339;347;355;363;416:3;404:9;395:7;391:23;387:33;384:53;;;433:1;430;423:12;384:53;462:9;456:16;446:26;;515:2;504:9;500:18;494:25;528:31;553:5;528:31;:::i;:::-;628:2;613:18;;607:25;578:5;;-1:-1:-1;641:33:43;607:25;641:33;:::i;:::-;745:2;730:18;;724:25;693:7;;-1:-1:-1;758:33:43;724:25;758:33;:::i;:::-;862:3;847:19;;841:26;810:7;;-1:-1:-1;876:33:43;841:26;876:33;:::i;:::-;980:3;965:19;;959:26;928:7;;-1:-1:-1;994:33:43;959:26;994:33;:::i;:::-;1098:3;1083:19;;1077:26;1046:7;;-1:-1:-1;1112:33:43;1077:26;1112:33;:::i;:::-;1216:3;1201:19;;1195:26;1164:7;;-1:-1:-1;1230:33:43;1195:26;1230:33;:::i;:::-;1282:7;1272:17;;;150:1145;;;;;;;;;;;:::o;1300:127::-;1361:10;1356:3;1352:20;1349:1;1342:31;1392:4;1389:1;1382:15;1416:4;1413:1;1406:15;1432:168;1472:7;1538:1;1534;1530:6;1526:14;1523:1;1520:21;1515:1;1508:9;1501:17;1497:45;1494:71;;;1545:18;;:::i;:::-;-1:-1:-1;1585:9:43;;1432:168::o;1605:217::-;1645:1;1671;1661:132;;1715:10;1710:3;1706:20;1703:1;1696:31;1750:4;1747:1;1740:15;1778:4;1775:1;1768:15;1661:132;-1:-1:-1;1807:9:43;;1605:217::o;1827:125::-;1867:4;1895:1;1892;1889:8;1886:34;;;1900:18;;:::i;:::-;-1:-1:-1;1937:9:43;;1827:125::o;1957:128::-;1997:3;2028:1;2024:6;2021:1;2018:13;2015:39;;;2034:18;;:::i;:::-;-1:-1:-1;2070:9:43;;1957:128::o;2090:251::-;2160:6;2213:2;2201:9;2192:7;2188:23;2184:32;2181:52;;;2229:1;2226;2219:12;2181:52;2261:9;2255:16;2280:31;2305:5;2280:31;:::i;:::-;2330:5;2090:251;-1:-1:-1;;;2090:251:43:o;2934:277::-;3001:6;3054:2;3042:9;3033:7;3029:23;3025:32;3022:52;;;3070:1;3067;3060:12;3022:52;3102:9;3096:16;3155:5;3148:13;3141:21;3134:5;3131:32;3121:60;;3177:1;3174;3167:12;4566:380;4645:1;4641:12;;;;4688;;;4709:61;;4763:4;4755:6;4751:17;4741:27;;4709:61;4816:2;4808:6;4805:14;4785:18;4782:38;4779:161;;;4862:10;4857:3;4853:20;4850:1;4843:31;4897:4;4894:1;4887:15;4925:4;4922:1;4915:15;4779:161;;4566:380;;;:::o;:::-;457:18934:21;;;;;;",
  "sourcePath": "contracts/ChainEstateToken.sol",
  "type": "contract"
}